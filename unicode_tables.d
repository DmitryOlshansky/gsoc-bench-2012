//Written in the D programming language
/**
 * License: $(WEB boost.org/LICENSE_1_0.txt, Boost License 1.0).
 *
 * Authors: Dmitry Olshansky
 *
 */
//Automatically generated from Unicode Character Database files
import uni;


struct SimpleCaseEntry
{
    uint ch;
    ubyte n, bucket;// n - number in bucket
    @property ubyte size() const
    {
        return bucket & 0x3F;
    }
    @property auto isLower() const
    {
        return bucket & 0x40;
    }
    @property auto isUpper() const
    {
        return bucket & 0x80;
    }
    this(uint dch, ubyte num, ubyte size, bool lower, bool upper)
    {
        ch = dch;
        n = num;
        bucket = size;
        if(lower)
            bucket |= 0x40;
        if(upper)
            bucket |= 0x80;
        
    }
}

struct FullCaseEntry
{
    union
    {
        dchar ch;
        dstring seq;
    }
    ubyte n, size;// n number in batch, size - size of batch
    ubyte entry_len;// ==1 read ch, >1 - seq

    @property auto value()const
    { 
        return entry_len == 1 ? (&ch)[0..1] : cast(dstring)seq;
    }

    this(dstring value, ubyte num, ubyte batch_size)
    {
        assert(value.length < 255);
        entry_len = cast(ubyte)value.length;
        if(value.length == 1)
            ch = value[0];
        else{
            seq = value;
        }
        n = num;
        size = batch_size;
    }
}

struct CompEntry
{
    dchar rhs, composed;
}
immutable simpleCaseTable = [
    SimpleCaseEntry(0x10b7, 0, 2, false, true),
    SimpleCaseEntry(0x2d17, 1, 2, true, false),
    SimpleCaseEntry(0x1e64, 0, 2, false, true),
    SimpleCaseEntry(0x1e65, 1, 2, true, false),
    SimpleCaseEntry(0x1fe9, 0, 2, false, true),
    SimpleCaseEntry(0x1fe1, 1, 2, true, false),
    SimpleCaseEntry(0x216e, 0, 2, false, true),
    SimpleCaseEntry(0x217e, 1, 2, true, false),
    SimpleCaseEntry(0x2c11, 0, 2, false, true),
    SimpleCaseEntry(0x2c41, 1, 2, true, false),
    SimpleCaseEntry(0xa726, 0, 2, false, true),
    SimpleCaseEntry(0xa727, 1, 2, true, false),
    SimpleCaseEntry(0x0186, 0, 2, false, true),
    SimpleCaseEntry(0x0254, 1, 2, true, false),
    SimpleCaseEntry(0x0490, 0, 2, false, true),
    SimpleCaseEntry(0x0491, 1, 2, true, false),
    SimpleCaseEntry(0x10b8, 0, 2, false, true),
    SimpleCaseEntry(0x2d18, 1, 2, true, false),
    SimpleCaseEntry(0x1fea, 0, 2, false, true),
    SimpleCaseEntry(0x1f7a, 1, 2, true, false),
    SimpleCaseEntry(0x216f, 0, 2, false, true),
    SimpleCaseEntry(0x217f, 1, 2, true, false),
    SimpleCaseEntry(0x2c12, 0, 2, false, true),
    SimpleCaseEntry(0x2c42, 1, 2, true, false),
    SimpleCaseEntry(0x0187, 0, 2, false, true),
    SimpleCaseEntry(0x0188, 1, 2, true, false),
    SimpleCaseEntry(0x10b9, 0, 2, false, true),
    SimpleCaseEntry(0x2d19, 1, 2, true, false),
    SimpleCaseEntry(0x1e66, 0, 2, false, true),
    SimpleCaseEntry(0x1e67, 1, 2, true, false),
    SimpleCaseEntry(0x1feb, 0, 2, false, true),
    SimpleCaseEntry(0x1f7b, 1, 2, true, false),
    SimpleCaseEntry(0x2c13, 0, 2, false, true),
    SimpleCaseEntry(0x2c43, 1, 2, true, false),
    SimpleCaseEntry(0xa728, 0, 2, false, true),
    SimpleCaseEntry(0xa729, 1, 2, true, false),
    SimpleCaseEntry(0x0492, 0, 2, false, true),
    SimpleCaseEntry(0x0493, 1, 2, true, false),
    SimpleCaseEntry(0x10ba, 0, 2, false, true),
    SimpleCaseEntry(0x2d1a, 1, 2, true, false),
    SimpleCaseEntry(0x1fec, 0, 2, false, true),
    SimpleCaseEntry(0x1fe5, 1, 2, true, false),
    SimpleCaseEntry(0x2c14, 0, 2, false, true),
    SimpleCaseEntry(0x2c44, 1, 2, true, false),
    SimpleCaseEntry(0x0189, 0, 2, false, true),
    SimpleCaseEntry(0x0256, 1, 2, true, false),
    SimpleCaseEntry(0x10bb, 0, 2, false, true),
    SimpleCaseEntry(0x2d1b, 1, 2, true, false),
    SimpleCaseEntry(0x1e68, 0, 2, false, true),
    SimpleCaseEntry(0x1e69, 1, 2, true, false),
    SimpleCaseEntry(0x2c15, 0, 2, false, true),
    SimpleCaseEntry(0x2c45, 1, 2, true, false),
    SimpleCaseEntry(0xa72a, 0, 2, false, true),
    SimpleCaseEntry(0xa72b, 1, 2, true, false),
    SimpleCaseEntry(0x018a, 0, 2, false, true),
    SimpleCaseEntry(0x0257, 1, 2, true, false),
    SimpleCaseEntry(0x0494, 0, 2, false, true),
    SimpleCaseEntry(0x0495, 1, 2, true, false),
    SimpleCaseEntry(0x10bc, 0, 2, false, true),
    SimpleCaseEntry(0x2d1c, 1, 2, true, false),
    SimpleCaseEntry(0x2c16, 0, 2, false, true),
    SimpleCaseEntry(0x2c46, 1, 2, true, false),
    SimpleCaseEntry(0x018b, 0, 2, false, true),
    SimpleCaseEntry(0x018c, 1, 2, true, false),
    SimpleCaseEntry(0x10bd, 0, 2, false, true),
    SimpleCaseEntry(0x2d1d, 1, 2, true, false),
    SimpleCaseEntry(0x1e6a, 0, 2, false, true),
    SimpleCaseEntry(0x1e6b, 1, 2, true, false),
    SimpleCaseEntry(0x2c17, 0, 2, false, true),
    SimpleCaseEntry(0x2c47, 1, 2, true, false),
    SimpleCaseEntry(0xa72c, 0, 2, false, true),
    SimpleCaseEntry(0xa72d, 1, 2, true, false),
    SimpleCaseEntry(0x0496, 0, 2, false, true),
    SimpleCaseEntry(0x0497, 1, 2, true, false),
    SimpleCaseEntry(0x10be, 0, 2, false, true),
    SimpleCaseEntry(0x2d1e, 1, 2, true, false),
    SimpleCaseEntry(0x2c18, 0, 2, false, true),
    SimpleCaseEntry(0x2c48, 1, 2, true, false),
    SimpleCaseEntry(0x10bf, 0, 2, false, true),
    SimpleCaseEntry(0x2d1f, 1, 2, true, false),
    SimpleCaseEntry(0x1e6c, 0, 2, false, true),
    SimpleCaseEntry(0x1e6d, 1, 2, true, false),
    SimpleCaseEntry(0x2c19, 0, 2, false, true),
    SimpleCaseEntry(0x2c49, 1, 2, true, false),
    SimpleCaseEntry(0xa72e, 0, 2, false, true),
    SimpleCaseEntry(0xa72f, 1, 2, true, false),
    SimpleCaseEntry(0x018e, 0, 2, false, true),
    SimpleCaseEntry(0x01dd, 1, 2, true, false),
    SimpleCaseEntry(0x0498, 0, 2, false, true),
    SimpleCaseEntry(0x0499, 1, 2, true, false),
    SimpleCaseEntry(0x10c0, 0, 2, false, true),
    SimpleCaseEntry(0x2d20, 1, 2, true, false),
    SimpleCaseEntry(0x2c1a, 0, 2, false, true),
    SimpleCaseEntry(0x2c4a, 1, 2, true, false),
    SimpleCaseEntry(0x018f, 0, 2, false, true),
    SimpleCaseEntry(0x0259, 1, 2, true, false),
    SimpleCaseEntry(0x10c1, 0, 2, false, true),
    SimpleCaseEntry(0x2d21, 1, 2, true, false),
    SimpleCaseEntry(0x1e6e, 0, 2, false, true),
    SimpleCaseEntry(0x1e6f, 1, 2, true, false),
    SimpleCaseEntry(0x2c1b, 0, 2, false, true),
    SimpleCaseEntry(0x2c4b, 1, 2, true, false),
    SimpleCaseEntry(0x0190, 0, 2, false, true),
    SimpleCaseEntry(0x025b, 1, 2, true, false),
    SimpleCaseEntry(0x049a, 0, 2, false, true),
    SimpleCaseEntry(0x049b, 1, 2, true, false),
    SimpleCaseEntry(0x10c2, 0, 2, false, true),
    SimpleCaseEntry(0x2d22, 1, 2, true, false),
    SimpleCaseEntry(0x2c1c, 0, 2, false, true),
    SimpleCaseEntry(0x2c4c, 1, 2, true, false),
    SimpleCaseEntry(0x0191, 0, 2, false, true),
    SimpleCaseEntry(0x0192, 1, 2, true, false),
    SimpleCaseEntry(0x10c3, 0, 2, false, true),
    SimpleCaseEntry(0x2d23, 1, 2, true, false),
    SimpleCaseEntry(0x1e70, 0, 2, false, true),
    SimpleCaseEntry(0x1e71, 1, 2, true, false),
    SimpleCaseEntry(0x2c1d, 0, 2, false, true),
    SimpleCaseEntry(0x2c4d, 1, 2, true, false),
    SimpleCaseEntry(0xa732, 0, 2, false, true),
    SimpleCaseEntry(0xa733, 1, 2, true, false),
    SimpleCaseEntry(0x049c, 0, 2, false, true),
    SimpleCaseEntry(0x049d, 1, 2, true, false),
    SimpleCaseEntry(0x10c4, 0, 2, false, true),
    SimpleCaseEntry(0x2d24, 1, 2, true, false),
    SimpleCaseEntry(0x2c1e, 0, 2, false, true),
    SimpleCaseEntry(0x2c4e, 1, 2, true, false),
    SimpleCaseEntry(0x0193, 0, 2, false, true),
    SimpleCaseEntry(0x0260, 1, 2, true, false),
    SimpleCaseEntry(0x10c5, 0, 2, false, true),
    SimpleCaseEntry(0x2d25, 1, 2, true, false),
    SimpleCaseEntry(0x1e72, 0, 2, false, true),
    SimpleCaseEntry(0x1e73, 1, 2, true, false),
    SimpleCaseEntry(0x2c1f, 0, 2, false, true),
    SimpleCaseEntry(0x2c4f, 1, 2, true, false),
    SimpleCaseEntry(0xa734, 0, 2, false, true),
    SimpleCaseEntry(0xa735, 1, 2, true, false),
    SimpleCaseEntry(0x0194, 0, 2, false, true),
    SimpleCaseEntry(0x0263, 1, 2, true, false),
    SimpleCaseEntry(0x049e, 0, 2, false, true),
    SimpleCaseEntry(0x049f, 1, 2, true, false),
    SimpleCaseEntry(0x1ff8, 0, 2, false, true),
    SimpleCaseEntry(0x1f78, 1, 2, true, false),
    SimpleCaseEntry(0x2c20, 0, 2, false, true),
    SimpleCaseEntry(0x2c50, 1, 2, true, false),
    SimpleCaseEntry(0x10c7, 0, 2, false, true),
    SimpleCaseEntry(0x2d27, 1, 2, true, false),
    SimpleCaseEntry(0x1e74, 0, 2, false, true),
    SimpleCaseEntry(0x1e75, 1, 2, true, false),
    SimpleCaseEntry(0x1ff9, 0, 2, false, true),
    SimpleCaseEntry(0x1f79, 1, 2, true, false),
    SimpleCaseEntry(0x2c21, 0, 2, false, true),
    SimpleCaseEntry(0x2c51, 1, 2, true, false),
    SimpleCaseEntry(0xa736, 0, 2, false, true),
    SimpleCaseEntry(0xa737, 1, 2, true, false),
    SimpleCaseEntry(0x0196, 0, 2, false, true),
    SimpleCaseEntry(0x0269, 1, 2, true, false),
    SimpleCaseEntry(0x04a0, 0, 2, false, true),
    SimpleCaseEntry(0x04a1, 1, 2, true, false),
    SimpleCaseEntry(0x1ffa, 0, 2, false, true),
    SimpleCaseEntry(0x1f7c, 1, 2, true, false),
    SimpleCaseEntry(0x2c22, 0, 2, false, true),
    SimpleCaseEntry(0x2c52, 1, 2, true, false),
    SimpleCaseEntry(0x0197, 0, 2, false, true),
    SimpleCaseEntry(0x0268, 1, 2, true, false),
    SimpleCaseEntry(0x1e76, 0, 2, false, true),
    SimpleCaseEntry(0x1e77, 1, 2, true, false),
    SimpleCaseEntry(0x1ffb, 0, 2, false, true),
    SimpleCaseEntry(0x1f7d, 1, 2, true, false),
    SimpleCaseEntry(0x2c23, 0, 2, false, true),
    SimpleCaseEntry(0x2c53, 1, 2, true, false),
    SimpleCaseEntry(0xa738, 0, 2, false, true),
    SimpleCaseEntry(0xa739, 1, 2, true, false),
    SimpleCaseEntry(0x0198, 0, 2, false, true),
    SimpleCaseEntry(0x0199, 1, 2, true, false),
    SimpleCaseEntry(0x04a2, 0, 2, false, true),
    SimpleCaseEntry(0x04a3, 1, 2, true, false),
    SimpleCaseEntry(0x1ffc, 0, 2, false, false),
    SimpleCaseEntry(0x1ff3, 1, 2, true, false),
    SimpleCaseEntry(0x2c24, 0, 2, false, true),
    SimpleCaseEntry(0x2c54, 1, 2, true, false),
    SimpleCaseEntry(0x1e78, 0, 2, false, true),
    SimpleCaseEntry(0x1e79, 1, 2, true, false),
    SimpleCaseEntry(0x2c25, 0, 2, false, true),
    SimpleCaseEntry(0x2c55, 1, 2, true, false),
    SimpleCaseEntry(0xa73a, 0, 2, false, true),
    SimpleCaseEntry(0xa73b, 1, 2, true, false),
    SimpleCaseEntry(0x04a4, 0, 2, false, true),
    SimpleCaseEntry(0x04a5, 1, 2, true, false),
    SimpleCaseEntry(0x2183, 0, 2, false, true),
    SimpleCaseEntry(0x2184, 1, 2, true, false),
    SimpleCaseEntry(0x2c26, 0, 2, false, true),
    SimpleCaseEntry(0x2c56, 1, 2, true, false),
    SimpleCaseEntry(0x10cd, 0, 2, false, true),
    SimpleCaseEntry(0x2d2d, 1, 2, true, false),
    SimpleCaseEntry(0x1e7a, 0, 2, false, true),
    SimpleCaseEntry(0x1e7b, 1, 2, true, false),
    SimpleCaseEntry(0x2c27, 0, 2, false, true),
    SimpleCaseEntry(0x2c57, 1, 2, true, false),
    SimpleCaseEntry(0xa73c, 0, 2, false, true),
    SimpleCaseEntry(0xa73d, 1, 2, true, false),
    SimpleCaseEntry(0x019c, 0, 2, false, true),
    SimpleCaseEntry(0x026f, 1, 2, true, false),
    SimpleCaseEntry(0x04a6, 0, 2, false, true),
    SimpleCaseEntry(0x04a7, 1, 2, true, false),
    SimpleCaseEntry(0x2c28, 0, 2, false, true),
    SimpleCaseEntry(0x2c58, 1, 2, true, false),
    SimpleCaseEntry(0x019d, 0, 2, false, true),
    SimpleCaseEntry(0x0272, 1, 2, true, false),
    SimpleCaseEntry(0x1e7c, 0, 2, false, true),
    SimpleCaseEntry(0x1e7d, 1, 2, true, false),
    SimpleCaseEntry(0x2c29, 0, 2, false, true),
    SimpleCaseEntry(0x2c59, 1, 2, true, false),
    SimpleCaseEntry(0xa73e, 0, 2, false, true),
    SimpleCaseEntry(0xa73f, 1, 2, true, false),
    SimpleCaseEntry(0x04a8, 0, 2, false, true),
    SimpleCaseEntry(0x04a9, 1, 2, true, false),
    SimpleCaseEntry(0x2c2a, 0, 2, false, true),
    SimpleCaseEntry(0x2c5a, 1, 2, true, false),
    SimpleCaseEntry(0x019f, 0, 2, false, true),
    SimpleCaseEntry(0x0275, 1, 2, true, false),
    SimpleCaseEntry(0x1e7e, 0, 2, false, true),
    SimpleCaseEntry(0x1e7f, 1, 2, true, false),
    SimpleCaseEntry(0x2c2b, 0, 2, false, true),
    SimpleCaseEntry(0x2c5b, 1, 2, true, false),
    SimpleCaseEntry(0xa740, 0, 2, false, true),
    SimpleCaseEntry(0xa741, 1, 2, true, false),
    SimpleCaseEntry(0x01a0, 0, 2, false, true),
    SimpleCaseEntry(0x01a1, 1, 2, true, false),
    SimpleCaseEntry(0x04aa, 0, 2, false, true),
    SimpleCaseEntry(0x04ab, 1, 2, true, false),
    SimpleCaseEntry(0x2c2c, 0, 2, false, true),
    SimpleCaseEntry(0x2c5c, 1, 2, true, false),
    SimpleCaseEntry(0x1e80, 0, 2, false, true),
    SimpleCaseEntry(0x1e81, 1, 2, true, false),
    SimpleCaseEntry(0x2c2d, 0, 2, false, true),
    SimpleCaseEntry(0x2c5d, 1, 2, true, false),
    SimpleCaseEntry(0xa742, 0, 2, false, true),
    SimpleCaseEntry(0xa743, 1, 2, true, false),
    SimpleCaseEntry(0x01a2, 0, 2, false, true),
    SimpleCaseEntry(0x01a3, 1, 2, true, false),
    SimpleCaseEntry(0x04ac, 0, 2, false, true),
    SimpleCaseEntry(0x04ad, 1, 2, true, false),
    SimpleCaseEntry(0x2c2e, 0, 2, false, true),
    SimpleCaseEntry(0x2c5e, 1, 2, true, false),
    SimpleCaseEntry(0x1e82, 0, 2, false, true),
    SimpleCaseEntry(0x1e83, 1, 2, true, false),
    SimpleCaseEntry(0xa744, 0, 2, false, true),
    SimpleCaseEntry(0xa745, 1, 2, true, false),
    SimpleCaseEntry(0x01a4, 0, 2, false, true),
    SimpleCaseEntry(0x01a5, 1, 2, true, false),
    SimpleCaseEntry(0x04ae, 0, 2, false, true),
    SimpleCaseEntry(0x04af, 1, 2, true, false),
    SimpleCaseEntry(0x1e84, 0, 2, false, true),
    SimpleCaseEntry(0x1e85, 1, 2, true, false),
    SimpleCaseEntry(0xa746, 0, 2, false, true),
    SimpleCaseEntry(0xa747, 1, 2, true, false),
    SimpleCaseEntry(0x01a6, 0, 2, false, true),
    SimpleCaseEntry(0x0280, 1, 2, true, false),
    SimpleCaseEntry(0x04b0, 0, 2, false, true),
    SimpleCaseEntry(0x04b1, 1, 2, true, false),
    SimpleCaseEntry(0x01a7, 0, 2, false, true),
    SimpleCaseEntry(0x01a8, 1, 2, true, false),
    SimpleCaseEntry(0x1e86, 0, 2, false, true),
    SimpleCaseEntry(0x1e87, 1, 2, true, false),
    SimpleCaseEntry(0xa748, 0, 2, false, true),
    SimpleCaseEntry(0xa749, 1, 2, true, false),
    SimpleCaseEntry(0x04b2, 0, 2, false, true),
    SimpleCaseEntry(0x04b3, 1, 2, true, false),
    SimpleCaseEntry(0x01a9, 0, 2, false, true),
    SimpleCaseEntry(0x0283, 1, 2, true, false),
    SimpleCaseEntry(0x1e88, 0, 2, false, true),
    SimpleCaseEntry(0x1e89, 1, 2, true, false),
    SimpleCaseEntry(0xa74a, 0, 2, false, true),
    SimpleCaseEntry(0xa74b, 1, 2, true, false),
    SimpleCaseEntry(0x04b4, 0, 2, false, true),
    SimpleCaseEntry(0x04b5, 1, 2, true, false),
    SimpleCaseEntry(0x1e8a, 0, 2, false, true),
    SimpleCaseEntry(0x1e8b, 1, 2, true, false),
    SimpleCaseEntry(0xa74c, 0, 2, false, true),
    SimpleCaseEntry(0xa74d, 1, 2, true, false),
    SimpleCaseEntry(0x01ac, 0, 2, false, true),
    SimpleCaseEntry(0x01ad, 1, 2, true, false),
    SimpleCaseEntry(0x04b6, 0, 2, false, true),
    SimpleCaseEntry(0x04b7, 1, 2, true, false),
    SimpleCaseEntry(0x1e8c, 0, 2, false, true),
    SimpleCaseEntry(0x1e8d, 1, 2, true, false),
    SimpleCaseEntry(0xa74e, 0, 2, false, true),
    SimpleCaseEntry(0xa74f, 1, 2, true, false),
    SimpleCaseEntry(0x01ae, 0, 2, false, true),
    SimpleCaseEntry(0x0288, 1, 2, true, false),
    SimpleCaseEntry(0x04b8, 0, 2, false, true),
    SimpleCaseEntry(0x04b9, 1, 2, true, false),
    SimpleCaseEntry(0x10400, 0, 2, false, true),
    SimpleCaseEntry(0x10428, 1, 2, true, false),
    SimpleCaseEntry(0x01af, 0, 2, false, true),
    SimpleCaseEntry(0x01b0, 1, 2, true, false),
    SimpleCaseEntry(0x1e8e, 0, 2, false, true),
    SimpleCaseEntry(0x1e8f, 1, 2, true, false),
    SimpleCaseEntry(0xa750, 0, 2, false, true),
    SimpleCaseEntry(0xa751, 1, 2, true, false),
    SimpleCaseEntry(0x10401, 0, 2, false, true),
    SimpleCaseEntry(0x10429, 1, 2, true, false),
    SimpleCaseEntry(0x04ba, 0, 2, false, true),
    SimpleCaseEntry(0x04bb, 1, 2, true, false),
    SimpleCaseEntry(0x10402, 0, 2, false, true),
    SimpleCaseEntry(0x1042a, 1, 2, true, false),
    SimpleCaseEntry(0x01b1, 0, 2, false, true),
    SimpleCaseEntry(0x028a, 1, 2, true, false),
    SimpleCaseEntry(0x1e90, 0, 2, false, true),
    SimpleCaseEntry(0x1e91, 1, 2, true, false),
    SimpleCaseEntry(0xa752, 0, 2, false, true),
    SimpleCaseEntry(0xa753, 1, 2, true, false),
    SimpleCaseEntry(0x10403, 0, 2, false, true),
    SimpleCaseEntry(0x1042b, 1, 2, true, false),
    SimpleCaseEntry(0x01b2, 0, 2, false, true),
    SimpleCaseEntry(0x028b, 1, 2, true, false),
    SimpleCaseEntry(0x04bc, 0, 2, false, true),
    SimpleCaseEntry(0x04bd, 1, 2, true, false),
    SimpleCaseEntry(0x10404, 0, 2, false, true),
    SimpleCaseEntry(0x1042c, 1, 2, true, false),
    SimpleCaseEntry(0x01b3, 0, 2, false, true),
    SimpleCaseEntry(0x01b4, 1, 2, true, false),
    SimpleCaseEntry(0x1e92, 0, 2, false, true),
    SimpleCaseEntry(0x1e93, 1, 2, true, false),
    SimpleCaseEntry(0xa754, 0, 2, false, true),
    SimpleCaseEntry(0xa755, 1, 2, true, false),
    SimpleCaseEntry(0x10405, 0, 2, false, true),
    SimpleCaseEntry(0x1042d, 1, 2, true, false),
    SimpleCaseEntry(0x04be, 0, 2, false, true),
    SimpleCaseEntry(0x04bf, 1, 2, true, false),
    SimpleCaseEntry(0x10406, 0, 2, false, true),
    SimpleCaseEntry(0x1042e, 1, 2, true, false),
    SimpleCaseEntry(0x01b5, 0, 2, false, true),
    SimpleCaseEntry(0x01b6, 1, 2, true, false),
    SimpleCaseEntry(0x1e94, 0, 2, false, true),
    SimpleCaseEntry(0x1e95, 1, 2, true, false),
    SimpleCaseEntry(0xa756, 0, 2, false, true),
    SimpleCaseEntry(0xa757, 1, 2, true, false),
    SimpleCaseEntry(0x10407, 0, 2, false, true),
    SimpleCaseEntry(0x1042f, 1, 2, true, false),
    SimpleCaseEntry(0x04c0, 0, 2, false, true),
    SimpleCaseEntry(0x04cf, 1, 2, true, false),
    SimpleCaseEntry(0x10408, 0, 2, false, true),
    SimpleCaseEntry(0x10430, 1, 2, true, false),
    SimpleCaseEntry(0x01b7, 0, 2, false, true),
    SimpleCaseEntry(0x0292, 1, 2, true, false),
    SimpleCaseEntry(0x04c1, 0, 2, false, true),
    SimpleCaseEntry(0x04c2, 1, 2, true, false),
    SimpleCaseEntry(0xa758, 0, 2, false, true),
    SimpleCaseEntry(0xa759, 1, 2, true, false),
    SimpleCaseEntry(0x10409, 0, 2, false, true),
    SimpleCaseEntry(0x10431, 1, 2, true, false),
    SimpleCaseEntry(0x01b8, 0, 2, false, true),
    SimpleCaseEntry(0x01b9, 1, 2, true, false),
    SimpleCaseEntry(0x1040a, 0, 2, false, true),
    SimpleCaseEntry(0x10432, 1, 2, true, false),
    SimpleCaseEntry(0x04c3, 0, 2, false, true),
    SimpleCaseEntry(0x04c4, 1, 2, true, false),
    SimpleCaseEntry(0xa75a, 0, 2, false, true),
    SimpleCaseEntry(0xa75b, 1, 2, true, false),
    SimpleCaseEntry(0x1040b, 0, 2, false, true),
    SimpleCaseEntry(0x10433, 1, 2, true, false),
    SimpleCaseEntry(0x1040c, 0, 2, false, true),
    SimpleCaseEntry(0x10434, 1, 2, true, false),
    SimpleCaseEntry(0x04c5, 0, 2, false, true),
    SimpleCaseEntry(0x04c6, 1, 2, true, false),
    SimpleCaseEntry(0xa75c, 0, 2, false, true),
    SimpleCaseEntry(0xa75d, 1, 2, true, false),
    SimpleCaseEntry(0x1040d, 0, 2, false, true),
    SimpleCaseEntry(0x10435, 1, 2, true, false),
    SimpleCaseEntry(0x01bc, 0, 2, false, true),
    SimpleCaseEntry(0x01bd, 1, 2, true, false),
    SimpleCaseEntry(0x1e9b, 0, 3, true, false),
    SimpleCaseEntry(0x1e61, 1, 3, true, false),
    SimpleCaseEntry(0x1e60, 2, 3, false, true),
    SimpleCaseEntry(0x1040e, 0, 2, false, true),
    SimpleCaseEntry(0x10436, 1, 2, true, false),
    SimpleCaseEntry(0x04c7, 0, 2, false, true),
    SimpleCaseEntry(0x04c8, 1, 2, true, false),
    SimpleCaseEntry(0xa75e, 0, 2, false, true),
    SimpleCaseEntry(0xa75f, 1, 2, true, false),
    SimpleCaseEntry(0x1040f, 0, 2, false, true),
    SimpleCaseEntry(0x10437, 1, 2, true, false),
    SimpleCaseEntry(0x10410, 0, 2, false, true),
    SimpleCaseEntry(0x10438, 1, 2, true, false),
    SimpleCaseEntry(0x04c9, 0, 2, false, true),
    SimpleCaseEntry(0x04ca, 1, 2, true, false),
    SimpleCaseEntry(0x1e9e, 0, 2, false, true),
    SimpleCaseEntry(0x00df, 1, 2, true, false),
    SimpleCaseEntry(0xa760, 0, 2, false, true),
    SimpleCaseEntry(0xa761, 1, 2, true, false),
    SimpleCaseEntry(0x10411, 0, 2, false, true),
    SimpleCaseEntry(0x10439, 1, 2, true, false),
    SimpleCaseEntry(0x0345, 0, 4, true, false),
    SimpleCaseEntry(0x03b9, 1, 4, true, false),
    SimpleCaseEntry(0x0399, 2, 4, false, true),
    SimpleCaseEntry(0x1fbe, 3, 4, true, false),
    SimpleCaseEntry(0x10412, 0, 2, false, true),
    SimpleCaseEntry(0x1043a, 1, 2, true, false),
    SimpleCaseEntry(0x04cb, 0, 2, false, true),
    SimpleCaseEntry(0x04cc, 1, 2, true, false),
    SimpleCaseEntry(0x1ea0, 0, 2, false, true),
    SimpleCaseEntry(0x1ea1, 1, 2, true, false),
    SimpleCaseEntry(0xa762, 0, 2, false, true),
    SimpleCaseEntry(0xa763, 1, 2, true, false),
    SimpleCaseEntry(0x10413, 0, 2, false, true),
    SimpleCaseEntry(0x1043b, 1, 2, true, false),
    SimpleCaseEntry(0x10414, 0, 2, false, true),
    SimpleCaseEntry(0x1043c, 1, 2, true, false),
    SimpleCaseEntry(0x04cd, 0, 2, false, true),
    SimpleCaseEntry(0x04ce, 1, 2, true, false),
    SimpleCaseEntry(0x1ea2, 0, 2, false, true),
    SimpleCaseEntry(0x1ea3, 1, 2, true, false),
    SimpleCaseEntry(0x24b6, 0, 2, false, true),
    SimpleCaseEntry(0x24d0, 1, 2, true, false),
    SimpleCaseEntry(0xa764, 0, 2, false, true),
    SimpleCaseEntry(0xa765, 1, 2, true, false),
    SimpleCaseEntry(0x10415, 0, 2, false, true),
    SimpleCaseEntry(0x1043d, 1, 2, true, false),
    SimpleCaseEntry(0x01c4, 0, 3, false, true),
    SimpleCaseEntry(0x01c6, 1, 3, true, false),
    SimpleCaseEntry(0x01c5, 2, 3, false, false),
    SimpleCaseEntry(0x24b7, 0, 2, false, true),
    SimpleCaseEntry(0x24d1, 1, 2, true, false),
    SimpleCaseEntry(0x10416, 0, 2, false, true),
    SimpleCaseEntry(0x1043e, 1, 2, true, false),
    SimpleCaseEntry(0x01c5, 0, 3, false, false),
    SimpleCaseEntry(0x01c6, 1, 3, true, false),
    SimpleCaseEntry(0x01c4, 2, 3, false, true),
    SimpleCaseEntry(0x1ea4, 0, 2, false, true),
    SimpleCaseEntry(0x1ea5, 1, 2, true, false),
    SimpleCaseEntry(0x24b8, 0, 2, false, true),
    SimpleCaseEntry(0x24d2, 1, 2, true, false),
    SimpleCaseEntry(0xa766, 0, 2, false, true),
    SimpleCaseEntry(0xa767, 1, 2, true, false),
    SimpleCaseEntry(0x10417, 0, 2, false, true),
    SimpleCaseEntry(0x1043f, 1, 2, true, false),
    SimpleCaseEntry(0x0041, 0, 2, false, true),
    SimpleCaseEntry(0x0061, 1, 2, true, false),
    SimpleCaseEntry(0x04d0, 0, 2, false, true),
    SimpleCaseEntry(0x04d1, 1, 2, true, false),
    SimpleCaseEntry(0x24b9, 0, 2, false, true),
    SimpleCaseEntry(0x24d3, 1, 2, true, false),
    SimpleCaseEntry(0x10418, 0, 2, false, true),
    SimpleCaseEntry(0x10440, 1, 2, true, false),
    SimpleCaseEntry(0x0042, 0, 2, false, true),
    SimpleCaseEntry(0x0062, 1, 2, true, false),
    SimpleCaseEntry(0x01c7, 0, 3, false, true),
    SimpleCaseEntry(0x01c9, 1, 3, true, false),
    SimpleCaseEntry(0x01c8, 2, 3, false, false),
    SimpleCaseEntry(0x1ea6, 0, 2, false, true),
    SimpleCaseEntry(0x1ea7, 1, 2, true, false),
    SimpleCaseEntry(0x24ba, 0, 2, false, true),
    SimpleCaseEntry(0x24d4, 1, 2, true, false),
    SimpleCaseEntry(0xa768, 0, 2, false, true),
    SimpleCaseEntry(0xa769, 1, 2, true, false),
    SimpleCaseEntry(0x10419, 0, 2, false, true),
    SimpleCaseEntry(0x10441, 1, 2, true, false),
    SimpleCaseEntry(0x0043, 0, 2, false, true),
    SimpleCaseEntry(0x0063, 1, 2, true, false),
    SimpleCaseEntry(0x01c8, 0, 3, false, false),
    SimpleCaseEntry(0x01c9, 1, 3, true, false),
    SimpleCaseEntry(0x01c7, 2, 3, false, true),
    SimpleCaseEntry(0x04d2, 0, 2, false, true),
    SimpleCaseEntry(0x04d3, 1, 2, true, false),
    SimpleCaseEntry(0x24bb, 0, 2, false, true),
    SimpleCaseEntry(0x24d5, 1, 2, true, false),
    SimpleCaseEntry(0x1041a, 0, 2, false, true),
    SimpleCaseEntry(0x10442, 1, 2, true, false),
    SimpleCaseEntry(0x0044, 0, 2, false, true),
    SimpleCaseEntry(0x0064, 1, 2, true, false),
    SimpleCaseEntry(0x1ea8, 0, 2, false, true),
    SimpleCaseEntry(0x1ea9, 1, 2, true, false),
    SimpleCaseEntry(0x24bc, 0, 2, false, true),
    SimpleCaseEntry(0x24d6, 1, 2, true, false),
    SimpleCaseEntry(0xa76a, 0, 2, false, true),
    SimpleCaseEntry(0xa76b, 1, 2, true, false),
    SimpleCaseEntry(0x1041b, 0, 2, false, true),
    SimpleCaseEntry(0x10443, 1, 2, true, false),
    SimpleCaseEntry(0x0045, 0, 2, false, true),
    SimpleCaseEntry(0x0065, 1, 2, true, false),
    SimpleCaseEntry(0x01ca, 0, 3, false, true),
    SimpleCaseEntry(0x01cc, 1, 3, true, false),
    SimpleCaseEntry(0x01cb, 2, 3, false, false),
    SimpleCaseEntry(0x04d4, 0, 2, false, true),
    SimpleCaseEntry(0x04d5, 1, 2, true, false),
    SimpleCaseEntry(0x24bd, 0, 2, false, true),
    SimpleCaseEntry(0x24d7, 1, 2, true, false),
    SimpleCaseEntry(0x1041c, 0, 2, false, true),
    SimpleCaseEntry(0x10444, 1, 2, true, false),
    SimpleCaseEntry(0x0046, 0, 2, false, true),
    SimpleCaseEntry(0x0066, 1, 2, true, false),
    SimpleCaseEntry(0x01cb, 0, 3, false, false),
    SimpleCaseEntry(0x01cc, 1, 3, true, false),
    SimpleCaseEntry(0x01ca, 2, 3, false, true),
    SimpleCaseEntry(0x1eaa, 0, 2, false, true),
    SimpleCaseEntry(0x1eab, 1, 2, true, false),
    SimpleCaseEntry(0x24be, 0, 2, false, true),
    SimpleCaseEntry(0x24d8, 1, 2, true, false),
    SimpleCaseEntry(0xa76c, 0, 2, false, true),
    SimpleCaseEntry(0xa76d, 1, 2, true, false),
    SimpleCaseEntry(0x1041d, 0, 2, false, true),
    SimpleCaseEntry(0x10445, 1, 2, true, false),
    SimpleCaseEntry(0x0047, 0, 2, false, true),
    SimpleCaseEntry(0x0067, 1, 2, true, false),
    SimpleCaseEntry(0x04d6, 0, 2, false, true),
    SimpleCaseEntry(0x04d7, 1, 2, true, false),
    SimpleCaseEntry(0x24bf, 0, 2, false, true),
    SimpleCaseEntry(0x24d9, 1, 2, true, false),
    SimpleCaseEntry(0x1041e, 0, 2, false, true),
    SimpleCaseEntry(0x10446, 1, 2, true, false),
    SimpleCaseEntry(0x0048, 0, 2, false, true),
    SimpleCaseEntry(0x0068, 1, 2, true, false),
    SimpleCaseEntry(0x01cd, 0, 2, false, true),
    SimpleCaseEntry(0x01ce, 1, 2, true, false),
    SimpleCaseEntry(0x1eac, 0, 2, false, true),
    SimpleCaseEntry(0x1ead, 1, 2, true, false),
    SimpleCaseEntry(0x24c0, 0, 2, false, true),
    SimpleCaseEntry(0x24da, 1, 2, true, false),
    SimpleCaseEntry(0xa76e, 0, 2, false, true),
    SimpleCaseEntry(0xa76f, 1, 2, true, false),
    SimpleCaseEntry(0x1041f, 0, 2, false, true),
    SimpleCaseEntry(0x10447, 1, 2, true, false),
    SimpleCaseEntry(0x0049, 0, 2, false, true),
    SimpleCaseEntry(0x0069, 1, 2, true, false),
    SimpleCaseEntry(0x04d8, 0, 2, false, true),
    SimpleCaseEntry(0x04d9, 1, 2, true, false),
    SimpleCaseEntry(0x24c1, 0, 2, false, true),
    SimpleCaseEntry(0x24db, 1, 2, true, false),
    SimpleCaseEntry(0x10420, 0, 2, false, true),
    SimpleCaseEntry(0x10448, 1, 2, true, false),
    SimpleCaseEntry(0x004a, 0, 2, false, true),
    SimpleCaseEntry(0x006a, 1, 2, true, false),
    SimpleCaseEntry(0x01cf, 0, 2, false, true),
    SimpleCaseEntry(0x01d0, 1, 2, true, false),
    SimpleCaseEntry(0x1eae, 0, 2, false, true),
    SimpleCaseEntry(0x1eaf, 1, 2, true, false),
    SimpleCaseEntry(0x24c2, 0, 2, false, true),
    SimpleCaseEntry(0x24dc, 1, 2, true, false),
    SimpleCaseEntry(0x10421, 0, 2, false, true),
    SimpleCaseEntry(0x10449, 1, 2, true, false),
    SimpleCaseEntry(0x004b, 0, 3, false, true),
    SimpleCaseEntry(0x006b, 1, 3, true, false),
    SimpleCaseEntry(0x212a, 2, 3, false, true),
    SimpleCaseEntry(0x04da, 0, 2, false, true),
    SimpleCaseEntry(0x04db, 1, 2, true, false),
    SimpleCaseEntry(0x24c3, 0, 2, false, true),
    SimpleCaseEntry(0x24dd, 1, 2, true, false),
    SimpleCaseEntry(0x10422, 0, 2, false, true),
    SimpleCaseEntry(0x1044a, 1, 2, true, false),
    SimpleCaseEntry(0x004c, 0, 2, false, true),
    SimpleCaseEntry(0x006c, 1, 2, true, false),
    SimpleCaseEntry(0x01d1, 0, 2, false, true),
    SimpleCaseEntry(0x01d2, 1, 2, true, false),
    SimpleCaseEntry(0x1eb0, 0, 2, false, true),
    SimpleCaseEntry(0x1eb1, 1, 2, true, false),
    SimpleCaseEntry(0x24c4, 0, 2, false, true),
    SimpleCaseEntry(0x24de, 1, 2, true, false),
    SimpleCaseEntry(0x10423, 0, 2, false, true),
    SimpleCaseEntry(0x1044b, 1, 2, true, false),
    SimpleCaseEntry(0x004d, 0, 2, false, true),
    SimpleCaseEntry(0x006d, 1, 2, true, false),
    SimpleCaseEntry(0x04dc, 0, 2, false, true),
    SimpleCaseEntry(0x04dd, 1, 2, true, false),
    SimpleCaseEntry(0x24c5, 0, 2, false, true),
    SimpleCaseEntry(0x24df, 1, 2, true, false),
    SimpleCaseEntry(0x10424, 0, 2, false, true),
    SimpleCaseEntry(0x1044c, 1, 2, true, false),
    SimpleCaseEntry(0x004e, 0, 2, false, true),
    SimpleCaseEntry(0x006e, 1, 2, true, false),
    SimpleCaseEntry(0x01d3, 0, 2, false, true),
    SimpleCaseEntry(0x01d4, 1, 2, true, false),
    SimpleCaseEntry(0x1eb2, 0, 2, false, true),
    SimpleCaseEntry(0x1eb3, 1, 2, true, false),
    SimpleCaseEntry(0x24c6, 0, 2, false, true),
    SimpleCaseEntry(0x24e0, 1, 2, true, false),
    SimpleCaseEntry(0x10425, 0, 2, false, true),
    SimpleCaseEntry(0x1044d, 1, 2, true, false),
    SimpleCaseEntry(0x004f, 0, 2, false, true),
    SimpleCaseEntry(0x006f, 1, 2, true, false),
    SimpleCaseEntry(0x04de, 0, 2, false, true),
    SimpleCaseEntry(0x04df, 1, 2, true, false),
    SimpleCaseEntry(0x24c7, 0, 2, false, true),
    SimpleCaseEntry(0x24e1, 1, 2, true, false),
    SimpleCaseEntry(0x2c60, 0, 2, false, true),
    SimpleCaseEntry(0x2c61, 1, 2, true, false),
    SimpleCaseEntry(0x10426, 0, 2, false, true),
    SimpleCaseEntry(0x1044e, 1, 2, true, false),
    SimpleCaseEntry(0x0050, 0, 2, false, true),
    SimpleCaseEntry(0x0070, 1, 2, true, false),
    SimpleCaseEntry(0x01d5, 0, 2, false, true),
    SimpleCaseEntry(0x01d6, 1, 2, true, false),
    SimpleCaseEntry(0x1eb4, 0, 2, false, true),
    SimpleCaseEntry(0x1eb5, 1, 2, true, false),
    SimpleCaseEntry(0x24c8, 0, 2, false, true),
    SimpleCaseEntry(0x24e2, 1, 2, true, false),
    SimpleCaseEntry(0x10427, 0, 2, false, true),
    SimpleCaseEntry(0x1044f, 1, 2, true, false),
    SimpleCaseEntry(0x0051, 0, 2, false, true),
    SimpleCaseEntry(0x0071, 1, 2, true, false),
    SimpleCaseEntry(0x04e0, 0, 2, false, true),
    SimpleCaseEntry(0x04e1, 1, 2, true, false),
    SimpleCaseEntry(0x24c9, 0, 2, false, true),
    SimpleCaseEntry(0x24e3, 1, 2, true, false),
    SimpleCaseEntry(0x2c62, 0, 2, false, true),
    SimpleCaseEntry(0x026b, 1, 2, true, false),
    SimpleCaseEntry(0x0052, 0, 2, false, true),
    SimpleCaseEntry(0x0072, 1, 2, true, false),
    SimpleCaseEntry(0x01d7, 0, 2, false, true),
    SimpleCaseEntry(0x01d8, 1, 2, true, false),
    SimpleCaseEntry(0x1eb6, 0, 2, false, true),
    SimpleCaseEntry(0x1eb7, 1, 2, true, false),
    SimpleCaseEntry(0x24ca, 0, 2, false, true),
    SimpleCaseEntry(0x24e4, 1, 2, true, false),
    SimpleCaseEntry(0x2c63, 0, 2, false, true),
    SimpleCaseEntry(0x1d7d, 1, 2, true, false),
    SimpleCaseEntry(0x0053, 0, 3, false, true),
    SimpleCaseEntry(0x0073, 1, 3, true, false),
    SimpleCaseEntry(0x017f, 2, 3, true, false),
    SimpleCaseEntry(0x04e2, 0, 2, false, true),
    SimpleCaseEntry(0x04e3, 1, 2, true, false),
    SimpleCaseEntry(0x24cb, 0, 2, false, true),
    SimpleCaseEntry(0x24e5, 1, 2, true, false),
    SimpleCaseEntry(0x2c64, 0, 2, false, true),
    SimpleCaseEntry(0x027d, 1, 2, true, false),
    SimpleCaseEntry(0xa779, 0, 2, false, true),
    SimpleCaseEntry(0xa77a, 1, 2, true, false),
    SimpleCaseEntry(0x0054, 0, 2, false, true),
    SimpleCaseEntry(0x0074, 1, 2, true, false),
    SimpleCaseEntry(0x01d9, 0, 2, false, true),
    SimpleCaseEntry(0x01da, 1, 2, true, false),
    SimpleCaseEntry(0x1eb8, 0, 2, false, true),
    SimpleCaseEntry(0x1eb9, 1, 2, true, false),
    SimpleCaseEntry(0x24cc, 0, 2, false, true),
    SimpleCaseEntry(0x24e6, 1, 2, true, false),
    SimpleCaseEntry(0x0055, 0, 2, false, true),
    SimpleCaseEntry(0x0075, 1, 2, true, false),
    SimpleCaseEntry(0x04e4, 0, 2, false, true),
    SimpleCaseEntry(0x04e5, 1, 2, true, false),
    SimpleCaseEntry(0x24cd, 0, 2, false, true),
    SimpleCaseEntry(0x24e7, 1, 2, true, false),
    SimpleCaseEntry(0xa77b, 0, 2, false, true),
    SimpleCaseEntry(0xa77c, 1, 2, true, false),
    SimpleCaseEntry(0x0056, 0, 2, false, true),
    SimpleCaseEntry(0x0076, 1, 2, true, false),
    SimpleCaseEntry(0x01db, 0, 2, false, true),
    SimpleCaseEntry(0x01dc, 1, 2, true, false),
    SimpleCaseEntry(0x1eba, 0, 2, false, true),
    SimpleCaseEntry(0x1ebb, 1, 2, true, false),
    SimpleCaseEntry(0x24ce, 0, 2, false, true),
    SimpleCaseEntry(0x24e8, 1, 2, true, false),
    SimpleCaseEntry(0x2c67, 0, 2, false, true),
    SimpleCaseEntry(0x2c68, 1, 2, true, false),
    SimpleCaseEntry(0x0057, 0, 2, false, true),
    SimpleCaseEntry(0x0077, 1, 2, true, false),
    SimpleCaseEntry(0x04e6, 0, 2, false, true),
    SimpleCaseEntry(0x04e7, 1, 2, true, false),
    SimpleCaseEntry(0x24cf, 0, 2, false, true),
    SimpleCaseEntry(0x24e9, 1, 2, true, false),
    SimpleCaseEntry(0xa77d, 0, 2, false, true),
    SimpleCaseEntry(0x1d79, 1, 2, true, false),
    SimpleCaseEntry(0x0058, 0, 2, false, true),
    SimpleCaseEntry(0x0078, 1, 2, true, false),
    SimpleCaseEntry(0x1ebc, 0, 2, false, true),
    SimpleCaseEntry(0x1ebd, 1, 2, true, false),
    SimpleCaseEntry(0x2c69, 0, 2, false, true),
    SimpleCaseEntry(0x2c6a, 1, 2, true, false),
    SimpleCaseEntry(0xa77e, 0, 2, false, true),
    SimpleCaseEntry(0xa77f, 1, 2, true, false),
    SimpleCaseEntry(0x0059, 0, 2, false, true),
    SimpleCaseEntry(0x0079, 1, 2, true, false),
    SimpleCaseEntry(0x01de, 0, 2, false, true),
    SimpleCaseEntry(0x01df, 1, 2, true, false),
    SimpleCaseEntry(0x04e8, 0, 2, false, true),
    SimpleCaseEntry(0x04e9, 1, 2, true, false),
    SimpleCaseEntry(0x005a, 0, 2, false, true),
    SimpleCaseEntry(0x007a, 1, 2, true, false),
    SimpleCaseEntry(0x1ebe, 0, 2, false, true),
    SimpleCaseEntry(0x1ebf, 1, 2, true, false),
    SimpleCaseEntry(0x2c6b, 0, 2, false, true),
    SimpleCaseEntry(0x2c6c, 1, 2, true, false),
    SimpleCaseEntry(0xa780, 0, 2, false, true),
    SimpleCaseEntry(0xa781, 1, 2, true, false),
    SimpleCaseEntry(0x01e0, 0, 2, false, true),
    SimpleCaseEntry(0x01e1, 1, 2, true, false),
    SimpleCaseEntry(0x04ea, 0, 2, false, true),
    SimpleCaseEntry(0x04eb, 1, 2, true, false),
    SimpleCaseEntry(0x1ec0, 0, 2, false, true),
    SimpleCaseEntry(0x1ec1, 1, 2, true, false),
    SimpleCaseEntry(0x2c6d, 0, 2, false, true),
    SimpleCaseEntry(0x0251, 1, 2, true, false),
    SimpleCaseEntry(0xa782, 0, 2, false, true),
    SimpleCaseEntry(0xa783, 1, 2, true, false),
    SimpleCaseEntry(0x01e2, 0, 2, false, true),
    SimpleCaseEntry(0x01e3, 1, 2, true, false),
    SimpleCaseEntry(0x04ec, 0, 2, false, true),
    SimpleCaseEntry(0x04ed, 1, 2, true, false),
    SimpleCaseEntry(0x2c6e, 0, 2, false, true),
    SimpleCaseEntry(0x0271, 1, 2, true, false),
    SimpleCaseEntry(0x1ec2, 0, 2, false, true),
    SimpleCaseEntry(0x1ec3, 1, 2, true, false),
    SimpleCaseEntry(0x2c6f, 0, 2, false, true),
    SimpleCaseEntry(0x0250, 1, 2, true, false),
    SimpleCaseEntry(0xa784, 0, 2, false, true),
    SimpleCaseEntry(0xa785, 1, 2, true, false),
    SimpleCaseEntry(0x01e4, 0, 2, false, true),
    SimpleCaseEntry(0x01e5, 1, 2, true, false),
    SimpleCaseEntry(0x04ee, 0, 2, false, true),
    SimpleCaseEntry(0x04ef, 1, 2, true, false),
    SimpleCaseEntry(0x2c70, 0, 2, false, true),
    SimpleCaseEntry(0x0252, 1, 2, true, false),
    SimpleCaseEntry(0x1ec4, 0, 2, false, true),
    SimpleCaseEntry(0x1ec5, 1, 2, true, false),
    SimpleCaseEntry(0xa786, 0, 2, false, true),
    SimpleCaseEntry(0xa787, 1, 2, true, false),
    SimpleCaseEntry(0x01e6, 0, 2, false, true),
    SimpleCaseEntry(0x01e7, 1, 2, true, false),
    SimpleCaseEntry(0x04f0, 0, 2, false, true),
    SimpleCaseEntry(0x04f1, 1, 2, true, false),
    SimpleCaseEntry(0x2c72, 0, 2, false, true),
    SimpleCaseEntry(0x2c73, 1, 2, true, false),
    SimpleCaseEntry(0x1ec6, 0, 2, false, true),
    SimpleCaseEntry(0x1ec7, 1, 2, true, false),
    SimpleCaseEntry(0x01e8, 0, 2, false, true),
    SimpleCaseEntry(0x01e9, 1, 2, true, false),
    SimpleCaseEntry(0x04f2, 0, 2, false, true),
    SimpleCaseEntry(0x04f3, 1, 2, true, false),
    SimpleCaseEntry(0x1ec8, 0, 2, false, true),
    SimpleCaseEntry(0x1ec9, 1, 2, true, false),
    SimpleCaseEntry(0x2c75, 0, 2, false, true),
    SimpleCaseEntry(0x2c76, 1, 2, true, false),
    SimpleCaseEntry(0x01ea, 0, 2, false, true),
    SimpleCaseEntry(0x01eb, 1, 2, true, false),
    SimpleCaseEntry(0x04f4, 0, 2, false, true),
    SimpleCaseEntry(0x04f5, 1, 2, true, false),
    SimpleCaseEntry(0xa78b, 0, 2, false, true),
    SimpleCaseEntry(0xa78c, 1, 2, true, false),
    SimpleCaseEntry(0x0370, 0, 2, false, true),
    SimpleCaseEntry(0x0371, 1, 2, true, false),
    SimpleCaseEntry(0x1eca, 0, 2, false, true),
    SimpleCaseEntry(0x1ecb, 1, 2, true, false),
    SimpleCaseEntry(0x01ec, 0, 2, false, true),
    SimpleCaseEntry(0x01ed, 1, 2, true, false),
    SimpleCaseEntry(0x04f6, 0, 2, false, true),
    SimpleCaseEntry(0x04f7, 1, 2, true, false),
    SimpleCaseEntry(0xa78d, 0, 2, false, true),
    SimpleCaseEntry(0x0265, 1, 2, true, false),
    SimpleCaseEntry(0x0372, 0, 2, false, true),
    SimpleCaseEntry(0x0373, 1, 2, true, false),
    SimpleCaseEntry(0x1ecc, 0, 2, false, true),
    SimpleCaseEntry(0x1ecd, 1, 2, true, false),
    SimpleCaseEntry(0x01ee, 0, 2, false, true),
    SimpleCaseEntry(0x01ef, 1, 2, true, false),
    SimpleCaseEntry(0x04f8, 0, 2, false, true),
    SimpleCaseEntry(0x04f9, 1, 2, true, false),
    SimpleCaseEntry(0x1ece, 0, 2, false, true),
    SimpleCaseEntry(0x1ecf, 1, 2, true, false),
    SimpleCaseEntry(0xa790, 0, 2, false, true),
    SimpleCaseEntry(0xa791, 1, 2, true, false),
    SimpleCaseEntry(0x04fa, 0, 2, false, true),
    SimpleCaseEntry(0x04fb, 1, 2, true, false),
    SimpleCaseEntry(0x01f1, 0, 3, false, true),
    SimpleCaseEntry(0x01f3, 1, 3, true, false),
    SimpleCaseEntry(0x01f2, 2, 3, false, false),
    SimpleCaseEntry(0x0376, 0, 2, false, true),
    SimpleCaseEntry(0x0377, 1, 2, true, false),
    SimpleCaseEntry(0x1ed0, 0, 2, false, true),
    SimpleCaseEntry(0x1ed1, 1, 2, true, false),
    SimpleCaseEntry(0xa792, 0, 2, false, true),
    SimpleCaseEntry(0xa793, 1, 2, true, false),
    SimpleCaseEntry(0x01f2, 0, 3, false, false),
    SimpleCaseEntry(0x01f3, 1, 3, true, false),
    SimpleCaseEntry(0x01f1, 2, 3, false, true),
    SimpleCaseEntry(0x04fc, 0, 2, false, true),
    SimpleCaseEntry(0x04fd, 1, 2, true, false),
    SimpleCaseEntry(0x2c7e, 0, 2, false, true),
    SimpleCaseEntry(0x023f, 1, 2, true, false),
    SimpleCaseEntry(0x1ed2, 0, 2, false, true),
    SimpleCaseEntry(0x1ed3, 1, 2, true, false),
    SimpleCaseEntry(0x2c7f, 0, 2, false, true),
    SimpleCaseEntry(0x0240, 1, 2, true, false),
    SimpleCaseEntry(0x01f4, 0, 2, false, true),
    SimpleCaseEntry(0x01f5, 1, 2, true, false),
    SimpleCaseEntry(0x04fe, 0, 2, false, true),
    SimpleCaseEntry(0x04ff, 1, 2, true, false),
    SimpleCaseEntry(0x2c80, 0, 2, false, true),
    SimpleCaseEntry(0x2c81, 1, 2, true, false),
    SimpleCaseEntry(0x1ed4, 0, 2, false, true),
    SimpleCaseEntry(0x1ed5, 1, 2, true, false),
    SimpleCaseEntry(0x01f6, 0, 2, false, true),
    SimpleCaseEntry(0x0195, 1, 2, true, false),
    SimpleCaseEntry(0x0500, 0, 2, false, true),
    SimpleCaseEntry(0x0501, 1, 2, true, false),
    SimpleCaseEntry(0x2c82, 0, 2, false, true),
    SimpleCaseEntry(0x2c83, 1, 2, true, false),
    SimpleCaseEntry(0x01f7, 0, 2, false, true),
    SimpleCaseEntry(0x01bf, 1, 2, true, false),
    SimpleCaseEntry(0x1ed6, 0, 2, false, true),
    SimpleCaseEntry(0x1ed7, 1, 2, true, false),
    SimpleCaseEntry(0x01f8, 0, 2, false, true),
    SimpleCaseEntry(0x01f9, 1, 2, true, false),
    SimpleCaseEntry(0x0502, 0, 2, false, true),
    SimpleCaseEntry(0x0503, 1, 2, true, false),
    SimpleCaseEntry(0x2c84, 0, 2, false, true),
    SimpleCaseEntry(0x2c85, 1, 2, true, false),
    SimpleCaseEntry(0x1ed8, 0, 2, false, true),
    SimpleCaseEntry(0x1ed9, 1, 2, true, false),
    SimpleCaseEntry(0x01fa, 0, 2, false, true),
    SimpleCaseEntry(0x01fb, 1, 2, true, false),
    SimpleCaseEntry(0x0504, 0, 2, false, true),
    SimpleCaseEntry(0x0505, 1, 2, true, false),
    SimpleCaseEntry(0x2c86, 0, 2, false, true),
    SimpleCaseEntry(0x2c87, 1, 2, true, false),
    SimpleCaseEntry(0x1eda, 0, 2, false, true),
    SimpleCaseEntry(0x1edb, 1, 2, true, false),
    SimpleCaseEntry(0x01fc, 0, 2, false, true),
    SimpleCaseEntry(0x01fd, 1, 2, true, false),
    SimpleCaseEntry(0x0506, 0, 2, false, true),
    SimpleCaseEntry(0x0507, 1, 2, true, false),
    SimpleCaseEntry(0x2c88, 0, 2, false, true),
    SimpleCaseEntry(0x2c89, 1, 2, true, false),
    SimpleCaseEntry(0x1edc, 0, 2, false, true),
    SimpleCaseEntry(0x1edd, 1, 2, true, false),
    SimpleCaseEntry(0x01fe, 0, 2, false, true),
    SimpleCaseEntry(0x01ff, 1, 2, true, false),
    SimpleCaseEntry(0x0508, 0, 2, false, true),
    SimpleCaseEntry(0x0509, 1, 2, true, false),
    SimpleCaseEntry(0x2c8a, 0, 2, false, true),
    SimpleCaseEntry(0x2c8b, 1, 2, true, false),
    SimpleCaseEntry(0x1ede, 0, 2, false, true),
    SimpleCaseEntry(0x1edf, 1, 2, true, false),
    SimpleCaseEntry(0xa7a0, 0, 2, false, true),
    SimpleCaseEntry(0xa7a1, 1, 2, true, false),
    SimpleCaseEntry(0x0200, 0, 2, false, true),
    SimpleCaseEntry(0x0201, 1, 2, true, false),
    SimpleCaseEntry(0x050a, 0, 2, false, true),
    SimpleCaseEntry(0x050b, 1, 2, true, false),
    SimpleCaseEntry(0x2c8c, 0, 2, false, true),
    SimpleCaseEntry(0x2c8d, 1, 2, true, false),
    SimpleCaseEntry(0x0386, 0, 2, false, true),
    SimpleCaseEntry(0x03ac, 1, 2, true, false),
    SimpleCaseEntry(0x1ee0, 0, 2, false, true),
    SimpleCaseEntry(0x1ee1, 1, 2, true, false),
    SimpleCaseEntry(0xa7a2, 0, 2, false, true),
    SimpleCaseEntry(0xa7a3, 1, 2, true, false),
    SimpleCaseEntry(0x0202, 0, 2, false, true),
    SimpleCaseEntry(0x0203, 1, 2, true, false),
    SimpleCaseEntry(0x050c, 0, 2, false, true),
    SimpleCaseEntry(0x050d, 1, 2, true, false),
    SimpleCaseEntry(0x2c8e, 0, 2, false, true),
    SimpleCaseEntry(0x2c8f, 1, 2, true, false),
    SimpleCaseEntry(0x0388, 0, 2, false, true),
    SimpleCaseEntry(0x03ad, 1, 2, true, false),
    SimpleCaseEntry(0x1ee2, 0, 2, false, true),
    SimpleCaseEntry(0x1ee3, 1, 2, true, false),
    SimpleCaseEntry(0xa7a4, 0, 2, false, true),
    SimpleCaseEntry(0xa7a5, 1, 2, true, false),
    SimpleCaseEntry(0x0204, 0, 2, false, true),
    SimpleCaseEntry(0x0205, 1, 2, true, false),
    SimpleCaseEntry(0x0389, 0, 2, false, true),
    SimpleCaseEntry(0x03ae, 1, 2, true, false),
    SimpleCaseEntry(0x050e, 0, 2, false, true),
    SimpleCaseEntry(0x050f, 1, 2, true, false),
    SimpleCaseEntry(0x2c90, 0, 2, false, true),
    SimpleCaseEntry(0x2c91, 1, 2, true, false),
    SimpleCaseEntry(0x038a, 0, 2, false, true),
    SimpleCaseEntry(0x03af, 1, 2, true, false),
    SimpleCaseEntry(0x1ee4, 0, 2, false, true),
    SimpleCaseEntry(0x1ee5, 1, 2, true, false),
    SimpleCaseEntry(0xa7a6, 0, 2, false, true),
    SimpleCaseEntry(0xa7a7, 1, 2, true, false),
    SimpleCaseEntry(0x0206, 0, 2, false, true),
    SimpleCaseEntry(0x0207, 1, 2, true, false),
    SimpleCaseEntry(0x0510, 0, 2, false, true),
    SimpleCaseEntry(0x0511, 1, 2, true, false),
    SimpleCaseEntry(0x2c92, 0, 2, false, true),
    SimpleCaseEntry(0x2c93, 1, 2, true, false),
    SimpleCaseEntry(0x038c, 0, 2, false, true),
    SimpleCaseEntry(0x03cc, 1, 2, true, false),
    SimpleCaseEntry(0x1ee6, 0, 2, false, true),
    SimpleCaseEntry(0x1ee7, 1, 2, true, false),
    SimpleCaseEntry(0xa7a8, 0, 2, false, true),
    SimpleCaseEntry(0xa7a9, 1, 2, true, false),
    SimpleCaseEntry(0x0208, 0, 2, false, true),
    SimpleCaseEntry(0x0209, 1, 2, true, false),
    SimpleCaseEntry(0x0512, 0, 2, false, true),
    SimpleCaseEntry(0x0513, 1, 2, true, false),
    SimpleCaseEntry(0x2c94, 0, 2, false, true),
    SimpleCaseEntry(0x2c95, 1, 2, true, false),
    SimpleCaseEntry(0x038e, 0, 2, false, true),
    SimpleCaseEntry(0x03cd, 1, 2, true, false),
    SimpleCaseEntry(0x1ee8, 0, 2, false, true),
    SimpleCaseEntry(0x1ee9, 1, 2, true, false),
    SimpleCaseEntry(0xa7aa, 0, 2, false, true),
    SimpleCaseEntry(0x0266, 1, 2, true, false),
    SimpleCaseEntry(0x020a, 0, 2, false, true),
    SimpleCaseEntry(0x020b, 1, 2, true, false),
    SimpleCaseEntry(0x038f, 0, 2, false, true),
    SimpleCaseEntry(0x03ce, 1, 2, true, false),
    SimpleCaseEntry(0x0514, 0, 2, false, true),
    SimpleCaseEntry(0x0515, 1, 2, true, false),
    SimpleCaseEntry(0x2c96, 0, 2, false, true),
    SimpleCaseEntry(0x2c97, 1, 2, true, false),
    SimpleCaseEntry(0x1eea, 0, 2, false, true),
    SimpleCaseEntry(0x1eeb, 1, 2, true, false),
    SimpleCaseEntry(0x020c, 0, 2, false, true),
    SimpleCaseEntry(0x020d, 1, 2, true, false),
    SimpleCaseEntry(0x0391, 0, 2, false, true),
    SimpleCaseEntry(0x03b1, 1, 2, true, false),
    SimpleCaseEntry(0x0516, 0, 2, false, true),
    SimpleCaseEntry(0x0517, 1, 2, true, false),
    SimpleCaseEntry(0x2c98, 0, 2, false, true),
    SimpleCaseEntry(0x2c99, 1, 2, true, false),
    SimpleCaseEntry(0x0392, 0, 3, false, true),
    SimpleCaseEntry(0x03b2, 1, 3, true, false),
    SimpleCaseEntry(0x03d0, 2, 3, true, false),
    SimpleCaseEntry(0x1eec, 0, 2, false, true),
    SimpleCaseEntry(0x1eed, 1, 2, true, false),
    SimpleCaseEntry(0x020e, 0, 2, false, true),
    SimpleCaseEntry(0x020f, 1, 2, true, false),
    SimpleCaseEntry(0x0393, 0, 2, false, true),
    SimpleCaseEntry(0x03b3, 1, 2, true, false),
    SimpleCaseEntry(0x0518, 0, 2, false, true),
    SimpleCaseEntry(0x0519, 1, 2, true, false),
    SimpleCaseEntry(0x2c9a, 0, 2, false, true),
    SimpleCaseEntry(0x2c9b, 1, 2, true, false),
    SimpleCaseEntry(0x0394, 0, 2, false, true),
    SimpleCaseEntry(0x03b4, 1, 2, true, false),
    SimpleCaseEntry(0x1eee, 0, 2, false, true),
    SimpleCaseEntry(0x1eef, 1, 2, true, false),
    SimpleCaseEntry(0x0210, 0, 2, false, true),
    SimpleCaseEntry(0x0211, 1, 2, true, false),
    SimpleCaseEntry(0x0395, 0, 3, false, true),
    SimpleCaseEntry(0x03b5, 1, 3, true, false),
    SimpleCaseEntry(0x03f5, 2, 3, true, false),
    SimpleCaseEntry(0x051a, 0, 2, false, true),
    SimpleCaseEntry(0x051b, 1, 2, true, false),
    SimpleCaseEntry(0x2c9c, 0, 2, false, true),
    SimpleCaseEntry(0x2c9d, 1, 2, true, false),
    SimpleCaseEntry(0x0396, 0, 2, false, true),
    SimpleCaseEntry(0x03b6, 1, 2, true, false),
    SimpleCaseEntry(0x1ef0, 0, 2, false, true),
    SimpleCaseEntry(0x1ef1, 1, 2, true, false),
    SimpleCaseEntry(0x0212, 0, 2, false, true),
    SimpleCaseEntry(0x0213, 1, 2, true, false),
    SimpleCaseEntry(0x0397, 0, 2, false, true),
    SimpleCaseEntry(0x03b7, 1, 2, true, false),
    SimpleCaseEntry(0x051c, 0, 2, false, true),
    SimpleCaseEntry(0x051d, 1, 2, true, false),
    SimpleCaseEntry(0x2c9e, 0, 2, false, true),
    SimpleCaseEntry(0x2c9f, 1, 2, true, false),
    SimpleCaseEntry(0x0398, 0, 4, false, true),
    SimpleCaseEntry(0x03b8, 1, 4, true, false),
    SimpleCaseEntry(0x03d1, 2, 4, true, false),
    SimpleCaseEntry(0x03f4, 3, 4, false, true),
    SimpleCaseEntry(0x1ef2, 0, 2, false, true),
    SimpleCaseEntry(0x1ef3, 1, 2, true, false),
    SimpleCaseEntry(0x0214, 0, 2, false, true),
    SimpleCaseEntry(0x0215, 1, 2, true, false),
    SimpleCaseEntry(0x0399, 0, 4, false, true),
    SimpleCaseEntry(0x03b9, 1, 4, true, false),
    SimpleCaseEntry(0x0345, 2, 4, true, false),
    SimpleCaseEntry(0x1fbe, 3, 4, true, false),
    SimpleCaseEntry(0x051e, 0, 2, false, true),
    SimpleCaseEntry(0x051f, 1, 2, true, false),
    SimpleCaseEntry(0x2ca0, 0, 2, false, true),
    SimpleCaseEntry(0x2ca1, 1, 2, true, false),
    SimpleCaseEntry(0x039a, 0, 3, false, true),
    SimpleCaseEntry(0x03ba, 1, 3, true, false),
    SimpleCaseEntry(0x03f0, 2, 3, true, false),
    SimpleCaseEntry(0x1ef4, 0, 2, false, true),
    SimpleCaseEntry(0x1ef5, 1, 2, true, false),
    SimpleCaseEntry(0x0216, 0, 2, false, true),
    SimpleCaseEntry(0x0217, 1, 2, true, false),
    SimpleCaseEntry(0x039b, 0, 2, false, true),
    SimpleCaseEntry(0x03bb, 1, 2, true, false),
    SimpleCaseEntry(0x0520, 0, 2, false, true),
    SimpleCaseEntry(0x0521, 1, 2, true, false),
    SimpleCaseEntry(0x2ca2, 0, 2, false, true),
    SimpleCaseEntry(0x2ca3, 1, 2, true, false),
    SimpleCaseEntry(0x039c, 0, 3, false, true),
    SimpleCaseEntry(0x03bc, 1, 3, true, false),
    SimpleCaseEntry(0x00b5, 2, 3, true, false),
    SimpleCaseEntry(0x1ef6, 0, 2, false, true),
    SimpleCaseEntry(0x1ef7, 1, 2, true, false),
    SimpleCaseEntry(0x0218, 0, 2, false, true),
    SimpleCaseEntry(0x0219, 1, 2, true, false),
    SimpleCaseEntry(0x039d, 0, 2, false, true),
    SimpleCaseEntry(0x03bd, 1, 2, true, false),
    SimpleCaseEntry(0x0522, 0, 2, false, true),
    SimpleCaseEntry(0x0523, 1, 2, true, false),
    SimpleCaseEntry(0x2ca4, 0, 2, false, true),
    SimpleCaseEntry(0x2ca5, 1, 2, true, false),
    SimpleCaseEntry(0x039e, 0, 2, false, true),
    SimpleCaseEntry(0x03be, 1, 2, true, false),
    SimpleCaseEntry(0x1ef8, 0, 2, false, true),
    SimpleCaseEntry(0x1ef9, 1, 2, true, false),
    SimpleCaseEntry(0x021a, 0, 2, false, true),
    SimpleCaseEntry(0x021b, 1, 2, true, false),
    SimpleCaseEntry(0x039f, 0, 2, false, true),
    SimpleCaseEntry(0x03bf, 1, 2, true, false),
    SimpleCaseEntry(0x0524, 0, 2, false, true),
    SimpleCaseEntry(0x0525, 1, 2, true, false),
    SimpleCaseEntry(0x2ca6, 0, 2, false, true),
    SimpleCaseEntry(0x2ca7, 1, 2, true, false),
    SimpleCaseEntry(0x03a0, 0, 3, false, true),
    SimpleCaseEntry(0x03c0, 1, 3, true, false),
    SimpleCaseEntry(0x03d6, 2, 3, true, false),
    SimpleCaseEntry(0x1efa, 0, 2, false, true),
    SimpleCaseEntry(0x1efb, 1, 2, true, false),
    SimpleCaseEntry(0x021c, 0, 2, false, true),
    SimpleCaseEntry(0x021d, 1, 2, true, false),
    SimpleCaseEntry(0x03a1, 0, 3, false, true),
    SimpleCaseEntry(0x03c1, 1, 3, true, false),
    SimpleCaseEntry(0x03f1, 2, 3, true, false),
    SimpleCaseEntry(0x0526, 0, 2, false, true),
    SimpleCaseEntry(0x0527, 1, 2, true, false),
    SimpleCaseEntry(0x2ca8, 0, 2, false, true),
    SimpleCaseEntry(0x2ca9, 1, 2, true, false),
    SimpleCaseEntry(0x1efc, 0, 2, false, true),
    SimpleCaseEntry(0x1efd, 1, 2, true, false),
    SimpleCaseEntry(0x021e, 0, 2, false, true),
    SimpleCaseEntry(0x021f, 1, 2, true, false),
    SimpleCaseEntry(0x03a3, 0, 3, false, true),
    SimpleCaseEntry(0x03c3, 1, 3, true, false),
    SimpleCaseEntry(0x03c2, 2, 3, true, false),
    SimpleCaseEntry(0x2caa, 0, 2, false, true),
    SimpleCaseEntry(0x2cab, 1, 2, true, false),
    SimpleCaseEntry(0x03a4, 0, 2, false, true),
    SimpleCaseEntry(0x03c4, 1, 2, true, false),
    SimpleCaseEntry(0x1efe, 0, 2, false, true),
    SimpleCaseEntry(0x1eff, 1, 2, true, false),
    SimpleCaseEntry(0x0220, 0, 2, false, true),
    SimpleCaseEntry(0x019e, 1, 2, true, false),
    SimpleCaseEntry(0x03a5, 0, 2, false, true),
    SimpleCaseEntry(0x03c5, 1, 2, true, false),
    SimpleCaseEntry(0x2cac, 0, 2, false, true),
    SimpleCaseEntry(0x2cad, 1, 2, true, false),
    SimpleCaseEntry(0x03a6, 0, 3, false, true),
    SimpleCaseEntry(0x03c6, 1, 3, true, false),
    SimpleCaseEntry(0x03d5, 2, 3, true, false),
    SimpleCaseEntry(0x0222, 0, 2, false, true),
    SimpleCaseEntry(0x0223, 1, 2, true, false),
    SimpleCaseEntry(0x03a7, 0, 2, false, true),
    SimpleCaseEntry(0x03c7, 1, 2, true, false),
    SimpleCaseEntry(0x2cae, 0, 2, false, true),
    SimpleCaseEntry(0x2caf, 1, 2, true, false),
    SimpleCaseEntry(0x03a8, 0, 2, false, true),
    SimpleCaseEntry(0x03c8, 1, 2, true, false),
    SimpleCaseEntry(0x0224, 0, 2, false, true),
    SimpleCaseEntry(0x0225, 1, 2, true, false),
    SimpleCaseEntry(0x03a9, 0, 3, false, true),
    SimpleCaseEntry(0x03c9, 1, 3, true, false),
    SimpleCaseEntry(0x2126, 2, 3, false, true),
    SimpleCaseEntry(0x2cb0, 0, 2, false, true),
    SimpleCaseEntry(0x2cb1, 1, 2, true, false),
    SimpleCaseEntry(0xa640, 0, 2, false, true),
    SimpleCaseEntry(0xa641, 1, 2, true, false),
    SimpleCaseEntry(0x03aa, 0, 2, false, true),
    SimpleCaseEntry(0x03ca, 1, 2, true, false),
    SimpleCaseEntry(0x0226, 0, 2, false, true),
    SimpleCaseEntry(0x0227, 1, 2, true, false),
    SimpleCaseEntry(0x03ab, 0, 2, false, true),
    SimpleCaseEntry(0x03cb, 1, 2, true, false),
    SimpleCaseEntry(0x2cb2, 0, 2, false, true),
    SimpleCaseEntry(0x2cb3, 1, 2, true, false),
    SimpleCaseEntry(0xa642, 0, 2, false, true),
    SimpleCaseEntry(0xa643, 1, 2, true, false),
    SimpleCaseEntry(0x0531, 0, 2, false, true),
    SimpleCaseEntry(0x0561, 1, 2, true, false),
    SimpleCaseEntry(0x0228, 0, 2, false, true),
    SimpleCaseEntry(0x0229, 1, 2, true, false),
    SimpleCaseEntry(0x0532, 0, 2, false, true),
    SimpleCaseEntry(0x0562, 1, 2, true, false),
    SimpleCaseEntry(0x2cb4, 0, 2, false, true),
    SimpleCaseEntry(0x2cb5, 1, 2, true, false),
    SimpleCaseEntry(0xa644, 0, 2, false, true),
    SimpleCaseEntry(0xa645, 1, 2, true, false),
    SimpleCaseEntry(0x0533, 0, 2, false, true),
    SimpleCaseEntry(0x0563, 1, 2, true, false),
    SimpleCaseEntry(0x1f08, 0, 2, false, true),
    SimpleCaseEntry(0x1f00, 1, 2, true, false),
    SimpleCaseEntry(0x022a, 0, 2, false, true),
    SimpleCaseEntry(0x022b, 1, 2, true, false),
    SimpleCaseEntry(0x0534, 0, 2, false, true),
    SimpleCaseEntry(0x0564, 1, 2, true, false),
    SimpleCaseEntry(0x1f09, 0, 2, false, true),
    SimpleCaseEntry(0x1f01, 1, 2, true, false),
    SimpleCaseEntry(0x2cb6, 0, 2, false, true),
    SimpleCaseEntry(0x2cb7, 1, 2, true, false),
    SimpleCaseEntry(0xa646, 0, 2, false, true),
    SimpleCaseEntry(0xa647, 1, 2, true, false),
    SimpleCaseEntry(0x0535, 0, 2, false, true),
    SimpleCaseEntry(0x0565, 1, 2, true, false),
    SimpleCaseEntry(0x1f0a, 0, 2, false, true),
    SimpleCaseEntry(0x1f02, 1, 2, true, false),
    SimpleCaseEntry(0x022c, 0, 2, false, true),
    SimpleCaseEntry(0x022d, 1, 2, true, false),
    SimpleCaseEntry(0x0536, 0, 2, false, true),
    SimpleCaseEntry(0x0566, 1, 2, true, false),
    SimpleCaseEntry(0x1f0b, 0, 2, false, true),
    SimpleCaseEntry(0x1f03, 1, 2, true, false),
    SimpleCaseEntry(0x2cb8, 0, 2, false, true),
    SimpleCaseEntry(0x2cb9, 1, 2, true, false),
    SimpleCaseEntry(0xa648, 0, 2, false, true),
    SimpleCaseEntry(0xa649, 1, 2, true, false),
    SimpleCaseEntry(0x0537, 0, 2, false, true),
    SimpleCaseEntry(0x0567, 1, 2, true, false),
    SimpleCaseEntry(0x1f0c, 0, 2, false, true),
    SimpleCaseEntry(0x1f04, 1, 2, true, false),
    SimpleCaseEntry(0x022e, 0, 2, false, true),
    SimpleCaseEntry(0x022f, 1, 2, true, false),
    SimpleCaseEntry(0x0538, 0, 2, false, true),
    SimpleCaseEntry(0x0568, 1, 2, true, false),
    SimpleCaseEntry(0x1f0d, 0, 2, false, true),
    SimpleCaseEntry(0x1f05, 1, 2, true, false),
    SimpleCaseEntry(0x2cba, 0, 2, false, true),
    SimpleCaseEntry(0x2cbb, 1, 2, true, false),
    SimpleCaseEntry(0xa64a, 0, 2, false, true),
    SimpleCaseEntry(0xa64b, 1, 2, true, false),
    SimpleCaseEntry(0x0539, 0, 2, false, true),
    SimpleCaseEntry(0x0569, 1, 2, true, false),
    SimpleCaseEntry(0x1f0e, 0, 2, false, true),
    SimpleCaseEntry(0x1f06, 1, 2, true, false),
    SimpleCaseEntry(0x0230, 0, 2, false, true),
    SimpleCaseEntry(0x0231, 1, 2, true, false),
    SimpleCaseEntry(0x053a, 0, 2, false, true),
    SimpleCaseEntry(0x056a, 1, 2, true, false),
    SimpleCaseEntry(0x1f0f, 0, 2, false, true),
    SimpleCaseEntry(0x1f07, 1, 2, true, false),
    SimpleCaseEntry(0x2cbc, 0, 2, false, true),
    SimpleCaseEntry(0x2cbd, 1, 2, true, false),
    SimpleCaseEntry(0xa64c, 0, 2, false, true),
    SimpleCaseEntry(0xa64d, 1, 2, true, false),
    SimpleCaseEntry(0x053b, 0, 2, false, true),
    SimpleCaseEntry(0x056b, 1, 2, true, false),
    SimpleCaseEntry(0x0232, 0, 2, false, true),
    SimpleCaseEntry(0x0233, 1, 2, true, false),
    SimpleCaseEntry(0x053c, 0, 2, false, true),
    SimpleCaseEntry(0x056c, 1, 2, true, false),
    SimpleCaseEntry(0x2cbe, 0, 2, false, true),
    SimpleCaseEntry(0x2cbf, 1, 2, true, false),
    SimpleCaseEntry(0xa64e, 0, 2, false, true),
    SimpleCaseEntry(0xa64f, 1, 2, true, false),
    SimpleCaseEntry(0x053d, 0, 2, false, true),
    SimpleCaseEntry(0x056d, 1, 2, true, false),
    SimpleCaseEntry(0x053e, 0, 2, false, true),
    SimpleCaseEntry(0x056e, 1, 2, true, false),
    SimpleCaseEntry(0x2cc0, 0, 2, false, true),
    SimpleCaseEntry(0x2cc1, 1, 2, true, false),
    SimpleCaseEntry(0xa650, 0, 2, false, true),
    SimpleCaseEntry(0xa651, 1, 2, true, false),
    SimpleCaseEntry(0x053f, 0, 2, false, true),
    SimpleCaseEntry(0x056f, 1, 2, true, false),
    SimpleCaseEntry(0x0540, 0, 2, false, true),
    SimpleCaseEntry(0x0570, 1, 2, true, false),
    SimpleCaseEntry(0x2cc2, 0, 2, false, true),
    SimpleCaseEntry(0x2cc3, 1, 2, true, false),
    SimpleCaseEntry(0xa652, 0, 2, false, true),
    SimpleCaseEntry(0xa653, 1, 2, true, false),
    SimpleCaseEntry(0x0541, 0, 2, false, true),
    SimpleCaseEntry(0x0571, 1, 2, true, false),
    SimpleCaseEntry(0x0542, 0, 2, false, true),
    SimpleCaseEntry(0x0572, 1, 2, true, false),
    SimpleCaseEntry(0x2cc4, 0, 2, false, true),
    SimpleCaseEntry(0x2cc5, 1, 2, true, false),
    SimpleCaseEntry(0xa654, 0, 2, false, true),
    SimpleCaseEntry(0xa655, 1, 2, true, false),
    SimpleCaseEntry(0x0543, 0, 2, false, true),
    SimpleCaseEntry(0x0573, 1, 2, true, false),
    SimpleCaseEntry(0x1f18, 0, 2, false, true),
    SimpleCaseEntry(0x1f10, 1, 2, true, false),
    SimpleCaseEntry(0x00b5, 0, 3, true, false),
    SimpleCaseEntry(0x03bc, 1, 3, true, false),
    SimpleCaseEntry(0x039c, 2, 3, false, true),
    SimpleCaseEntry(0x023a, 0, 2, false, true),
    SimpleCaseEntry(0x2c65, 1, 2, true, false),
    SimpleCaseEntry(0x0544, 0, 2, false, true),
    SimpleCaseEntry(0x0574, 1, 2, true, false),
    SimpleCaseEntry(0x1f19, 0, 2, false, true),
    SimpleCaseEntry(0x1f11, 1, 2, true, false),
    SimpleCaseEntry(0x2cc6, 0, 2, false, true),
    SimpleCaseEntry(0x2cc7, 1, 2, true, false),
    SimpleCaseEntry(0xa656, 0, 2, false, true),
    SimpleCaseEntry(0xa657, 1, 2, true, false),
    SimpleCaseEntry(0x023b, 0, 2, false, true),
    SimpleCaseEntry(0x023c, 1, 2, true, false),
    SimpleCaseEntry(0x0545, 0, 2, false, true),
    SimpleCaseEntry(0x0575, 1, 2, true, false),
    SimpleCaseEntry(0x1f1a, 0, 2, false, true),
    SimpleCaseEntry(0x1f12, 1, 2, true, false),
    SimpleCaseEntry(0x0546, 0, 2, false, true),
    SimpleCaseEntry(0x0576, 1, 2, true, false),
    SimpleCaseEntry(0x1f1b, 0, 2, false, true),
    SimpleCaseEntry(0x1f13, 1, 2, true, false),
    SimpleCaseEntry(0x2cc8, 0, 2, false, true),
    SimpleCaseEntry(0x2cc9, 1, 2, true, false),
    SimpleCaseEntry(0xa658, 0, 2, false, true),
    SimpleCaseEntry(0xa659, 1, 2, true, false),
    SimpleCaseEntry(0x023d, 0, 2, false, true),
    SimpleCaseEntry(0x019a, 1, 2, true, false),
    SimpleCaseEntry(0x03c2, 0, 3, true, false),
    SimpleCaseEntry(0x03c3, 1, 3, true, false),
    SimpleCaseEntry(0x03a3, 2, 3, false, true),
    SimpleCaseEntry(0x0547, 0, 2, false, true),
    SimpleCaseEntry(0x0577, 1, 2, true, false),
    SimpleCaseEntry(0x1f1c, 0, 2, false, true),
    SimpleCaseEntry(0x1f14, 1, 2, true, false),
    SimpleCaseEntry(0x023e, 0, 2, false, true),
    SimpleCaseEntry(0x2c66, 1, 2, true, false),
    SimpleCaseEntry(0x0548, 0, 2, false, true),
    SimpleCaseEntry(0x0578, 1, 2, true, false),
    SimpleCaseEntry(0x1f1d, 0, 2, false, true),
    SimpleCaseEntry(0x1f15, 1, 2, true, false),
    SimpleCaseEntry(0x2cca, 0, 2, false, true),
    SimpleCaseEntry(0x2ccb, 1, 2, true, false),
    SimpleCaseEntry(0xa65a, 0, 2, false, true),
    SimpleCaseEntry(0xa65b, 1, 2, true, false),
    SimpleCaseEntry(0x0549, 0, 2, false, true),
    SimpleCaseEntry(0x0579, 1, 2, true, false),
    SimpleCaseEntry(0x054a, 0, 2, false, true),
    SimpleCaseEntry(0x057a, 1, 2, true, false),
    SimpleCaseEntry(0x2ccc, 0, 2, false, true),
    SimpleCaseEntry(0x2ccd, 1, 2, true, false),
    SimpleCaseEntry(0xa65c, 0, 2, false, true),
    SimpleCaseEntry(0xa65d, 1, 2, true, false),
    SimpleCaseEntry(0x0241, 0, 2, false, true),
    SimpleCaseEntry(0x0242, 1, 2, true, false),
    SimpleCaseEntry(0x054b, 0, 2, false, true),
    SimpleCaseEntry(0x057b, 1, 2, true, false),
    SimpleCaseEntry(0x054c, 0, 2, false, true),
    SimpleCaseEntry(0x057c, 1, 2, true, false),
    SimpleCaseEntry(0x2cce, 0, 2, false, true),
    SimpleCaseEntry(0x2ccf, 1, 2, true, false),
    SimpleCaseEntry(0xa65e, 0, 2, false, true),
    SimpleCaseEntry(0xa65f, 1, 2, true, false),
    SimpleCaseEntry(0x0243, 0, 2, false, true),
    SimpleCaseEntry(0x0180, 1, 2, true, false),
    SimpleCaseEntry(0x054d, 0, 2, false, true),
    SimpleCaseEntry(0x057d, 1, 2, true, false),
    SimpleCaseEntry(0x0244, 0, 2, false, true),
    SimpleCaseEntry(0x0289, 1, 2, true, false),
    SimpleCaseEntry(0x054e, 0, 2, false, true),
    SimpleCaseEntry(0x057e, 1, 2, true, false),
    SimpleCaseEntry(0x2cd0, 0, 2, false, true),
    SimpleCaseEntry(0x2cd1, 1, 2, true, false),
    SimpleCaseEntry(0xa660, 0, 2, false, true),
    SimpleCaseEntry(0xa661, 1, 2, true, false),
    SimpleCaseEntry(0x00c0, 0, 2, false, true),
    SimpleCaseEntry(0x00e0, 1, 2, true, false),
    SimpleCaseEntry(0x0245, 0, 2, false, true),
    SimpleCaseEntry(0x028c, 1, 2, true, false),
    SimpleCaseEntry(0x054f, 0, 2, false, true),
    SimpleCaseEntry(0x057f, 1, 2, true, false),
    SimpleCaseEntry(0x00c1, 0, 2, false, true),
    SimpleCaseEntry(0x00e1, 1, 2, true, false),
    SimpleCaseEntry(0x0246, 0, 2, false, true),
    SimpleCaseEntry(0x0247, 1, 2, true, false),
    SimpleCaseEntry(0x0550, 0, 2, false, true),
    SimpleCaseEntry(0x0580, 1, 2, true, false),
    SimpleCaseEntry(0x2cd2, 0, 2, false, true),
    SimpleCaseEntry(0x2cd3, 1, 2, true, false),
    SimpleCaseEntry(0xa662, 0, 2, false, true),
    SimpleCaseEntry(0xa663, 1, 2, true, false),
    SimpleCaseEntry(0x00c2, 0, 2, false, true),
    SimpleCaseEntry(0x00e2, 1, 2, true, false),
    SimpleCaseEntry(0x0551, 0, 2, false, true),
    SimpleCaseEntry(0x0581, 1, 2, true, false),
    SimpleCaseEntry(0x00c3, 0, 2, false, true),
    SimpleCaseEntry(0x00e3, 1, 2, true, false),
    SimpleCaseEntry(0x0248, 0, 2, false, true),
    SimpleCaseEntry(0x0249, 1, 2, true, false),
    SimpleCaseEntry(0x0552, 0, 2, false, true),
    SimpleCaseEntry(0x0582, 1, 2, true, false),
    SimpleCaseEntry(0x2cd4, 0, 2, false, true),
    SimpleCaseEntry(0x2cd5, 1, 2, true, false),
    SimpleCaseEntry(0xa664, 0, 2, false, true),
    SimpleCaseEntry(0xa665, 1, 2, true, false),
    SimpleCaseEntry(0x00c4, 0, 2, false, true),
    SimpleCaseEntry(0x00e4, 1, 2, true, false),
    SimpleCaseEntry(0x0553, 0, 2, false, true),
    SimpleCaseEntry(0x0583, 1, 2, true, false),
    SimpleCaseEntry(0x1f28, 0, 2, false, true),
    SimpleCaseEntry(0x1f20, 1, 2, true, false),
    SimpleCaseEntry(0x00c5, 0, 3, false, true),
    SimpleCaseEntry(0x00e5, 1, 3, true, false),
    SimpleCaseEntry(0x212b, 2, 3, false, true),
    SimpleCaseEntry(0x024a, 0, 2, false, true),
    SimpleCaseEntry(0x024b, 1, 2, true, false),
    SimpleCaseEntry(0x03cf, 0, 2, false, true),
    SimpleCaseEntry(0x03d7, 1, 2, true, false),
    SimpleCaseEntry(0x0554, 0, 2, false, true),
    SimpleCaseEntry(0x0584, 1, 2, true, false),
    SimpleCaseEntry(0x1f29, 0, 2, false, true),
    SimpleCaseEntry(0x1f21, 1, 2, true, false),
    SimpleCaseEntry(0x2cd6, 0, 2, false, true),
    SimpleCaseEntry(0x2cd7, 1, 2, true, false),
    SimpleCaseEntry(0xa666, 0, 2, false, true),
    SimpleCaseEntry(0xa667, 1, 2, true, false),
    SimpleCaseEntry(0x00c6, 0, 2, false, true),
    SimpleCaseEntry(0x00e6, 1, 2, true, false),
    SimpleCaseEntry(0x03d0, 0, 3, true, false),
    SimpleCaseEntry(0x03b2, 1, 3, true, false),
    SimpleCaseEntry(0x0392, 2, 3, false, true),
    SimpleCaseEntry(0x0555, 0, 2, false, true),
    SimpleCaseEntry(0x0585, 1, 2, true, false),
    SimpleCaseEntry(0x1f2a, 0, 2, false, true),
    SimpleCaseEntry(0x1f22, 1, 2, true, false),
    SimpleCaseEntry(0x00c7, 0, 2, false, true),
    SimpleCaseEntry(0x00e7, 1, 2, true, false),
    SimpleCaseEntry(0x024c, 0, 2, false, true),
    SimpleCaseEntry(0x024d, 1, 2, true, false),
    SimpleCaseEntry(0x03d1, 0, 4, true, false),
    SimpleCaseEntry(0x03b8, 1, 4, true, false),
    SimpleCaseEntry(0x0398, 2, 4, false, true),
    SimpleCaseEntry(0x03f4, 3, 4, false, true),
    SimpleCaseEntry(0x0556, 0, 2, false, true),
    SimpleCaseEntry(0x0586, 1, 2, true, false),
    SimpleCaseEntry(0x1f2b, 0, 2, false, true),
    SimpleCaseEntry(0x1f23, 1, 2, true, false),
    SimpleCaseEntry(0x2cd8, 0, 2, false, true),
    SimpleCaseEntry(0x2cd9, 1, 2, true, false),
    SimpleCaseEntry(0xa668, 0, 2, false, true),
    SimpleCaseEntry(0xa669, 1, 2, true, false),
    SimpleCaseEntry(0x00c8, 0, 2, false, true),
    SimpleCaseEntry(0x00e8, 1, 2, true, false),
    SimpleCaseEntry(0x1f2c, 0, 2, false, true),
    SimpleCaseEntry(0x1f24, 1, 2, true, false),
    SimpleCaseEntry(0x00c9, 0, 2, false, true),
    SimpleCaseEntry(0x00e9, 1, 2, true, false),
    SimpleCaseEntry(0x024e, 0, 2, false, true),
    SimpleCaseEntry(0x024f, 1, 2, true, false),
    SimpleCaseEntry(0x1f2d, 0, 2, false, true),
    SimpleCaseEntry(0x1f25, 1, 2, true, false),
    SimpleCaseEntry(0x2cda, 0, 2, false, true),
    SimpleCaseEntry(0x2cdb, 1, 2, true, false),
    SimpleCaseEntry(0xa66a, 0, 2, false, true),
    SimpleCaseEntry(0xa66b, 1, 2, true, false),
    SimpleCaseEntry(0x00ca, 0, 2, false, true),
    SimpleCaseEntry(0x00ea, 1, 2, true, false),
    SimpleCaseEntry(0x1f2e, 0, 2, false, true),
    SimpleCaseEntry(0x1f26, 1, 2, true, false),
    SimpleCaseEntry(0x00cb, 0, 2, false, true),
    SimpleCaseEntry(0x00eb, 1, 2, true, false),
    SimpleCaseEntry(0x03d5, 0, 3, true, false),
    SimpleCaseEntry(0x03c6, 1, 3, true, false),
    SimpleCaseEntry(0x03a6, 2, 3, false, true),
    SimpleCaseEntry(0x1f2f, 0, 2, false, true),
    SimpleCaseEntry(0x1f27, 1, 2, true, false),
    SimpleCaseEntry(0x2cdc, 0, 2, false, true),
    SimpleCaseEntry(0x2cdd, 1, 2, true, false),
    SimpleCaseEntry(0xa66c, 0, 2, false, true),
    SimpleCaseEntry(0xa66d, 1, 2, true, false),
    SimpleCaseEntry(0x00cc, 0, 2, false, true),
    SimpleCaseEntry(0x00ec, 1, 2, true, false),
    SimpleCaseEntry(0x03d6, 0, 3, true, false),
    SimpleCaseEntry(0x03c0, 1, 3, true, false),
    SimpleCaseEntry(0x03a0, 2, 3, false, true),
    SimpleCaseEntry(0x00cd, 0, 2, false, true),
    SimpleCaseEntry(0x00ed, 1, 2, true, false),
    SimpleCaseEntry(0x2cde, 0, 2, false, true),
    SimpleCaseEntry(0x2cdf, 1, 2, true, false),
    SimpleCaseEntry(0x00ce, 0, 2, false, true),
    SimpleCaseEntry(0x00ee, 1, 2, true, false),
    SimpleCaseEntry(0x03d8, 0, 2, false, true),
    SimpleCaseEntry(0x03d9, 1, 2, true, false),
    SimpleCaseEntry(0x00cf, 0, 2, false, true),
    SimpleCaseEntry(0x00ef, 1, 2, true, false),
    SimpleCaseEntry(0x2ce0, 0, 2, false, true),
    SimpleCaseEntry(0x2ce1, 1, 2, true, false),
    SimpleCaseEntry(0x00d0, 0, 2, false, true),
    SimpleCaseEntry(0x00f0, 1, 2, true, false),
    SimpleCaseEntry(0x03da, 0, 2, false, true),
    SimpleCaseEntry(0x03db, 1, 2, true, false),
    SimpleCaseEntry(0x00d1, 0, 2, false, true),
    SimpleCaseEntry(0x00f1, 1, 2, true, false),
    SimpleCaseEntry(0x2ce2, 0, 2, false, true),
    SimpleCaseEntry(0x2ce3, 1, 2, true, false),
    SimpleCaseEntry(0x00d2, 0, 2, false, true),
    SimpleCaseEntry(0x00f2, 1, 2, true, false),
    SimpleCaseEntry(0x03dc, 0, 2, false, true),
    SimpleCaseEntry(0x03dd, 1, 2, true, false),
    SimpleCaseEntry(0x00d3, 0, 2, false, true),
    SimpleCaseEntry(0x00f3, 1, 2, true, false),
    SimpleCaseEntry(0x00d4, 0, 2, false, true),
    SimpleCaseEntry(0x00f4, 1, 2, true, false),
    SimpleCaseEntry(0x03de, 0, 2, false, true),
    SimpleCaseEntry(0x03df, 1, 2, true, false),
    SimpleCaseEntry(0x1f38, 0, 2, false, true),
    SimpleCaseEntry(0x1f30, 1, 2, true, false),
    SimpleCaseEntry(0x00d5, 0, 2, false, true),
    SimpleCaseEntry(0x00f5, 1, 2, true, false),
    SimpleCaseEntry(0x1f39, 0, 2, false, true),
    SimpleCaseEntry(0x1f31, 1, 2, true, false),
    SimpleCaseEntry(0x00d6, 0, 2, false, true),
    SimpleCaseEntry(0x00f6, 1, 2, true, false),
    SimpleCaseEntry(0x03e0, 0, 2, false, true),
    SimpleCaseEntry(0x03e1, 1, 2, true, false),
    SimpleCaseEntry(0x1f3a, 0, 2, false, true),
    SimpleCaseEntry(0x1f32, 1, 2, true, false),
    SimpleCaseEntry(0x1f3b, 0, 2, false, true),
    SimpleCaseEntry(0x1f33, 1, 2, true, false),
    SimpleCaseEntry(0x00d8, 0, 2, false, true),
    SimpleCaseEntry(0x00f8, 1, 2, true, false),
    SimpleCaseEntry(0x03e2, 0, 2, false, true),
    SimpleCaseEntry(0x03e3, 1, 2, true, false),
    SimpleCaseEntry(0x1f3c, 0, 2, false, true),
    SimpleCaseEntry(0x1f34, 1, 2, true, false),
    SimpleCaseEntry(0x00d9, 0, 2, false, true),
    SimpleCaseEntry(0x00f9, 1, 2, true, false),
    SimpleCaseEntry(0x1f3d, 0, 2, false, true),
    SimpleCaseEntry(0x1f35, 1, 2, true, false),
    SimpleCaseEntry(0x00da, 0, 2, false, true),
    SimpleCaseEntry(0x00fa, 1, 2, true, false),
    SimpleCaseEntry(0x03e4, 0, 2, false, true),
    SimpleCaseEntry(0x03e5, 1, 2, true, false),
    SimpleCaseEntry(0x1f3e, 0, 2, false, true),
    SimpleCaseEntry(0x1f36, 1, 2, true, false),
    SimpleCaseEntry(0x2ceb, 0, 2, false, true),
    SimpleCaseEntry(0x2cec, 1, 2, true, false),
    SimpleCaseEntry(0x00db, 0, 2, false, true),
    SimpleCaseEntry(0x00fb, 1, 2, true, false),
    SimpleCaseEntry(0x1f3f, 0, 2, false, true),
    SimpleCaseEntry(0x1f37, 1, 2, true, false),
    SimpleCaseEntry(0x00dc, 0, 2, false, true),
    SimpleCaseEntry(0x00fc, 1, 2, true, false),
    SimpleCaseEntry(0x03e6, 0, 2, false, true),
    SimpleCaseEntry(0x03e7, 1, 2, true, false),
    SimpleCaseEntry(0x2ced, 0, 2, false, true),
    SimpleCaseEntry(0x2cee, 1, 2, true, false),
    SimpleCaseEntry(0x00dd, 0, 2, false, true),
    SimpleCaseEntry(0x00fd, 1, 2, true, false),
    SimpleCaseEntry(0x00de, 0, 2, false, true),
    SimpleCaseEntry(0x00fe, 1, 2, true, false),
    SimpleCaseEntry(0x03e8, 0, 2, false, true),
    SimpleCaseEntry(0x03e9, 1, 2, true, false),
    SimpleCaseEntry(0xa680, 0, 2, false, true),
    SimpleCaseEntry(0xa681, 1, 2, true, false),
    SimpleCaseEntry(0x03ea, 0, 2, false, true),
    SimpleCaseEntry(0x03eb, 1, 2, true, false),
    SimpleCaseEntry(0x2cf2, 0, 2, false, true),
    SimpleCaseEntry(0x2cf3, 1, 2, true, false),
    SimpleCaseEntry(0xa682, 0, 2, false, true),
    SimpleCaseEntry(0xa683, 1, 2, true, false),
    SimpleCaseEntry(0x03ec, 0, 2, false, true),
    SimpleCaseEntry(0x03ed, 1, 2, true, false),
    SimpleCaseEntry(0xa684, 0, 2, false, true),
    SimpleCaseEntry(0xa685, 1, 2, true, false),
    SimpleCaseEntry(0x03ee, 0, 2, false, true),
    SimpleCaseEntry(0x03ef, 1, 2, true, false),
    SimpleCaseEntry(0x1f48, 0, 2, false, true),
    SimpleCaseEntry(0x1f40, 1, 2, true, false),
    SimpleCaseEntry(0x1f49, 0, 2, false, true),
    SimpleCaseEntry(0x1f41, 1, 2, true, false),
    SimpleCaseEntry(0xa686, 0, 2, false, true),
    SimpleCaseEntry(0xa687, 1, 2, true, false),
    SimpleCaseEntry(0x03f0, 0, 3, true, false),
    SimpleCaseEntry(0x03ba, 1, 3, true, false),
    SimpleCaseEntry(0x039a, 2, 3, false, true),
    SimpleCaseEntry(0x1f4a, 0, 2, false, true),
    SimpleCaseEntry(0x1f42, 1, 2, true, false),
    SimpleCaseEntry(0x03f1, 0, 3, true, false),
    SimpleCaseEntry(0x03c1, 1, 3, true, false),
    SimpleCaseEntry(0x03a1, 2, 3, false, true),
    SimpleCaseEntry(0x1f4b, 0, 2, false, true),
    SimpleCaseEntry(0x1f43, 1, 2, true, false),
    SimpleCaseEntry(0xa688, 0, 2, false, true),
    SimpleCaseEntry(0xa689, 1, 2, true, false),
    SimpleCaseEntry(0x1f4c, 0, 2, false, true),
    SimpleCaseEntry(0x1f44, 1, 2, true, false),
    SimpleCaseEntry(0x1f4d, 0, 2, false, true),
    SimpleCaseEntry(0x1f45, 1, 2, true, false),
    SimpleCaseEntry(0xa68a, 0, 2, false, true),
    SimpleCaseEntry(0xa68b, 1, 2, true, false),
    SimpleCaseEntry(0x03f4, 0, 4, false, true),
    SimpleCaseEntry(0x03b8, 1, 4, true, false),
    SimpleCaseEntry(0x0398, 2, 4, false, true),
    SimpleCaseEntry(0x03d1, 3, 4, true, false),
    SimpleCaseEntry(0x03f5, 0, 3, true, false),
    SimpleCaseEntry(0x03b5, 1, 3, true, false),
    SimpleCaseEntry(0x0395, 2, 3, false, true),
    SimpleCaseEntry(0xa68c, 0, 2, false, true),
    SimpleCaseEntry(0xa68d, 1, 2, true, false),
    SimpleCaseEntry(0x03f7, 0, 2, false, true),
    SimpleCaseEntry(0x03f8, 1, 2, true, false),
    SimpleCaseEntry(0xa68e, 0, 2, false, true),
    SimpleCaseEntry(0xa68f, 1, 2, true, false),
    SimpleCaseEntry(0x03f9, 0, 2, false, true),
    SimpleCaseEntry(0x03f2, 1, 2, true, false),
    SimpleCaseEntry(0xa690, 0, 2, false, true),
    SimpleCaseEntry(0xa691, 1, 2, true, false),
    SimpleCaseEntry(0x03fa, 0, 2, false, true),
    SimpleCaseEntry(0x03fb, 1, 2, true, false),
    SimpleCaseEntry(0xa692, 0, 2, false, true),
    SimpleCaseEntry(0xa693, 1, 2, true, false),
    SimpleCaseEntry(0x03fd, 0, 2, false, true),
    SimpleCaseEntry(0x037b, 1, 2, true, false),
    SimpleCaseEntry(0xa694, 0, 2, false, true),
    SimpleCaseEntry(0xa695, 1, 2, true, false),
    SimpleCaseEntry(0x03fe, 0, 2, false, true),
    SimpleCaseEntry(0x037c, 1, 2, true, false),
    SimpleCaseEntry(0x03ff, 0, 2, false, true),
    SimpleCaseEntry(0x037d, 1, 2, true, false),
    SimpleCaseEntry(0x1f59, 0, 2, false, true),
    SimpleCaseEntry(0x1f51, 1, 2, true, false),
    SimpleCaseEntry(0xa696, 0, 2, false, true),
    SimpleCaseEntry(0xa697, 1, 2, true, false),
    SimpleCaseEntry(0x0400, 0, 2, false, true),
    SimpleCaseEntry(0x0450, 1, 2, true, false),
    SimpleCaseEntry(0x0401, 0, 2, false, true),
    SimpleCaseEntry(0x0451, 1, 2, true, false),
    SimpleCaseEntry(0x1f5b, 0, 2, false, true),
    SimpleCaseEntry(0x1f53, 1, 2, true, false),
    SimpleCaseEntry(0x0402, 0, 2, false, true),
    SimpleCaseEntry(0x0452, 1, 2, true, false),
    SimpleCaseEntry(0x0403, 0, 2, false, true),
    SimpleCaseEntry(0x0453, 1, 2, true, false),
    SimpleCaseEntry(0x1f5d, 0, 2, false, true),
    SimpleCaseEntry(0x1f55, 1, 2, true, false),
    SimpleCaseEntry(0x0404, 0, 2, false, true),
    SimpleCaseEntry(0x0454, 1, 2, true, false),
    SimpleCaseEntry(0x0405, 0, 2, false, true),
    SimpleCaseEntry(0x0455, 1, 2, true, false),
    SimpleCaseEntry(0x1f5f, 0, 2, false, true),
    SimpleCaseEntry(0x1f57, 1, 2, true, false),
    SimpleCaseEntry(0x0406, 0, 2, false, true),
    SimpleCaseEntry(0x0456, 1, 2, true, false),
    SimpleCaseEntry(0x0407, 0, 2, false, true),
    SimpleCaseEntry(0x0457, 1, 2, true, false),
    SimpleCaseEntry(0x0408, 0, 2, false, true),
    SimpleCaseEntry(0x0458, 1, 2, true, false),
    SimpleCaseEntry(0x0409, 0, 2, false, true),
    SimpleCaseEntry(0x0459, 1, 2, true, false),
    SimpleCaseEntry(0x0100, 0, 2, false, true),
    SimpleCaseEntry(0x0101, 1, 2, true, false),
    SimpleCaseEntry(0x040a, 0, 2, false, true),
    SimpleCaseEntry(0x045a, 1, 2, true, false),
    SimpleCaseEntry(0x040b, 0, 2, false, true),
    SimpleCaseEntry(0x045b, 1, 2, true, false),
    SimpleCaseEntry(0x0102, 0, 2, false, true),
    SimpleCaseEntry(0x0103, 1, 2, true, false),
    SimpleCaseEntry(0x040c, 0, 2, false, true),
    SimpleCaseEntry(0x045c, 1, 2, true, false),
    SimpleCaseEntry(0x040d, 0, 2, false, true),
    SimpleCaseEntry(0x045d, 1, 2, true, false),
    SimpleCaseEntry(0x0104, 0, 2, false, true),
    SimpleCaseEntry(0x0105, 1, 2, true, false),
    SimpleCaseEntry(0x040e, 0, 2, false, true),
    SimpleCaseEntry(0x045e, 1, 2, true, false),
    SimpleCaseEntry(0x1f68, 0, 2, false, true),
    SimpleCaseEntry(0x1f60, 1, 2, true, false),
    SimpleCaseEntry(0x040f, 0, 2, false, true),
    SimpleCaseEntry(0x045f, 1, 2, true, false),
    SimpleCaseEntry(0x1f69, 0, 2, false, true),
    SimpleCaseEntry(0x1f61, 1, 2, true, false),
    SimpleCaseEntry(0x0106, 0, 2, false, true),
    SimpleCaseEntry(0x0107, 1, 2, true, false),
    SimpleCaseEntry(0x0410, 0, 2, false, true),
    SimpleCaseEntry(0x0430, 1, 2, true, false),
    SimpleCaseEntry(0x1f6a, 0, 2, false, true),
    SimpleCaseEntry(0x1f62, 1, 2, true, false),
    SimpleCaseEntry(0x0411, 0, 2, false, true),
    SimpleCaseEntry(0x0431, 1, 2, true, false),
    SimpleCaseEntry(0x1f6b, 0, 2, false, true),
    SimpleCaseEntry(0x1f63, 1, 2, true, false),
    SimpleCaseEntry(0x0108, 0, 2, false, true),
    SimpleCaseEntry(0x0109, 1, 2, true, false),
    SimpleCaseEntry(0x0412, 0, 2, false, true),
    SimpleCaseEntry(0x0432, 1, 2, true, false),
    SimpleCaseEntry(0x1f6c, 0, 2, false, true),
    SimpleCaseEntry(0x1f64, 1, 2, true, false),
    SimpleCaseEntry(0x0413, 0, 2, false, true),
    SimpleCaseEntry(0x0433, 1, 2, true, false),
    SimpleCaseEntry(0x1f6d, 0, 2, false, true),
    SimpleCaseEntry(0x1f65, 1, 2, true, false),
    SimpleCaseEntry(0x010a, 0, 2, false, true),
    SimpleCaseEntry(0x010b, 1, 2, true, false),
    SimpleCaseEntry(0x0414, 0, 2, false, true),
    SimpleCaseEntry(0x0434, 1, 2, true, false),
    SimpleCaseEntry(0x1f6e, 0, 2, false, true),
    SimpleCaseEntry(0x1f66, 1, 2, true, false),
    SimpleCaseEntry(0x0415, 0, 2, false, true),
    SimpleCaseEntry(0x0435, 1, 2, true, false),
    SimpleCaseEntry(0x1f6f, 0, 2, false, true),
    SimpleCaseEntry(0x1f67, 1, 2, true, false),
    SimpleCaseEntry(0x010c, 0, 2, false, true),
    SimpleCaseEntry(0x010d, 1, 2, true, false),
    SimpleCaseEntry(0x0416, 0, 2, false, true),
    SimpleCaseEntry(0x0436, 1, 2, true, false),
    SimpleCaseEntry(0x0417, 0, 2, false, true),
    SimpleCaseEntry(0x0437, 1, 2, true, false),
    SimpleCaseEntry(0x010e, 0, 2, false, true),
    SimpleCaseEntry(0x010f, 1, 2, true, false),
    SimpleCaseEntry(0x0418, 0, 2, false, true),
    SimpleCaseEntry(0x0438, 1, 2, true, false),
    SimpleCaseEntry(0x0419, 0, 2, false, true),
    SimpleCaseEntry(0x0439, 1, 2, true, false),
    SimpleCaseEntry(0x0110, 0, 2, false, true),
    SimpleCaseEntry(0x0111, 1, 2, true, false),
    SimpleCaseEntry(0x041a, 0, 2, false, true),
    SimpleCaseEntry(0x043a, 1, 2, true, false),
    SimpleCaseEntry(0x041b, 0, 2, false, true),
    SimpleCaseEntry(0x043b, 1, 2, true, false),
    SimpleCaseEntry(0x0112, 0, 2, false, true),
    SimpleCaseEntry(0x0113, 1, 2, true, false),
    SimpleCaseEntry(0x041c, 0, 2, false, true),
    SimpleCaseEntry(0x043c, 1, 2, true, false),
    SimpleCaseEntry(0x041d, 0, 2, false, true),
    SimpleCaseEntry(0x043d, 1, 2, true, false),
    SimpleCaseEntry(0x0114, 0, 2, false, true),
    SimpleCaseEntry(0x0115, 1, 2, true, false),
    SimpleCaseEntry(0x041e, 0, 2, false, true),
    SimpleCaseEntry(0x043e, 1, 2, true, false),
    SimpleCaseEntry(0x041f, 0, 2, false, true),
    SimpleCaseEntry(0x043f, 1, 2, true, false),
    SimpleCaseEntry(0x0116, 0, 2, false, true),
    SimpleCaseEntry(0x0117, 1, 2, true, false),
    SimpleCaseEntry(0x0420, 0, 2, false, true),
    SimpleCaseEntry(0x0440, 1, 2, true, false),
    SimpleCaseEntry(0x0421, 0, 2, false, true),
    SimpleCaseEntry(0x0441, 1, 2, true, false),
    SimpleCaseEntry(0x0118, 0, 2, false, true),
    SimpleCaseEntry(0x0119, 1, 2, true, false),
    SimpleCaseEntry(0x0422, 0, 2, false, true),
    SimpleCaseEntry(0x0442, 1, 2, true, false),
    SimpleCaseEntry(0x0423, 0, 2, false, true),
    SimpleCaseEntry(0x0443, 1, 2, true, false),
    SimpleCaseEntry(0x011a, 0, 2, false, true),
    SimpleCaseEntry(0x011b, 1, 2, true, false),
    SimpleCaseEntry(0x0424, 0, 2, false, true),
    SimpleCaseEntry(0x0444, 1, 2, true, false),
    SimpleCaseEntry(0x0425, 0, 2, false, true),
    SimpleCaseEntry(0x0445, 1, 2, true, false),
    SimpleCaseEntry(0x011c, 0, 2, false, true),
    SimpleCaseEntry(0x011d, 1, 2, true, false),
    SimpleCaseEntry(0x0426, 0, 2, false, true),
    SimpleCaseEntry(0x0446, 1, 2, true, false),
    SimpleCaseEntry(0x0427, 0, 2, false, true),
    SimpleCaseEntry(0x0447, 1, 2, true, false),
    SimpleCaseEntry(0x011e, 0, 2, false, true),
    SimpleCaseEntry(0x011f, 1, 2, true, false),
    SimpleCaseEntry(0x0428, 0, 2, false, true),
    SimpleCaseEntry(0x0448, 1, 2, true, false),
    SimpleCaseEntry(0x0429, 0, 2, false, true),
    SimpleCaseEntry(0x0449, 1, 2, true, false),
    SimpleCaseEntry(0x0120, 0, 2, false, true),
    SimpleCaseEntry(0x0121, 1, 2, true, false),
    SimpleCaseEntry(0x042a, 0, 2, false, true),
    SimpleCaseEntry(0x044a, 1, 2, true, false),
    SimpleCaseEntry(0x042b, 0, 2, false, true),
    SimpleCaseEntry(0x044b, 1, 2, true, false),
    SimpleCaseEntry(0x1e00, 0, 2, false, true),
    SimpleCaseEntry(0x1e01, 1, 2, true, false),
    SimpleCaseEntry(0x0122, 0, 2, false, true),
    SimpleCaseEntry(0x0123, 1, 2, true, false),
    SimpleCaseEntry(0x042c, 0, 2, false, true),
    SimpleCaseEntry(0x044c, 1, 2, true, false),
    SimpleCaseEntry(0x042d, 0, 2, false, true),
    SimpleCaseEntry(0x044d, 1, 2, true, false),
    SimpleCaseEntry(0x1e02, 0, 2, false, true),
    SimpleCaseEntry(0x1e03, 1, 2, true, false),
    SimpleCaseEntry(0x0124, 0, 2, false, true),
    SimpleCaseEntry(0x0125, 1, 2, true, false),
    SimpleCaseEntry(0x042e, 0, 2, false, true),
    SimpleCaseEntry(0x044e, 1, 2, true, false),
    SimpleCaseEntry(0x1f88, 0, 2, false, false),
    SimpleCaseEntry(0x1f80, 1, 2, true, false),
    SimpleCaseEntry(0x042f, 0, 2, false, true),
    SimpleCaseEntry(0x044f, 1, 2, true, false),
    SimpleCaseEntry(0x1e04, 0, 2, false, true),
    SimpleCaseEntry(0x1e05, 1, 2, true, false),
    SimpleCaseEntry(0x1f89, 0, 2, false, false),
    SimpleCaseEntry(0x1f81, 1, 2, true, false),
    SimpleCaseEntry(0x0126, 0, 2, false, true),
    SimpleCaseEntry(0x0127, 1, 2, true, false),
    SimpleCaseEntry(0x1f8a, 0, 2, false, false),
    SimpleCaseEntry(0x1f82, 1, 2, true, false),
    SimpleCaseEntry(0x1e06, 0, 2, false, true),
    SimpleCaseEntry(0x1e07, 1, 2, true, false),
    SimpleCaseEntry(0x1f8b, 0, 2, false, false),
    SimpleCaseEntry(0x1f83, 1, 2, true, false),
    SimpleCaseEntry(0x0128, 0, 2, false, true),
    SimpleCaseEntry(0x0129, 1, 2, true, false),
    SimpleCaseEntry(0x1f8c, 0, 2, false, false),
    SimpleCaseEntry(0x1f84, 1, 2, true, false),
    SimpleCaseEntry(0x1e08, 0, 2, false, true),
    SimpleCaseEntry(0x1e09, 1, 2, true, false),
    SimpleCaseEntry(0x1f8d, 0, 2, false, false),
    SimpleCaseEntry(0x1f85, 1, 2, true, false),
    SimpleCaseEntry(0x012a, 0, 2, false, true),
    SimpleCaseEntry(0x012b, 1, 2, true, false),
    SimpleCaseEntry(0x1f8e, 0, 2, false, false),
    SimpleCaseEntry(0x1f86, 1, 2, true, false),
    SimpleCaseEntry(0x1e0a, 0, 2, false, true),
    SimpleCaseEntry(0x1e0b, 1, 2, true, false),
    SimpleCaseEntry(0x1f8f, 0, 2, false, false),
    SimpleCaseEntry(0x1f87, 1, 2, true, false),
    SimpleCaseEntry(0x012c, 0, 2, false, true),
    SimpleCaseEntry(0x012d, 1, 2, true, false),
    SimpleCaseEntry(0x1e0c, 0, 2, false, true),
    SimpleCaseEntry(0x1e0d, 1, 2, true, false),
    SimpleCaseEntry(0x012e, 0, 2, false, true),
    SimpleCaseEntry(0x012f, 1, 2, true, false),
    SimpleCaseEntry(0x1e0e, 0, 2, false, true),
    SimpleCaseEntry(0x1e0f, 1, 2, true, false),
    SimpleCaseEntry(0x1e10, 0, 2, false, true),
    SimpleCaseEntry(0x1e11, 1, 2, true, false),
    SimpleCaseEntry(0x0132, 0, 2, false, true),
    SimpleCaseEntry(0x0133, 1, 2, true, false),
    SimpleCaseEntry(0x1e12, 0, 2, false, true),
    SimpleCaseEntry(0x1e13, 1, 2, true, false),
    SimpleCaseEntry(0x0134, 0, 2, false, true),
    SimpleCaseEntry(0x0135, 1, 2, true, false),
    SimpleCaseEntry(0x1f98, 0, 2, false, false),
    SimpleCaseEntry(0x1f90, 1, 2, true, false),
    SimpleCaseEntry(0x1e14, 0, 2, false, true),
    SimpleCaseEntry(0x1e15, 1, 2, true, false),
    SimpleCaseEntry(0x1f99, 0, 2, false, false),
    SimpleCaseEntry(0x1f91, 1, 2, true, false),
    SimpleCaseEntry(0x0136, 0, 2, false, true),
    SimpleCaseEntry(0x0137, 1, 2, true, false),
    SimpleCaseEntry(0x1f9a, 0, 2, false, false),
    SimpleCaseEntry(0x1f92, 1, 2, true, false),
    SimpleCaseEntry(0x1e16, 0, 2, false, true),
    SimpleCaseEntry(0x1e17, 1, 2, true, false),
    SimpleCaseEntry(0x1f9b, 0, 2, false, false),
    SimpleCaseEntry(0x1f93, 1, 2, true, false),
    SimpleCaseEntry(0x1f9c, 0, 2, false, false),
    SimpleCaseEntry(0x1f94, 1, 2, true, false),
    SimpleCaseEntry(0x0139, 0, 2, false, true),
    SimpleCaseEntry(0x013a, 1, 2, true, false),
    SimpleCaseEntry(0x1e18, 0, 2, false, true),
    SimpleCaseEntry(0x1e19, 1, 2, true, false),
    SimpleCaseEntry(0x1f9d, 0, 2, false, false),
    SimpleCaseEntry(0x1f95, 1, 2, true, false),
    SimpleCaseEntry(0x1f9e, 0, 2, false, false),
    SimpleCaseEntry(0x1f96, 1, 2, true, false),
    SimpleCaseEntry(0x013b, 0, 2, false, true),
    SimpleCaseEntry(0x013c, 1, 2, true, false),
    SimpleCaseEntry(0x1e1a, 0, 2, false, true),
    SimpleCaseEntry(0x1e1b, 1, 2, true, false),
    SimpleCaseEntry(0x1f9f, 0, 2, false, false),
    SimpleCaseEntry(0x1f97, 1, 2, true, false),
    SimpleCaseEntry(0x013d, 0, 2, false, true),
    SimpleCaseEntry(0x013e, 1, 2, true, false),
    SimpleCaseEntry(0x1e1c, 0, 2, false, true),
    SimpleCaseEntry(0x1e1d, 1, 2, true, false),
    SimpleCaseEntry(0x2126, 0, 3, false, true),
    SimpleCaseEntry(0x03c9, 1, 3, true, false),
    SimpleCaseEntry(0x03a9, 2, 3, false, true),
    SimpleCaseEntry(0x013f, 0, 2, false, true),
    SimpleCaseEntry(0x0140, 1, 2, true, false),
    SimpleCaseEntry(0x1e1e, 0, 2, false, true),
    SimpleCaseEntry(0x1e1f, 1, 2, true, false),
    SimpleCaseEntry(0x0141, 0, 2, false, true),
    SimpleCaseEntry(0x0142, 1, 2, true, false),
    SimpleCaseEntry(0x1e20, 0, 2, false, true),
    SimpleCaseEntry(0x1e21, 1, 2, true, false),
    SimpleCaseEntry(0x212a, 0, 3, false, true),
    SimpleCaseEntry(0x006b, 1, 3, true, false),
    SimpleCaseEntry(0x004b, 2, 3, false, true),
    SimpleCaseEntry(0x212b, 0, 3, false, true),
    SimpleCaseEntry(0x00e5, 1, 3, true, false),
    SimpleCaseEntry(0x00c5, 2, 3, false, true),
    SimpleCaseEntry(0x0143, 0, 2, false, true),
    SimpleCaseEntry(0x0144, 1, 2, true, false),
    SimpleCaseEntry(0x1e22, 0, 2, false, true),
    SimpleCaseEntry(0x1e23, 1, 2, true, false),
    SimpleCaseEntry(0x1fa8, 0, 2, false, false),
    SimpleCaseEntry(0x1fa0, 1, 2, true, false),
    SimpleCaseEntry(0x0145, 0, 2, false, true),
    SimpleCaseEntry(0x0146, 1, 2, true, false),
    SimpleCaseEntry(0x1e24, 0, 2, false, true),
    SimpleCaseEntry(0x1e25, 1, 2, true, false),
    SimpleCaseEntry(0x1fa9, 0, 2, false, false),
    SimpleCaseEntry(0x1fa1, 1, 2, true, false),
    SimpleCaseEntry(0x1faa, 0, 2, false, false),
    SimpleCaseEntry(0x1fa2, 1, 2, true, false),
    SimpleCaseEntry(0x0147, 0, 2, false, true),
    SimpleCaseEntry(0x0148, 1, 2, true, false),
    SimpleCaseEntry(0x1e26, 0, 2, false, true),
    SimpleCaseEntry(0x1e27, 1, 2, true, false),
    SimpleCaseEntry(0x1fab, 0, 2, false, false),
    SimpleCaseEntry(0x1fa3, 1, 2, true, false),
    SimpleCaseEntry(0x1fac, 0, 2, false, false),
    SimpleCaseEntry(0x1fa4, 1, 2, true, false),
    SimpleCaseEntry(0x1e28, 0, 2, false, true),
    SimpleCaseEntry(0x1e29, 1, 2, true, false),
    SimpleCaseEntry(0x1fad, 0, 2, false, false),
    SimpleCaseEntry(0x1fa5, 1, 2, true, false),
    SimpleCaseEntry(0x2132, 0, 2, false, true),
    SimpleCaseEntry(0x214e, 1, 2, true, false),
    SimpleCaseEntry(0x014a, 0, 2, false, true),
    SimpleCaseEntry(0x014b, 1, 2, true, false),
    SimpleCaseEntry(0x1fae, 0, 2, false, false),
    SimpleCaseEntry(0x1fa6, 1, 2, true, false),
    SimpleCaseEntry(0x1e2a, 0, 2, false, true),
    SimpleCaseEntry(0x1e2b, 1, 2, true, false),
    SimpleCaseEntry(0x1faf, 0, 2, false, false),
    SimpleCaseEntry(0x1fa7, 1, 2, true, false),
    SimpleCaseEntry(0x014c, 0, 2, false, true),
    SimpleCaseEntry(0x014d, 1, 2, true, false),
    SimpleCaseEntry(0x1e2c, 0, 2, false, true),
    SimpleCaseEntry(0x1e2d, 1, 2, true, false),
    SimpleCaseEntry(0x014e, 0, 2, false, true),
    SimpleCaseEntry(0x014f, 1, 2, true, false),
    SimpleCaseEntry(0x1e2e, 0, 2, false, true),
    SimpleCaseEntry(0x1e2f, 1, 2, true, false),
    SimpleCaseEntry(0x0150, 0, 2, false, true),
    SimpleCaseEntry(0x0151, 1, 2, true, false),
    SimpleCaseEntry(0x1e30, 0, 2, false, true),
    SimpleCaseEntry(0x1e31, 1, 2, true, false),
    SimpleCaseEntry(0x0152, 0, 2, false, true),
    SimpleCaseEntry(0x0153, 1, 2, true, false),
    SimpleCaseEntry(0x1e32, 0, 2, false, true),
    SimpleCaseEntry(0x1e33, 1, 2, true, false),
    SimpleCaseEntry(0x0154, 0, 2, false, true),
    SimpleCaseEntry(0x0155, 1, 2, true, false),
    SimpleCaseEntry(0x1fb8, 0, 2, false, true),
    SimpleCaseEntry(0x1fb0, 1, 2, true, false),
    SimpleCaseEntry(0x1e34, 0, 2, false, true),
    SimpleCaseEntry(0x1e35, 1, 2, true, false),
    SimpleCaseEntry(0x1fb9, 0, 2, false, true),
    SimpleCaseEntry(0x1fb1, 1, 2, true, false),
    SimpleCaseEntry(0x0156, 0, 2, false, true),
    SimpleCaseEntry(0x0157, 1, 2, true, false),
    SimpleCaseEntry(0x0460, 0, 2, false, true),
    SimpleCaseEntry(0x0461, 1, 2, true, false),
    SimpleCaseEntry(0x1fba, 0, 2, false, true),
    SimpleCaseEntry(0x1f70, 1, 2, true, false),
    SimpleCaseEntry(0x1e36, 0, 2, false, true),
    SimpleCaseEntry(0x1e37, 1, 2, true, false),
    SimpleCaseEntry(0x1fbb, 0, 2, false, true),
    SimpleCaseEntry(0x1f71, 1, 2, true, false),
    SimpleCaseEntry(0x0158, 0, 2, false, true),
    SimpleCaseEntry(0x0159, 1, 2, true, false),
    SimpleCaseEntry(0x0462, 0, 2, false, true),
    SimpleCaseEntry(0x0463, 1, 2, true, false),
    SimpleCaseEntry(0x1fbc, 0, 2, false, false),
    SimpleCaseEntry(0x1fb3, 1, 2, true, false),
    SimpleCaseEntry(0x1e38, 0, 2, false, true),
    SimpleCaseEntry(0x1e39, 1, 2, true, false),
    SimpleCaseEntry(0x015a, 0, 2, false, true),
    SimpleCaseEntry(0x015b, 1, 2, true, false),
    SimpleCaseEntry(0x0464, 0, 2, false, true),
    SimpleCaseEntry(0x0465, 1, 2, true, false),
    SimpleCaseEntry(0x1fbe, 0, 4, true, false),
    SimpleCaseEntry(0x03b9, 1, 4, true, false),
    SimpleCaseEntry(0x0345, 2, 4, true, false),
    SimpleCaseEntry(0x0399, 3, 4, false, true),
    SimpleCaseEntry(0x1e3a, 0, 2, false, true),
    SimpleCaseEntry(0x1e3b, 1, 2, true, false),
    SimpleCaseEntry(0x015c, 0, 2, false, true),
    SimpleCaseEntry(0x015d, 1, 2, true, false),
    SimpleCaseEntry(0x0466, 0, 2, false, true),
    SimpleCaseEntry(0x0467, 1, 2, true, false),
    SimpleCaseEntry(0x1e3c, 0, 2, false, true),
    SimpleCaseEntry(0x1e3d, 1, 2, true, false),
    SimpleCaseEntry(0x015e, 0, 2, false, true),
    SimpleCaseEntry(0x015f, 1, 2, true, false),
    SimpleCaseEntry(0x0468, 0, 2, false, true),
    SimpleCaseEntry(0x0469, 1, 2, true, false),
    SimpleCaseEntry(0xff21, 0, 2, false, true),
    SimpleCaseEntry(0xff41, 1, 2, true, false),
    SimpleCaseEntry(0x1e3e, 0, 2, false, true),
    SimpleCaseEntry(0x1e3f, 1, 2, true, false),
    SimpleCaseEntry(0xff22, 0, 2, false, true),
    SimpleCaseEntry(0xff42, 1, 2, true, false),
    SimpleCaseEntry(0x0160, 0, 2, false, true),
    SimpleCaseEntry(0x0161, 1, 2, true, false),
    SimpleCaseEntry(0x046a, 0, 2, false, true),
    SimpleCaseEntry(0x046b, 1, 2, true, false),
    SimpleCaseEntry(0xff23, 0, 2, false, true),
    SimpleCaseEntry(0xff43, 1, 2, true, false),
    SimpleCaseEntry(0x1e40, 0, 2, false, true),
    SimpleCaseEntry(0x1e41, 1, 2, true, false),
    SimpleCaseEntry(0xff24, 0, 2, false, true),
    SimpleCaseEntry(0xff44, 1, 2, true, false),
    SimpleCaseEntry(0x0162, 0, 2, false, true),
    SimpleCaseEntry(0x0163, 1, 2, true, false),
    SimpleCaseEntry(0x046c, 0, 2, false, true),
    SimpleCaseEntry(0x046d, 1, 2, true, false),
    SimpleCaseEntry(0xff25, 0, 2, false, true),
    SimpleCaseEntry(0xff45, 1, 2, true, false),
    SimpleCaseEntry(0x1e42, 0, 2, false, true),
    SimpleCaseEntry(0x1e43, 1, 2, true, false),
    SimpleCaseEntry(0xff26, 0, 2, false, true),
    SimpleCaseEntry(0xff46, 1, 2, true, false),
    SimpleCaseEntry(0x0164, 0, 2, false, true),
    SimpleCaseEntry(0x0165, 1, 2, true, false),
    SimpleCaseEntry(0x046e, 0, 2, false, true),
    SimpleCaseEntry(0x046f, 1, 2, true, false),
    SimpleCaseEntry(0x1fc8, 0, 2, false, true),
    SimpleCaseEntry(0x1f72, 1, 2, true, false),
    SimpleCaseEntry(0xff27, 0, 2, false, true),
    SimpleCaseEntry(0xff47, 1, 2, true, false),
    SimpleCaseEntry(0x1e44, 0, 2, false, true),
    SimpleCaseEntry(0x1e45, 1, 2, true, false),
    SimpleCaseEntry(0x1fc9, 0, 2, false, true),
    SimpleCaseEntry(0x1f73, 1, 2, true, false),
    SimpleCaseEntry(0xff28, 0, 2, false, true),
    SimpleCaseEntry(0xff48, 1, 2, true, false),
    SimpleCaseEntry(0x0166, 0, 2, false, true),
    SimpleCaseEntry(0x0167, 1, 2, true, false),
    SimpleCaseEntry(0x0470, 0, 2, false, true),
    SimpleCaseEntry(0x0471, 1, 2, true, false),
    SimpleCaseEntry(0x1fca, 0, 2, false, true),
    SimpleCaseEntry(0x1f74, 1, 2, true, false),
    SimpleCaseEntry(0xff29, 0, 2, false, true),
    SimpleCaseEntry(0xff49, 1, 2, true, false),
    SimpleCaseEntry(0x1e46, 0, 2, false, true),
    SimpleCaseEntry(0x1e47, 1, 2, true, false),
    SimpleCaseEntry(0x1fcb, 0, 2, false, true),
    SimpleCaseEntry(0x1f75, 1, 2, true, false),
    SimpleCaseEntry(0xff2a, 0, 2, false, true),
    SimpleCaseEntry(0xff4a, 1, 2, true, false),
    SimpleCaseEntry(0x0168, 0, 2, false, true),
    SimpleCaseEntry(0x0169, 1, 2, true, false),
    SimpleCaseEntry(0x0472, 0, 2, false, true),
    SimpleCaseEntry(0x0473, 1, 2, true, false),
    SimpleCaseEntry(0x1fcc, 0, 2, false, false),
    SimpleCaseEntry(0x1fc3, 1, 2, true, false),
    SimpleCaseEntry(0xff2b, 0, 2, false, true),
    SimpleCaseEntry(0xff4b, 1, 2, true, false),
    SimpleCaseEntry(0x1e48, 0, 2, false, true),
    SimpleCaseEntry(0x1e49, 1, 2, true, false),
    SimpleCaseEntry(0xff2c, 0, 2, false, true),
    SimpleCaseEntry(0xff4c, 1, 2, true, false),
    SimpleCaseEntry(0x016a, 0, 2, false, true),
    SimpleCaseEntry(0x016b, 1, 2, true, false),
    SimpleCaseEntry(0x0474, 0, 2, false, true),
    SimpleCaseEntry(0x0475, 1, 2, true, false),
    SimpleCaseEntry(0xff2d, 0, 2, false, true),
    SimpleCaseEntry(0xff4d, 1, 2, true, false),
    SimpleCaseEntry(0x1e4a, 0, 2, false, true),
    SimpleCaseEntry(0x1e4b, 1, 2, true, false),
    SimpleCaseEntry(0xff2e, 0, 2, false, true),
    SimpleCaseEntry(0xff4e, 1, 2, true, false),
    SimpleCaseEntry(0x016c, 0, 2, false, true),
    SimpleCaseEntry(0x016d, 1, 2, true, false),
    SimpleCaseEntry(0x0476, 0, 2, false, true),
    SimpleCaseEntry(0x0477, 1, 2, true, false),
    SimpleCaseEntry(0xff2f, 0, 2, false, true),
    SimpleCaseEntry(0xff4f, 1, 2, true, false),
    SimpleCaseEntry(0x1e4c, 0, 2, false, true),
    SimpleCaseEntry(0x1e4d, 1, 2, true, false),
    SimpleCaseEntry(0xff30, 0, 2, false, true),
    SimpleCaseEntry(0xff50, 1, 2, true, false),
    SimpleCaseEntry(0x016e, 0, 2, false, true),
    SimpleCaseEntry(0x016f, 1, 2, true, false),
    SimpleCaseEntry(0x0478, 0, 2, false, true),
    SimpleCaseEntry(0x0479, 1, 2, true, false),
    SimpleCaseEntry(0x10a0, 0, 2, false, true),
    SimpleCaseEntry(0x2d00, 1, 2, true, false),
    SimpleCaseEntry(0xff31, 0, 2, false, true),
    SimpleCaseEntry(0xff51, 1, 2, true, false),
    SimpleCaseEntry(0x10a1, 0, 2, false, true),
    SimpleCaseEntry(0x2d01, 1, 2, true, false),
    SimpleCaseEntry(0x1e4e, 0, 2, false, true),
    SimpleCaseEntry(0x1e4f, 1, 2, true, false),
    SimpleCaseEntry(0xff32, 0, 2, false, true),
    SimpleCaseEntry(0xff52, 1, 2, true, false),
    SimpleCaseEntry(0x0170, 0, 2, false, true),
    SimpleCaseEntry(0x0171, 1, 2, true, false),
    SimpleCaseEntry(0x047a, 0, 2, false, true),
    SimpleCaseEntry(0x047b, 1, 2, true, false),
    SimpleCaseEntry(0x10a2, 0, 2, false, true),
    SimpleCaseEntry(0x2d02, 1, 2, true, false),
    SimpleCaseEntry(0xff33, 0, 2, false, true),
    SimpleCaseEntry(0xff53, 1, 2, true, false),
    SimpleCaseEntry(0x10a3, 0, 2, false, true),
    SimpleCaseEntry(0x2d03, 1, 2, true, false),
    SimpleCaseEntry(0x1e50, 0, 2, false, true),
    SimpleCaseEntry(0x1e51, 1, 2, true, false),
    SimpleCaseEntry(0xff34, 0, 2, false, true),
    SimpleCaseEntry(0xff54, 1, 2, true, false),
    SimpleCaseEntry(0x0172, 0, 2, false, true),
    SimpleCaseEntry(0x0173, 1, 2, true, false),
    SimpleCaseEntry(0x047c, 0, 2, false, true),
    SimpleCaseEntry(0x047d, 1, 2, true, false),
    SimpleCaseEntry(0x10a4, 0, 2, false, true),
    SimpleCaseEntry(0x2d04, 1, 2, true, false),
    SimpleCaseEntry(0xff35, 0, 2, false, true),
    SimpleCaseEntry(0xff55, 1, 2, true, false),
    SimpleCaseEntry(0x10a5, 0, 2, false, true),
    SimpleCaseEntry(0x2d05, 1, 2, true, false),
    SimpleCaseEntry(0x1e52, 0, 2, false, true),
    SimpleCaseEntry(0x1e53, 1, 2, true, false),
    SimpleCaseEntry(0xff36, 0, 2, false, true),
    SimpleCaseEntry(0xff56, 1, 2, true, false),
    SimpleCaseEntry(0x0174, 0, 2, false, true),
    SimpleCaseEntry(0x0175, 1, 2, true, false),
    SimpleCaseEntry(0x047e, 0, 2, false, true),
    SimpleCaseEntry(0x047f, 1, 2, true, false),
    SimpleCaseEntry(0x10a6, 0, 2, false, true),
    SimpleCaseEntry(0x2d06, 1, 2, true, false),
    SimpleCaseEntry(0x1fd8, 0, 2, false, true),
    SimpleCaseEntry(0x1fd0, 1, 2, true, false),
    SimpleCaseEntry(0x2c00, 0, 2, false, true),
    SimpleCaseEntry(0x2c30, 1, 2, true, false),
    SimpleCaseEntry(0xff37, 0, 2, false, true),
    SimpleCaseEntry(0xff57, 1, 2, true, false),
    SimpleCaseEntry(0x10a7, 0, 2, false, true),
    SimpleCaseEntry(0x2d07, 1, 2, true, false),
    SimpleCaseEntry(0x1e54, 0, 2, false, true),
    SimpleCaseEntry(0x1e55, 1, 2, true, false),
    SimpleCaseEntry(0x1fd9, 0, 2, false, true),
    SimpleCaseEntry(0x1fd1, 1, 2, true, false),
    SimpleCaseEntry(0x2c01, 0, 2, false, true),
    SimpleCaseEntry(0x2c31, 1, 2, true, false),
    SimpleCaseEntry(0xff38, 0, 2, false, true),
    SimpleCaseEntry(0xff58, 1, 2, true, false),
    SimpleCaseEntry(0x0176, 0, 2, false, true),
    SimpleCaseEntry(0x0177, 1, 2, true, false),
    SimpleCaseEntry(0x0480, 0, 2, false, true),
    SimpleCaseEntry(0x0481, 1, 2, true, false),
    SimpleCaseEntry(0x10a8, 0, 2, false, true),
    SimpleCaseEntry(0x2d08, 1, 2, true, false),
    SimpleCaseEntry(0x1fda, 0, 2, false, true),
    SimpleCaseEntry(0x1f76, 1, 2, true, false),
    SimpleCaseEntry(0x2c02, 0, 2, false, true),
    SimpleCaseEntry(0x2c32, 1, 2, true, false),
    SimpleCaseEntry(0xff39, 0, 2, false, true),
    SimpleCaseEntry(0xff59, 1, 2, true, false),
    SimpleCaseEntry(0x10a9, 0, 2, false, true),
    SimpleCaseEntry(0x2d09, 1, 2, true, false),
    SimpleCaseEntry(0x1e56, 0, 2, false, true),
    SimpleCaseEntry(0x1e57, 1, 2, true, false),
    SimpleCaseEntry(0x1fdb, 0, 2, false, true),
    SimpleCaseEntry(0x1f77, 1, 2, true, false),
    SimpleCaseEntry(0x2160, 0, 2, false, true),
    SimpleCaseEntry(0x2170, 1, 2, true, false),
    SimpleCaseEntry(0x2c03, 0, 2, false, true),
    SimpleCaseEntry(0x2c33, 1, 2, true, false),
    SimpleCaseEntry(0xff3a, 0, 2, false, true),
    SimpleCaseEntry(0xff5a, 1, 2, true, false),
    SimpleCaseEntry(0x0178, 0, 2, false, true),
    SimpleCaseEntry(0x00ff, 1, 2, true, false),
    SimpleCaseEntry(0x10aa, 0, 2, false, true),
    SimpleCaseEntry(0x2d0a, 1, 2, true, false),
    SimpleCaseEntry(0x2161, 0, 2, false, true),
    SimpleCaseEntry(0x2171, 1, 2, true, false),
    SimpleCaseEntry(0x2c04, 0, 2, false, true),
    SimpleCaseEntry(0x2c34, 1, 2, true, false),
    SimpleCaseEntry(0x0179, 0, 2, false, true),
    SimpleCaseEntry(0x017a, 1, 2, true, false),
    SimpleCaseEntry(0x10ab, 0, 2, false, true),
    SimpleCaseEntry(0x2d0b, 1, 2, true, false),
    SimpleCaseEntry(0x1e58, 0, 2, false, true),
    SimpleCaseEntry(0x1e59, 1, 2, true, false),
    SimpleCaseEntry(0x2162, 0, 2, false, true),
    SimpleCaseEntry(0x2172, 1, 2, true, false),
    SimpleCaseEntry(0x2c05, 0, 2, false, true),
    SimpleCaseEntry(0x2c35, 1, 2, true, false),
    SimpleCaseEntry(0x10ac, 0, 2, false, true),
    SimpleCaseEntry(0x2d0c, 1, 2, true, false),
    SimpleCaseEntry(0x2163, 0, 2, false, true),
    SimpleCaseEntry(0x2173, 1, 2, true, false),
    SimpleCaseEntry(0x2c06, 0, 2, false, true),
    SimpleCaseEntry(0x2c36, 1, 2, true, false),
    SimpleCaseEntry(0x017b, 0, 2, false, true),
    SimpleCaseEntry(0x017c, 1, 2, true, false),
    SimpleCaseEntry(0x10ad, 0, 2, false, true),
    SimpleCaseEntry(0x2d0d, 1, 2, true, false),
    SimpleCaseEntry(0x1e5a, 0, 2, false, true),
    SimpleCaseEntry(0x1e5b, 1, 2, true, false),
    SimpleCaseEntry(0x2164, 0, 2, false, true),
    SimpleCaseEntry(0x2174, 1, 2, true, false),
    SimpleCaseEntry(0x2c07, 0, 2, false, true),
    SimpleCaseEntry(0x2c37, 1, 2, true, false),
    SimpleCaseEntry(0x10ae, 0, 2, false, true),
    SimpleCaseEntry(0x2d0e, 1, 2, true, false),
    SimpleCaseEntry(0x2165, 0, 2, false, true),
    SimpleCaseEntry(0x2175, 1, 2, true, false),
    SimpleCaseEntry(0x2c08, 0, 2, false, true),
    SimpleCaseEntry(0x2c38, 1, 2, true, false),
    SimpleCaseEntry(0x017d, 0, 2, false, true),
    SimpleCaseEntry(0x017e, 1, 2, true, false),
    SimpleCaseEntry(0x10af, 0, 2, false, true),
    SimpleCaseEntry(0x2d0f, 1, 2, true, false),
    SimpleCaseEntry(0x1e5c, 0, 2, false, true),
    SimpleCaseEntry(0x1e5d, 1, 2, true, false),
    SimpleCaseEntry(0x2166, 0, 2, false, true),
    SimpleCaseEntry(0x2176, 1, 2, true, false),
    SimpleCaseEntry(0x2c09, 0, 2, false, true),
    SimpleCaseEntry(0x2c39, 1, 2, true, false),
    SimpleCaseEntry(0x10b0, 0, 2, false, true),
    SimpleCaseEntry(0x2d10, 1, 2, true, false),
    SimpleCaseEntry(0x2167, 0, 2, false, true),
    SimpleCaseEntry(0x2177, 1, 2, true, false),
    SimpleCaseEntry(0x2c0a, 0, 2, false, true),
    SimpleCaseEntry(0x2c3a, 1, 2, true, false),
    SimpleCaseEntry(0x017f, 0, 3, true, false),
    SimpleCaseEntry(0x0073, 1, 3, true, false),
    SimpleCaseEntry(0x0053, 2, 3, false, true),
    SimpleCaseEntry(0x10b1, 0, 2, false, true),
    SimpleCaseEntry(0x2d11, 1, 2, true, false),
    SimpleCaseEntry(0x1e5e, 0, 2, false, true),
    SimpleCaseEntry(0x1e5f, 1, 2, true, false),
    SimpleCaseEntry(0x2168, 0, 2, false, true),
    SimpleCaseEntry(0x2178, 1, 2, true, false),
    SimpleCaseEntry(0x2c0b, 0, 2, false, true),
    SimpleCaseEntry(0x2c3b, 1, 2, true, false),
    SimpleCaseEntry(0x048a, 0, 2, false, true),
    SimpleCaseEntry(0x048b, 1, 2, true, false),
    SimpleCaseEntry(0x10b2, 0, 2, false, true),
    SimpleCaseEntry(0x2d12, 1, 2, true, false),
    SimpleCaseEntry(0x2169, 0, 2, false, true),
    SimpleCaseEntry(0x2179, 1, 2, true, false),
    SimpleCaseEntry(0x2c0c, 0, 2, false, true),
    SimpleCaseEntry(0x2c3c, 1, 2, true, false),
    SimpleCaseEntry(0x0181, 0, 2, false, true),
    SimpleCaseEntry(0x0253, 1, 2, true, false),
    SimpleCaseEntry(0x10b3, 0, 2, false, true),
    SimpleCaseEntry(0x2d13, 1, 2, true, false),
    SimpleCaseEntry(0x1e60, 0, 3, false, true),
    SimpleCaseEntry(0x1e61, 1, 3, true, false),
    SimpleCaseEntry(0x1e9b, 2, 3, true, false),
    SimpleCaseEntry(0x216a, 0, 2, false, true),
    SimpleCaseEntry(0x217a, 1, 2, true, false),
    SimpleCaseEntry(0x2c0d, 0, 2, false, true),
    SimpleCaseEntry(0x2c3d, 1, 2, true, false),
    SimpleCaseEntry(0xa722, 0, 2, false, true),
    SimpleCaseEntry(0xa723, 1, 2, true, false),
    SimpleCaseEntry(0x0182, 0, 2, false, true),
    SimpleCaseEntry(0x0183, 1, 2, true, false),
    SimpleCaseEntry(0x048c, 0, 2, false, true),
    SimpleCaseEntry(0x048d, 1, 2, true, false),
    SimpleCaseEntry(0x10b4, 0, 2, false, true),
    SimpleCaseEntry(0x2d14, 1, 2, true, false),
    SimpleCaseEntry(0x216b, 0, 2, false, true),
    SimpleCaseEntry(0x217b, 1, 2, true, false),
    SimpleCaseEntry(0x2c0e, 0, 2, false, true),
    SimpleCaseEntry(0x2c3e, 1, 2, true, false),
    SimpleCaseEntry(0x10b5, 0, 2, false, true),
    SimpleCaseEntry(0x2d15, 1, 2, true, false),
    SimpleCaseEntry(0x1e62, 0, 2, false, true),
    SimpleCaseEntry(0x1e63, 1, 2, true, false),
    SimpleCaseEntry(0x216c, 0, 2, false, true),
    SimpleCaseEntry(0x217c, 1, 2, true, false),
    SimpleCaseEntry(0x2c0f, 0, 2, false, true),
    SimpleCaseEntry(0x2c3f, 1, 2, true, false),
    SimpleCaseEntry(0xa724, 0, 2, false, true),
    SimpleCaseEntry(0xa725, 1, 2, true, false),
    SimpleCaseEntry(0x0184, 0, 2, false, true),
    SimpleCaseEntry(0x0185, 1, 2, true, false),
    SimpleCaseEntry(0x048e, 0, 2, false, true),
    SimpleCaseEntry(0x048f, 1, 2, true, false),
    SimpleCaseEntry(0x10b6, 0, 2, false, true),
    SimpleCaseEntry(0x2d16, 1, 2, true, false),
    SimpleCaseEntry(0x1fe8, 0, 2, false, true),
    SimpleCaseEntry(0x1fe0, 1, 2, true, false),
    SimpleCaseEntry(0x216d, 0, 2, false, true),
    SimpleCaseEntry(0x217d, 1, 2, true, false),
    SimpleCaseEntry(0x2c10, 0, 2, false, true),
    SimpleCaseEntry(0x2c40, 1, 2, true, false)
];
immutable fullCaseTable = [
    FullCaseEntry("Ⴗ", 0, 2),
    FullCaseEntry("ⴗ", 1, 2),
    FullCaseEntry("Ṥ", 0, 2),
    FullCaseEntry("ṥ", 1, 2),
    FullCaseEntry("Ῡ", 0, 2),
    FullCaseEntry("ῡ", 1, 2),
    FullCaseEntry("Ⅾ", 0, 2),
    FullCaseEntry("ⅾ", 1, 2),
    FullCaseEntry("Ⱁ", 0, 2),
    FullCaseEntry("ⱁ", 1, 2),
    FullCaseEntry("Ꜧ", 0, 2),
    FullCaseEntry("ꜧ", 1, 2),
    FullCaseEntry("Ɔ", 0, 2),
    FullCaseEntry("ɔ", 1, 2),
    FullCaseEntry("Ґ", 0, 2),
    FullCaseEntry("ґ", 1, 2),
    FullCaseEntry("Ⴘ", 0, 2),
    FullCaseEntry("ⴘ", 1, 2),
    FullCaseEntry("Ὺ", 0, 2),
    FullCaseEntry("ὺ", 1, 2),
    FullCaseEntry("Ⅿ", 0, 2),
    FullCaseEntry("ⅿ", 1, 2),
    FullCaseEntry("Ⱂ", 0, 2),
    FullCaseEntry("ⱂ", 1, 2),
    FullCaseEntry("Ƈ", 0, 2),
    FullCaseEntry("ƈ", 1, 2),
    FullCaseEntry("Ⴙ", 0, 2),
    FullCaseEntry("ⴙ", 1, 2),
    FullCaseEntry("Ṧ", 0, 2),
    FullCaseEntry("ṧ", 1, 2),
    FullCaseEntry("Ύ", 0, 2),
    FullCaseEntry("ύ", 1, 2),
    FullCaseEntry("Ⱃ", 0, 2),
    FullCaseEntry("ⱃ", 1, 2),
    FullCaseEntry("Ꜩ", 0, 2),
    FullCaseEntry("ꜩ", 1, 2),
    FullCaseEntry("Ғ", 0, 2),
    FullCaseEntry("ғ", 1, 2),
    FullCaseEntry("Ⴚ", 0, 2),
    FullCaseEntry("ⴚ", 1, 2),
    FullCaseEntry("Ῥ", 0, 2),
    FullCaseEntry("ῥ", 1, 2),
    FullCaseEntry("Ⱄ", 0, 2),
    FullCaseEntry("ⱄ", 1, 2),
    FullCaseEntry("Ɖ", 0, 2),
    FullCaseEntry("ɖ", 1, 2),
    FullCaseEntry("Ⴛ", 0, 2),
    FullCaseEntry("ⴛ", 1, 2),
    FullCaseEntry("Ṩ", 0, 2),
    FullCaseEntry("ṩ", 1, 2),
    FullCaseEntry("Ⱅ", 0, 2),
    FullCaseEntry("ⱅ", 1, 2),
    FullCaseEntry("Ꜫ", 0, 2),
    FullCaseEntry("ꜫ", 1, 2),
    FullCaseEntry("Ɗ", 0, 2),
    FullCaseEntry("ɗ", 1, 2),
    FullCaseEntry("Ҕ", 0, 2),
    FullCaseEntry("ҕ", 1, 2),
    FullCaseEntry("Ⴜ", 0, 2),
    FullCaseEntry("ⴜ", 1, 2),
    FullCaseEntry("Ⱆ", 0, 2),
    FullCaseEntry("ⱆ", 1, 2),
    FullCaseEntry("Ƌ", 0, 2),
    FullCaseEntry("ƌ", 1, 2),
    FullCaseEntry("Ⴝ", 0, 2),
    FullCaseEntry("ⴝ", 1, 2),
    FullCaseEntry("Ṫ", 0, 2),
    FullCaseEntry("ṫ", 1, 2),
    FullCaseEntry("Ⱇ", 0, 2),
    FullCaseEntry("ⱇ", 1, 2),
    FullCaseEntry("Ꜭ", 0, 2),
    FullCaseEntry("ꜭ", 1, 2),
    FullCaseEntry("Җ", 0, 2),
    FullCaseEntry("җ", 1, 2),
    FullCaseEntry("Ⴞ", 0, 2),
    FullCaseEntry("ⴞ", 1, 2),
    FullCaseEntry("Ⱈ", 0, 2),
    FullCaseEntry("ⱈ", 1, 2),
    FullCaseEntry("Ⴟ", 0, 2),
    FullCaseEntry("ⴟ", 1, 2),
    FullCaseEntry("Ṭ", 0, 2),
    FullCaseEntry("ṭ", 1, 2),
    FullCaseEntry("Ⱉ", 0, 2),
    FullCaseEntry("ⱉ", 1, 2),
    FullCaseEntry("Ꜯ", 0, 2),
    FullCaseEntry("ꜯ", 1, 2),
    FullCaseEntry("Ǝ", 0, 2),
    FullCaseEntry("ǝ", 1, 2),
    FullCaseEntry("Ҙ", 0, 2),
    FullCaseEntry("ҙ", 1, 2),
    FullCaseEntry("Ⴠ", 0, 2),
    FullCaseEntry("ⴠ", 1, 2),
    FullCaseEntry("ῲ", 0, 2),
    FullCaseEntry("ὼι", 1, 2),
    FullCaseEntry("Ⱊ", 0, 2),
    FullCaseEntry("ⱊ", 1, 2),
    FullCaseEntry("Ə", 0, 2),
    FullCaseEntry("ə", 1, 2),
    FullCaseEntry("Ⴡ", 0, 2),
    FullCaseEntry("ⴡ", 1, 2),
    FullCaseEntry("Ṯ", 0, 2),
    FullCaseEntry("ṯ", 1, 2),
    FullCaseEntry("ῳ", 0, 3),
    FullCaseEntry("ωι", 1, 3),
    FullCaseEntry("ῼ", 2, 3),
    FullCaseEntry("Ⱋ", 0, 2),
    FullCaseEntry("ⱋ", 1, 2),
    FullCaseEntry("Ɛ", 0, 2),
    FullCaseEntry("ɛ", 1, 2),
    FullCaseEntry("Қ", 0, 2),
    FullCaseEntry("қ", 1, 2),
    FullCaseEntry("Ⴢ", 0, 2),
    FullCaseEntry("ⴢ", 1, 2),
    FullCaseEntry("ῴ", 0, 2),
    FullCaseEntry("ώι", 1, 2),
    FullCaseEntry("Ⱌ", 0, 2),
    FullCaseEntry("ⱌ", 1, 2),
    FullCaseEntry("Ƒ", 0, 2),
    FullCaseEntry("ƒ", 1, 2),
    FullCaseEntry("Ⴣ", 0, 2),
    FullCaseEntry("ⴣ", 1, 2),
    FullCaseEntry("Ṱ", 0, 2),
    FullCaseEntry("ṱ", 1, 2),
    FullCaseEntry("Ⱍ", 0, 2),
    FullCaseEntry("ⱍ", 1, 2),
    FullCaseEntry("Ꜳ", 0, 2),
    FullCaseEntry("ꜳ", 1, 2),
    FullCaseEntry("Ҝ", 0, 2),
    FullCaseEntry("ҝ", 1, 2),
    FullCaseEntry("Ⴤ", 0, 2),
    FullCaseEntry("ⴤ", 1, 2),
    FullCaseEntry("ῶ", 0, 2),
    FullCaseEntry("ῶ", 1, 2),
    FullCaseEntry("Ⱎ", 0, 2),
    FullCaseEntry("ⱎ", 1, 2),
    FullCaseEntry("Ɠ", 0, 2),
    FullCaseEntry("ɠ", 1, 2),
    FullCaseEntry("Ⴥ", 0, 2),
    FullCaseEntry("ⴥ", 1, 2),
    FullCaseEntry("Ṳ", 0, 2),
    FullCaseEntry("ṳ", 1, 2),
    FullCaseEntry("ῷ", 0, 2),
    FullCaseEntry("ῶι", 1, 2),
    FullCaseEntry("Ⱏ", 0, 2),
    FullCaseEntry("ⱏ", 1, 2),
    FullCaseEntry("Ꜵ", 0, 2),
    FullCaseEntry("ꜵ", 1, 2),
    FullCaseEntry("Ɣ", 0, 2),
    FullCaseEntry("ɣ", 1, 2),
    FullCaseEntry("Ҟ", 0, 2),
    FullCaseEntry("ҟ", 1, 2),
    FullCaseEntry("Ὸ", 0, 2),
    FullCaseEntry("ὸ", 1, 2),
    FullCaseEntry("Ⱐ", 0, 2),
    FullCaseEntry("ⱐ", 1, 2),
    FullCaseEntry("Ⴧ", 0, 2),
    FullCaseEntry("ⴧ", 1, 2),
    FullCaseEntry("Ṵ", 0, 2),
    FullCaseEntry("ṵ", 1, 2),
    FullCaseEntry("Ό", 0, 2),
    FullCaseEntry("ό", 1, 2),
    FullCaseEntry("Ⱑ", 0, 2),
    FullCaseEntry("ⱑ", 1, 2),
    FullCaseEntry("Ꜷ", 0, 2),
    FullCaseEntry("ꜷ", 1, 2),
    FullCaseEntry("Ɩ", 0, 2),
    FullCaseEntry("ɩ", 1, 2),
    FullCaseEntry("Ҡ", 0, 2),
    FullCaseEntry("ҡ", 1, 2),
    FullCaseEntry("Ὼ", 0, 2),
    FullCaseEntry("ὼ", 1, 2),
    FullCaseEntry("Ⱒ", 0, 2),
    FullCaseEntry("ⱒ", 1, 2),
    FullCaseEntry("Ɨ", 0, 2),
    FullCaseEntry("ɨ", 1, 2),
    FullCaseEntry("Ṷ", 0, 2),
    FullCaseEntry("ṷ", 1, 2),
    FullCaseEntry("Ώ", 0, 2),
    FullCaseEntry("ώ", 1, 2),
    FullCaseEntry("Ⱓ", 0, 2),
    FullCaseEntry("ⱓ", 1, 2),
    FullCaseEntry("Ꜹ", 0, 2),
    FullCaseEntry("ꜹ", 1, 2),
    FullCaseEntry("Ƙ", 0, 2),
    FullCaseEntry("ƙ", 1, 2),
    FullCaseEntry("Ң", 0, 2),
    FullCaseEntry("ң", 1, 2),
    FullCaseEntry("ῼ", 0, 3),
    FullCaseEntry("ωι", 1, 3),
    FullCaseEntry("ῳ", 2, 3),
    FullCaseEntry("Ⱔ", 0, 2),
    FullCaseEntry("ⱔ", 1, 2),
    FullCaseEntry("Ṹ", 0, 2),
    FullCaseEntry("ṹ", 1, 2),
    FullCaseEntry("Ⱕ", 0, 2),
    FullCaseEntry("ⱕ", 1, 2),
    FullCaseEntry("Ꜻ", 0, 2),
    FullCaseEntry("ꜻ", 1, 2),
    FullCaseEntry("Ҥ", 0, 2),
    FullCaseEntry("ҥ", 1, 2),
    FullCaseEntry("Ↄ", 0, 2),
    FullCaseEntry("ↄ", 1, 2),
    FullCaseEntry("Ⱖ", 0, 2),
    FullCaseEntry("ⱖ", 1, 2),
    FullCaseEntry("Ⴭ", 0, 2),
    FullCaseEntry("ⴭ", 1, 2),
    FullCaseEntry("Ṻ", 0, 2),
    FullCaseEntry("ṻ", 1, 2),
    FullCaseEntry("Ⱗ", 0, 2),
    FullCaseEntry("ⱗ", 1, 2),
    FullCaseEntry("Ꜽ", 0, 2),
    FullCaseEntry("ꜽ", 1, 2),
    FullCaseEntry("Ɯ", 0, 2),
    FullCaseEntry("ɯ", 1, 2),
    FullCaseEntry("Ҧ", 0, 2),
    FullCaseEntry("ҧ", 1, 2),
    FullCaseEntry("Ⱘ", 0, 2),
    FullCaseEntry("ⱘ", 1, 2),
    FullCaseEntry("Ɲ", 0, 2),
    FullCaseEntry("ɲ", 1, 2),
    FullCaseEntry("Ṽ", 0, 2),
    FullCaseEntry("ṽ", 1, 2),
    FullCaseEntry("Ⱙ", 0, 2),
    FullCaseEntry("ⱙ", 1, 2),
    FullCaseEntry("Ꜿ", 0, 2),
    FullCaseEntry("ꜿ", 1, 2),
    FullCaseEntry("Ҩ", 0, 2),
    FullCaseEntry("ҩ", 1, 2),
    FullCaseEntry("Ⱚ", 0, 2),
    FullCaseEntry("ⱚ", 1, 2),
    FullCaseEntry("Ɵ", 0, 2),
    FullCaseEntry("ɵ", 1, 2),
    FullCaseEntry("Ṿ", 0, 2),
    FullCaseEntry("ṿ", 1, 2),
    FullCaseEntry("Ⱛ", 0, 2),
    FullCaseEntry("ⱛ", 1, 2),
    FullCaseEntry("Ꝁ", 0, 2),
    FullCaseEntry("ꝁ", 1, 2),
    FullCaseEntry("Ơ", 0, 2),
    FullCaseEntry("ơ", 1, 2),
    FullCaseEntry("Ҫ", 0, 2),
    FullCaseEntry("ҫ", 1, 2),
    FullCaseEntry("Ⱜ", 0, 2),
    FullCaseEntry("ⱜ", 1, 2),
    FullCaseEntry("Ẁ", 0, 2),
    FullCaseEntry("ẁ", 1, 2),
    FullCaseEntry("Ⱝ", 0, 2),
    FullCaseEntry("ⱝ", 1, 2),
    FullCaseEntry("Ꝃ", 0, 2),
    FullCaseEntry("ꝃ", 1, 2),
    FullCaseEntry("Ƣ", 0, 2),
    FullCaseEntry("ƣ", 1, 2),
    FullCaseEntry("Ҭ", 0, 2),
    FullCaseEntry("ҭ", 1, 2),
    FullCaseEntry("Ⱞ", 0, 2),
    FullCaseEntry("ⱞ", 1, 2),
    FullCaseEntry("Ẃ", 0, 2),
    FullCaseEntry("ẃ", 1, 2),
    FullCaseEntry("Ꝅ", 0, 2),
    FullCaseEntry("ꝅ", 1, 2),
    FullCaseEntry("Ƥ", 0, 2),
    FullCaseEntry("ƥ", 1, 2),
    FullCaseEntry("Ү", 0, 2),
    FullCaseEntry("ү", 1, 2),
    FullCaseEntry("Ẅ", 0, 2),
    FullCaseEntry("ẅ", 1, 2),
    FullCaseEntry("Ꝇ", 0, 2),
    FullCaseEntry("ꝇ", 1, 2),
    FullCaseEntry("Ʀ", 0, 2),
    FullCaseEntry("ʀ", 1, 2),
    FullCaseEntry("Ұ", 0, 2),
    FullCaseEntry("ұ", 1, 2),
    FullCaseEntry("Ƨ", 0, 2),
    FullCaseEntry("ƨ", 1, 2),
    FullCaseEntry("Ẇ", 0, 2),
    FullCaseEntry("ẇ", 1, 2),
    FullCaseEntry("Ꝉ", 0, 2),
    FullCaseEntry("ꝉ", 1, 2),
    FullCaseEntry("Ҳ", 0, 2),
    FullCaseEntry("ҳ", 1, 2),
    FullCaseEntry("Ʃ", 0, 2),
    FullCaseEntry("ʃ", 1, 2),
    FullCaseEntry("Ẉ", 0, 2),
    FullCaseEntry("ẉ", 1, 2),
    FullCaseEntry("Ꝋ", 0, 2),
    FullCaseEntry("ꝋ", 1, 2),
    FullCaseEntry("Ҵ", 0, 2),
    FullCaseEntry("ҵ", 1, 2),
    FullCaseEntry("Ẋ", 0, 2),
    FullCaseEntry("ẋ", 1, 2),
    FullCaseEntry("Ꝍ", 0, 2),
    FullCaseEntry("ꝍ", 1, 2),
    FullCaseEntry("Ƭ", 0, 2),
    FullCaseEntry("ƭ", 1, 2),
    FullCaseEntry("Ҷ", 0, 2),
    FullCaseEntry("ҷ", 1, 2),
    FullCaseEntry("Ẍ", 0, 2),
    FullCaseEntry("ẍ", 1, 2),
    FullCaseEntry("Ꝏ", 0, 2),
    FullCaseEntry("ꝏ", 1, 2),
    FullCaseEntry("Ʈ", 0, 2),
    FullCaseEntry("ʈ", 1, 2),
    FullCaseEntry("Ҹ", 0, 2),
    FullCaseEntry("ҹ", 1, 2),
    FullCaseEntry("𐐀", 0, 2),
    FullCaseEntry("𐐨", 1, 2),
    FullCaseEntry("Ư", 0, 2),
    FullCaseEntry("ư", 1, 2),
    FullCaseEntry("Ẏ", 0, 2),
    FullCaseEntry("ẏ", 1, 2),
    FullCaseEntry("Ꝑ", 0, 2),
    FullCaseEntry("ꝑ", 1, 2),
    FullCaseEntry("𐐁", 0, 2),
    FullCaseEntry("𐐩", 1, 2),
    FullCaseEntry("Һ", 0, 2),
    FullCaseEntry("һ", 1, 2),
    FullCaseEntry("𐐂", 0, 2),
    FullCaseEntry("𐐪", 1, 2),
    FullCaseEntry("Ʊ", 0, 2),
    FullCaseEntry("ʊ", 1, 2),
    FullCaseEntry("Ẑ", 0, 2),
    FullCaseEntry("ẑ", 1, 2),
    FullCaseEntry("Ꝓ", 0, 2),
    FullCaseEntry("ꝓ", 1, 2),
    FullCaseEntry("𐐃", 0, 2),
    FullCaseEntry("𐐫", 1, 2),
    FullCaseEntry("Ʋ", 0, 2),
    FullCaseEntry("ʋ", 1, 2),
    FullCaseEntry("Ҽ", 0, 2),
    FullCaseEntry("ҽ", 1, 2),
    FullCaseEntry("𐐄", 0, 2),
    FullCaseEntry("𐐬", 1, 2),
    FullCaseEntry("Ƴ", 0, 2),
    FullCaseEntry("ƴ", 1, 2),
    FullCaseEntry("Ẓ", 0, 2),
    FullCaseEntry("ẓ", 1, 2),
    FullCaseEntry("Ꝕ", 0, 2),
    FullCaseEntry("ꝕ", 1, 2),
    FullCaseEntry("𐐅", 0, 2),
    FullCaseEntry("𐐭", 1, 2),
    FullCaseEntry("Ҿ", 0, 2),
    FullCaseEntry("ҿ", 1, 2),
    FullCaseEntry("𐐆", 0, 2),
    FullCaseEntry("𐐮", 1, 2),
    FullCaseEntry("Ƶ", 0, 2),
    FullCaseEntry("ƶ", 1, 2),
    FullCaseEntry("Ẕ", 0, 2),
    FullCaseEntry("ẕ", 1, 2),
    FullCaseEntry("Ꝗ", 0, 2),
    FullCaseEntry("ꝗ", 1, 2),
    FullCaseEntry("𐐇", 0, 2),
    FullCaseEntry("𐐯", 1, 2),
    FullCaseEntry("Ӏ", 0, 2),
    FullCaseEntry("ӏ", 1, 2),
    FullCaseEntry("𐐈", 0, 2),
    FullCaseEntry("𐐰", 1, 2),
    FullCaseEntry("Ʒ", 0, 2),
    FullCaseEntry("ʒ", 1, 2),
    FullCaseEntry("Ӂ", 0, 2),
    FullCaseEntry("ӂ", 1, 2),
    FullCaseEntry("ẖ", 0, 2),
    FullCaseEntry("ẖ", 1, 2),
    FullCaseEntry("Ꝙ", 0, 2),
    FullCaseEntry("ꝙ", 1, 2),
    FullCaseEntry("𐐉", 0, 2),
    FullCaseEntry("𐐱", 1, 2),
    FullCaseEntry("Ƹ", 0, 2),
    FullCaseEntry("ƹ", 1, 2),
    FullCaseEntry("ẗ", 0, 2),
    FullCaseEntry("ẗ", 1, 2),
    FullCaseEntry("𐐊", 0, 2),
    FullCaseEntry("𐐲", 1, 2),
    FullCaseEntry("Ӄ", 0, 2),
    FullCaseEntry("ӄ", 1, 2),
    FullCaseEntry("ẘ", 0, 2),
    FullCaseEntry("ẘ", 1, 2),
    FullCaseEntry("Ꝛ", 0, 2),
    FullCaseEntry("ꝛ", 1, 2),
    FullCaseEntry("𐐋", 0, 2),
    FullCaseEntry("𐐳", 1, 2),
    FullCaseEntry("ẙ", 0, 2),
    FullCaseEntry("ẙ", 1, 2),
    FullCaseEntry("𐐌", 0, 2),
    FullCaseEntry("𐐴", 1, 2),
    FullCaseEntry("Ӆ", 0, 2),
    FullCaseEntry("ӆ", 1, 2),
    FullCaseEntry("ẚ", 0, 2),
    FullCaseEntry("aʾ", 1, 2),
    FullCaseEntry("Ꝝ", 0, 2),
    FullCaseEntry("ꝝ", 1, 2),
    FullCaseEntry("𐐍", 0, 2),
    FullCaseEntry("𐐵", 1, 2),
    FullCaseEntry("Ƽ", 0, 2),
    FullCaseEntry("ƽ", 1, 2),
    FullCaseEntry("ẛ", 0, 3),
    FullCaseEntry("ṡ", 1, 3),
    FullCaseEntry("Ṡ", 2, 3),
    FullCaseEntry("𐐎", 0, 2),
    FullCaseEntry("𐐶", 1, 2),
    FullCaseEntry("Ӈ", 0, 2),
    FullCaseEntry("ӈ", 1, 2),
    FullCaseEntry("Ꝟ", 0, 2),
    FullCaseEntry("ꝟ", 1, 2),
    FullCaseEntry("𐐏", 0, 2),
    FullCaseEntry("𐐷", 1, 2),
    FullCaseEntry("𐐐", 0, 2),
    FullCaseEntry("𐐸", 1, 2),
    FullCaseEntry("Ӊ", 0, 2),
    FullCaseEntry("ӊ", 1, 2),
    FullCaseEntry("ẞ", 0, 3),
    FullCaseEntry("ss", 1, 3),
    FullCaseEntry("ß", 2, 3),
    FullCaseEntry("Ꝡ", 0, 2),
    FullCaseEntry("ꝡ", 1, 2),
    FullCaseEntry("𐐑", 0, 2),
    FullCaseEntry("𐐹", 1, 2),
    FullCaseEntry("ͅ", 0, 4),
    FullCaseEntry("ι", 1, 4),
    FullCaseEntry("Ι", 2, 4),
    FullCaseEntry("ι", 3, 4),
    FullCaseEntry("𐐒", 0, 2),
    FullCaseEntry("𐐺", 1, 2),
    FullCaseEntry("Ӌ", 0, 2),
    FullCaseEntry("ӌ", 1, 2),
    FullCaseEntry("Ạ", 0, 2),
    FullCaseEntry("ạ", 1, 2),
    FullCaseEntry("Ꝣ", 0, 2),
    FullCaseEntry("ꝣ", 1, 2),
    FullCaseEntry("𐐓", 0, 2),
    FullCaseEntry("𐐻", 1, 2),
    FullCaseEntry("𐐔", 0, 2),
    FullCaseEntry("𐐼", 1, 2),
    FullCaseEntry("Ӎ", 0, 2),
    FullCaseEntry("ӎ", 1, 2),
    FullCaseEntry("Ả", 0, 2),
    FullCaseEntry("ả", 1, 2),
    FullCaseEntry("Ⓐ", 0, 2),
    FullCaseEntry("ⓐ", 1, 2),
    FullCaseEntry("Ꝥ", 0, 2),
    FullCaseEntry("ꝥ", 1, 2),
    FullCaseEntry("𐐕", 0, 2),
    FullCaseEntry("𐐽", 1, 2),
    FullCaseEntry("Ǆ", 0, 3),
    FullCaseEntry("ǆ", 1, 3),
    FullCaseEntry("ǅ", 2, 3),
    FullCaseEntry("Ⓑ", 0, 2),
    FullCaseEntry("ⓑ", 1, 2),
    FullCaseEntry("𐐖", 0, 2),
    FullCaseEntry("𐐾", 1, 2),
    FullCaseEntry("ǅ", 0, 3),
    FullCaseEntry("ǆ", 1, 3),
    FullCaseEntry("Ǆ", 2, 3),
    FullCaseEntry("Ấ", 0, 2),
    FullCaseEntry("ấ", 1, 2),
    FullCaseEntry("Ⓒ", 0, 2),
    FullCaseEntry("ⓒ", 1, 2),
    FullCaseEntry("Ꝧ", 0, 2),
    FullCaseEntry("ꝧ", 1, 2),
    FullCaseEntry("𐐗", 0, 2),
    FullCaseEntry("𐐿", 1, 2),
    FullCaseEntry("A", 0, 2),
    FullCaseEntry("a", 1, 2),
    FullCaseEntry("Ӑ", 0, 2),
    FullCaseEntry("ӑ", 1, 2),
    FullCaseEntry("Ⓓ", 0, 2),
    FullCaseEntry("ⓓ", 1, 2),
    FullCaseEntry("𐐘", 0, 2),
    FullCaseEntry("𐑀", 1, 2),
    FullCaseEntry("B", 0, 2),
    FullCaseEntry("b", 1, 2),
    FullCaseEntry("Ǉ", 0, 3),
    FullCaseEntry("ǉ", 1, 3),
    FullCaseEntry("ǈ", 2, 3),
    FullCaseEntry("Ầ", 0, 2),
    FullCaseEntry("ầ", 1, 2),
    FullCaseEntry("Ⓔ", 0, 2),
    FullCaseEntry("ⓔ", 1, 2),
    FullCaseEntry("Ꝩ", 0, 2),
    FullCaseEntry("ꝩ", 1, 2),
    FullCaseEntry("𐐙", 0, 2),
    FullCaseEntry("𐑁", 1, 2),
    FullCaseEntry("C", 0, 2),
    FullCaseEntry("c", 1, 2),
    FullCaseEntry("ǈ", 0, 3),
    FullCaseEntry("ǉ", 1, 3),
    FullCaseEntry("Ǉ", 2, 3),
    FullCaseEntry("Ӓ", 0, 2),
    FullCaseEntry("ӓ", 1, 2),
    FullCaseEntry("Ⓕ", 0, 2),
    FullCaseEntry("ⓕ", 1, 2),
    FullCaseEntry("𐐚", 0, 2),
    FullCaseEntry("𐑂", 1, 2),
    FullCaseEntry("D", 0, 2),
    FullCaseEntry("d", 1, 2),
    FullCaseEntry("Ẩ", 0, 2),
    FullCaseEntry("ẩ", 1, 2),
    FullCaseEntry("Ⓖ", 0, 2),
    FullCaseEntry("ⓖ", 1, 2),
    FullCaseEntry("Ꝫ", 0, 2),
    FullCaseEntry("ꝫ", 1, 2),
    FullCaseEntry("𐐛", 0, 2),
    FullCaseEntry("𐑃", 1, 2),
    FullCaseEntry("E", 0, 2),
    FullCaseEntry("e", 1, 2),
    FullCaseEntry("Ǌ", 0, 3),
    FullCaseEntry("ǌ", 1, 3),
    FullCaseEntry("ǋ", 2, 3),
    FullCaseEntry("Ӕ", 0, 2),
    FullCaseEntry("ӕ", 1, 2),
    FullCaseEntry("Ⓗ", 0, 2),
    FullCaseEntry("ⓗ", 1, 2),
    FullCaseEntry("𐐜", 0, 2),
    FullCaseEntry("𐑄", 1, 2),
    FullCaseEntry("F", 0, 2),
    FullCaseEntry("f", 1, 2),
    FullCaseEntry("ǋ", 0, 3),
    FullCaseEntry("ǌ", 1, 3),
    FullCaseEntry("Ǌ", 2, 3),
    FullCaseEntry("Ẫ", 0, 2),
    FullCaseEntry("ẫ", 1, 2),
    FullCaseEntry("Ⓘ", 0, 2),
    FullCaseEntry("ⓘ", 1, 2),
    FullCaseEntry("Ꝭ", 0, 2),
    FullCaseEntry("ꝭ", 1, 2),
    FullCaseEntry("𐐝", 0, 2),
    FullCaseEntry("𐑅", 1, 2),
    FullCaseEntry("G", 0, 2),
    FullCaseEntry("g", 1, 2),
    FullCaseEntry("Ӗ", 0, 2),
    FullCaseEntry("ӗ", 1, 2),
    FullCaseEntry("Ⓙ", 0, 2),
    FullCaseEntry("ⓙ", 1, 2),
    FullCaseEntry("ﬀ", 0, 2),
    FullCaseEntry("ff", 1, 2),
    FullCaseEntry("𐐞", 0, 2),
    FullCaseEntry("𐑆", 1, 2),
    FullCaseEntry("H", 0, 2),
    FullCaseEntry("h", 1, 2),
    FullCaseEntry("Ǎ", 0, 2),
    FullCaseEntry("ǎ", 1, 2),
    FullCaseEntry("Ậ", 0, 2),
    FullCaseEntry("ậ", 1, 2),
    FullCaseEntry("Ⓚ", 0, 2),
    FullCaseEntry("ⓚ", 1, 2),
    FullCaseEntry("Ꝯ", 0, 2),
    FullCaseEntry("ꝯ", 1, 2),
    FullCaseEntry("ﬁ", 0, 2),
    FullCaseEntry("fi", 1, 2),
    FullCaseEntry("𐐟", 0, 2),
    FullCaseEntry("𐑇", 1, 2),
    FullCaseEntry("I", 0, 2),
    FullCaseEntry("i", 1, 2),
    FullCaseEntry("Ә", 0, 2),
    FullCaseEntry("ә", 1, 2),
    FullCaseEntry("Ⓛ", 0, 2),
    FullCaseEntry("ⓛ", 1, 2),
    FullCaseEntry("ﬂ", 0, 2),
    FullCaseEntry("fl", 1, 2),
    FullCaseEntry("𐐠", 0, 2),
    FullCaseEntry("𐑈", 1, 2),
    FullCaseEntry("J", 0, 2),
    FullCaseEntry("j", 1, 2),
    FullCaseEntry("Ǐ", 0, 2),
    FullCaseEntry("ǐ", 1, 2),
    FullCaseEntry("Ắ", 0, 2),
    FullCaseEntry("ắ", 1, 2),
    FullCaseEntry("Ⓜ", 0, 2),
    FullCaseEntry("ⓜ", 1, 2),
    FullCaseEntry("ﬃ", 0, 2),
    FullCaseEntry("ffi", 1, 2),
    FullCaseEntry("𐐡", 0, 2),
    FullCaseEntry("𐑉", 1, 2),
    FullCaseEntry("K", 0, 3),
    FullCaseEntry("k", 1, 3),
    FullCaseEntry("K", 2, 3),
    FullCaseEntry("Ӛ", 0, 2),
    FullCaseEntry("ӛ", 1, 2),
    FullCaseEntry("Ⓝ", 0, 2),
    FullCaseEntry("ⓝ", 1, 2),
    FullCaseEntry("ﬄ", 0, 2),
    FullCaseEntry("ffl", 1, 2),
    FullCaseEntry("𐐢", 0, 2),
    FullCaseEntry("𐑊", 1, 2),
    FullCaseEntry("L", 0, 2),
    FullCaseEntry("l", 1, 2),
    FullCaseEntry("Ǒ", 0, 2),
    FullCaseEntry("ǒ", 1, 2),
    FullCaseEntry("Ằ", 0, 2),
    FullCaseEntry("ằ", 1, 2),
    FullCaseEntry("Ⓞ", 0, 2),
    FullCaseEntry("ⓞ", 1, 2),
    FullCaseEntry("ﬅ", 0, 3),
    FullCaseEntry("st", 1, 3),
    FullCaseEntry("ﬆ", 2, 3),
    FullCaseEntry("𐐣", 0, 2),
    FullCaseEntry("𐑋", 1, 2),
    FullCaseEntry("M", 0, 2),
    FullCaseEntry("m", 1, 2),
    FullCaseEntry("Ӝ", 0, 2),
    FullCaseEntry("ӝ", 1, 2),
    FullCaseEntry("Ⓟ", 0, 2),
    FullCaseEntry("ⓟ", 1, 2),
    FullCaseEntry("ﬆ", 0, 3),
    FullCaseEntry("st", 1, 3),
    FullCaseEntry("ﬅ", 2, 3),
    FullCaseEntry("𐐤", 0, 2),
    FullCaseEntry("𐑌", 1, 2),
    FullCaseEntry("N", 0, 2),
    FullCaseEntry("n", 1, 2),
    FullCaseEntry("Ǔ", 0, 2),
    FullCaseEntry("ǔ", 1, 2),
    FullCaseEntry("Ẳ", 0, 2),
    FullCaseEntry("ẳ", 1, 2),
    FullCaseEntry("Ⓠ", 0, 2),
    FullCaseEntry("ⓠ", 1, 2),
    FullCaseEntry("𐐥", 0, 2),
    FullCaseEntry("𐑍", 1, 2),
    FullCaseEntry("O", 0, 2),
    FullCaseEntry("o", 1, 2),
    FullCaseEntry("Ӟ", 0, 2),
    FullCaseEntry("ӟ", 1, 2),
    FullCaseEntry("Ⓡ", 0, 2),
    FullCaseEntry("ⓡ", 1, 2),
    FullCaseEntry("Ⱡ", 0, 2),
    FullCaseEntry("ⱡ", 1, 2),
    FullCaseEntry("𐐦", 0, 2),
    FullCaseEntry("𐑎", 1, 2),
    FullCaseEntry("P", 0, 2),
    FullCaseEntry("p", 1, 2),
    FullCaseEntry("Ǖ", 0, 2),
    FullCaseEntry("ǖ", 1, 2),
    FullCaseEntry("Ẵ", 0, 2),
    FullCaseEntry("ẵ", 1, 2),
    FullCaseEntry("Ⓢ", 0, 2),
    FullCaseEntry("ⓢ", 1, 2),
    FullCaseEntry("𐐧", 0, 2),
    FullCaseEntry("𐑏", 1, 2),
    FullCaseEntry("Q", 0, 2),
    FullCaseEntry("q", 1, 2),
    FullCaseEntry("Ӡ", 0, 2),
    FullCaseEntry("ӡ", 1, 2),
    FullCaseEntry("Ⓣ", 0, 2),
    FullCaseEntry("ⓣ", 1, 2),
    FullCaseEntry("Ɫ", 0, 2),
    FullCaseEntry("ɫ", 1, 2),
    FullCaseEntry("R", 0, 2),
    FullCaseEntry("r", 1, 2),
    FullCaseEntry("Ǘ", 0, 2),
    FullCaseEntry("ǘ", 1, 2),
    FullCaseEntry("Ặ", 0, 2),
    FullCaseEntry("ặ", 1, 2),
    FullCaseEntry("Ⓤ", 0, 2),
    FullCaseEntry("ⓤ", 1, 2),
    FullCaseEntry("Ᵽ", 0, 2),
    FullCaseEntry("ᵽ", 1, 2),
    FullCaseEntry("S", 0, 3),
    FullCaseEntry("s", 1, 3),
    FullCaseEntry("ſ", 2, 3),
    FullCaseEntry("Ӣ", 0, 2),
    FullCaseEntry("ӣ", 1, 2),
    FullCaseEntry("Ⓥ", 0, 2),
    FullCaseEntry("ⓥ", 1, 2),
    FullCaseEntry("Ɽ", 0, 2),
    FullCaseEntry("ɽ", 1, 2),
    FullCaseEntry("Ꝺ", 0, 2),
    FullCaseEntry("ꝺ", 1, 2),
    FullCaseEntry("T", 0, 2),
    FullCaseEntry("t", 1, 2),
    FullCaseEntry("Ǚ", 0, 2),
    FullCaseEntry("ǚ", 1, 2),
    FullCaseEntry("Ẹ", 0, 2),
    FullCaseEntry("ẹ", 1, 2),
    FullCaseEntry("Ⓦ", 0, 2),
    FullCaseEntry("ⓦ", 1, 2),
    FullCaseEntry("U", 0, 2),
    FullCaseEntry("u", 1, 2),
    FullCaseEntry("Ӥ", 0, 2),
    FullCaseEntry("ӥ", 1, 2),
    FullCaseEntry("Ⓧ", 0, 2),
    FullCaseEntry("ⓧ", 1, 2),
    FullCaseEntry("Ꝼ", 0, 2),
    FullCaseEntry("ꝼ", 1, 2),
    FullCaseEntry("V", 0, 2),
    FullCaseEntry("v", 1, 2),
    FullCaseEntry("Ǜ", 0, 2),
    FullCaseEntry("ǜ", 1, 2),
    FullCaseEntry("Ẻ", 0, 2),
    FullCaseEntry("ẻ", 1, 2),
    FullCaseEntry("Ⓨ", 0, 2),
    FullCaseEntry("ⓨ", 1, 2),
    FullCaseEntry("Ⱨ", 0, 2),
    FullCaseEntry("ⱨ", 1, 2),
    FullCaseEntry("W", 0, 2),
    FullCaseEntry("w", 1, 2),
    FullCaseEntry("Ӧ", 0, 2),
    FullCaseEntry("ӧ", 1, 2),
    FullCaseEntry("Ⓩ", 0, 2),
    FullCaseEntry("ⓩ", 1, 2),
    FullCaseEntry("Ᵹ", 0, 2),
    FullCaseEntry("ᵹ", 1, 2),
    FullCaseEntry("X", 0, 2),
    FullCaseEntry("x", 1, 2),
    FullCaseEntry("Ẽ", 0, 2),
    FullCaseEntry("ẽ", 1, 2),
    FullCaseEntry("Ⱪ", 0, 2),
    FullCaseEntry("ⱪ", 1, 2),
    FullCaseEntry("Ꝿ", 0, 2),
    FullCaseEntry("ꝿ", 1, 2),
    FullCaseEntry("Y", 0, 2),
    FullCaseEntry("y", 1, 2),
    FullCaseEntry("Ǟ", 0, 2),
    FullCaseEntry("ǟ", 1, 2),
    FullCaseEntry("Ө", 0, 2),
    FullCaseEntry("ө", 1, 2),
    FullCaseEntry("Z", 0, 2),
    FullCaseEntry("z", 1, 2),
    FullCaseEntry("Ế", 0, 2),
    FullCaseEntry("ế", 1, 2),
    FullCaseEntry("Ⱬ", 0, 2),
    FullCaseEntry("ⱬ", 1, 2),
    FullCaseEntry("Ꞁ", 0, 2),
    FullCaseEntry("ꞁ", 1, 2),
    FullCaseEntry("ﬓ", 0, 2),
    FullCaseEntry("մն", 1, 2),
    FullCaseEntry("Ǡ", 0, 2),
    FullCaseEntry("ǡ", 1, 2),
    FullCaseEntry("Ӫ", 0, 2),
    FullCaseEntry("ӫ", 1, 2),
    FullCaseEntry("ﬔ", 0, 2),
    FullCaseEntry("մե", 1, 2),
    FullCaseEntry("Ề", 0, 2),
    FullCaseEntry("ề", 1, 2),
    FullCaseEntry("Ɑ", 0, 2),
    FullCaseEntry("ɑ", 1, 2),
    FullCaseEntry("Ꞃ", 0, 2),
    FullCaseEntry("ꞃ", 1, 2),
    FullCaseEntry("ﬕ", 0, 2),
    FullCaseEntry("մի", 1, 2),
    FullCaseEntry("Ǣ", 0, 2),
    FullCaseEntry("ǣ", 1, 2),
    FullCaseEntry("Ӭ", 0, 2),
    FullCaseEntry("ӭ", 1, 2),
    FullCaseEntry("Ɱ", 0, 2),
    FullCaseEntry("ɱ", 1, 2),
    FullCaseEntry("ﬖ", 0, 2),
    FullCaseEntry("վն", 1, 2),
    FullCaseEntry("Ể", 0, 2),
    FullCaseEntry("ể", 1, 2),
    FullCaseEntry("Ɐ", 0, 2),
    FullCaseEntry("ɐ", 1, 2),
    FullCaseEntry("Ꞅ", 0, 2),
    FullCaseEntry("ꞅ", 1, 2),
    FullCaseEntry("ﬗ", 0, 2),
    FullCaseEntry("մխ", 1, 2),
    FullCaseEntry("Ǥ", 0, 2),
    FullCaseEntry("ǥ", 1, 2),
    FullCaseEntry("Ӯ", 0, 2),
    FullCaseEntry("ӯ", 1, 2),
    FullCaseEntry("Ɒ", 0, 2),
    FullCaseEntry("ɒ", 1, 2),
    FullCaseEntry("Ễ", 0, 2),
    FullCaseEntry("ễ", 1, 2),
    FullCaseEntry("Ꞇ", 0, 2),
    FullCaseEntry("ꞇ", 1, 2),
    FullCaseEntry("Ǧ", 0, 2),
    FullCaseEntry("ǧ", 1, 2),
    FullCaseEntry("Ӱ", 0, 2),
    FullCaseEntry("ӱ", 1, 2),
    FullCaseEntry("Ⱳ", 0, 2),
    FullCaseEntry("ⱳ", 1, 2),
    FullCaseEntry("Ệ", 0, 2),
    FullCaseEntry("ệ", 1, 2),
    FullCaseEntry("Ǩ", 0, 2),
    FullCaseEntry("ǩ", 1, 2),
    FullCaseEntry("Ӳ", 0, 2),
    FullCaseEntry("ӳ", 1, 2),
    FullCaseEntry("Ỉ", 0, 2),
    FullCaseEntry("ỉ", 1, 2),
    FullCaseEntry("Ⱶ", 0, 2),
    FullCaseEntry("ⱶ", 1, 2),
    FullCaseEntry("Ǫ", 0, 2),
    FullCaseEntry("ǫ", 1, 2),
    FullCaseEntry("Ӵ", 0, 2),
    FullCaseEntry("ӵ", 1, 2),
    FullCaseEntry("Ꞌ", 0, 2),
    FullCaseEntry("ꞌ", 1, 2),
    FullCaseEntry("Ͱ", 0, 2),
    FullCaseEntry("ͱ", 1, 2),
    FullCaseEntry("Ị", 0, 2),
    FullCaseEntry("ị", 1, 2),
    FullCaseEntry("Ǭ", 0, 2),
    FullCaseEntry("ǭ", 1, 2),
    FullCaseEntry("Ӷ", 0, 2),
    FullCaseEntry("ӷ", 1, 2),
    FullCaseEntry("Ɥ", 0, 2),
    FullCaseEntry("ɥ", 1, 2),
    FullCaseEntry("Ͳ", 0, 2),
    FullCaseEntry("ͳ", 1, 2),
    FullCaseEntry("Ọ", 0, 2),
    FullCaseEntry("ọ", 1, 2),
    FullCaseEntry("Ǯ", 0, 2),
    FullCaseEntry("ǯ", 1, 2),
    FullCaseEntry("Ӹ", 0, 2),
    FullCaseEntry("ӹ", 1, 2),
    FullCaseEntry("Ỏ", 0, 2),
    FullCaseEntry("ỏ", 1, 2),
    FullCaseEntry("Ꞑ", 0, 2),
    FullCaseEntry("ꞑ", 1, 2),
    FullCaseEntry("ǰ", 0, 2),
    FullCaseEntry("ǰ", 1, 2),
    FullCaseEntry("Ӻ", 0, 2),
    FullCaseEntry("ӻ", 1, 2),
    FullCaseEntry("Ǳ", 0, 3),
    FullCaseEntry("ǳ", 1, 3),
    FullCaseEntry("ǲ", 2, 3),
    FullCaseEntry("Ͷ", 0, 2),
    FullCaseEntry("ͷ", 1, 2),
    FullCaseEntry("Ố", 0, 2),
    FullCaseEntry("ố", 1, 2),
    FullCaseEntry("Ꞓ", 0, 2),
    FullCaseEntry("ꞓ", 1, 2),
    FullCaseEntry("ǲ", 0, 3),
    FullCaseEntry("ǳ", 1, 3),
    FullCaseEntry("Ǳ", 2, 3),
    FullCaseEntry("Ӽ", 0, 2),
    FullCaseEntry("ӽ", 1, 2),
    FullCaseEntry("Ȿ", 0, 2),
    FullCaseEntry("ȿ", 1, 2),
    FullCaseEntry("Ồ", 0, 2),
    FullCaseEntry("ồ", 1, 2),
    FullCaseEntry("Ɀ", 0, 2),
    FullCaseEntry("ɀ", 1, 2),
    FullCaseEntry("Ǵ", 0, 2),
    FullCaseEntry("ǵ", 1, 2),
    FullCaseEntry("Ӿ", 0, 2),
    FullCaseEntry("ӿ", 1, 2),
    FullCaseEntry("Ⲁ", 0, 2),
    FullCaseEntry("ⲁ", 1, 2),
    FullCaseEntry("Ổ", 0, 2),
    FullCaseEntry("ổ", 1, 2),
    FullCaseEntry("Ƕ", 0, 2),
    FullCaseEntry("ƕ", 1, 2),
    FullCaseEntry("Ԁ", 0, 2),
    FullCaseEntry("ԁ", 1, 2),
    FullCaseEntry("Ⲃ", 0, 2),
    FullCaseEntry("ⲃ", 1, 2),
    FullCaseEntry("Ƿ", 0, 2),
    FullCaseEntry("ƿ", 1, 2),
    FullCaseEntry("Ỗ", 0, 2),
    FullCaseEntry("ỗ", 1, 2),
    FullCaseEntry("Ǹ", 0, 2),
    FullCaseEntry("ǹ", 1, 2),
    FullCaseEntry("Ԃ", 0, 2),
    FullCaseEntry("ԃ", 1, 2),
    FullCaseEntry("Ⲅ", 0, 2),
    FullCaseEntry("ⲅ", 1, 2),
    FullCaseEntry("Ộ", 0, 2),
    FullCaseEntry("ộ", 1, 2),
    FullCaseEntry("Ǻ", 0, 2),
    FullCaseEntry("ǻ", 1, 2),
    FullCaseEntry("Ԅ", 0, 2),
    FullCaseEntry("ԅ", 1, 2),
    FullCaseEntry("Ⲇ", 0, 2),
    FullCaseEntry("ⲇ", 1, 2),
    FullCaseEntry("Ớ", 0, 2),
    FullCaseEntry("ớ", 1, 2),
    FullCaseEntry("Ǽ", 0, 2),
    FullCaseEntry("ǽ", 1, 2),
    FullCaseEntry("Ԇ", 0, 2),
    FullCaseEntry("ԇ", 1, 2),
    FullCaseEntry("Ⲉ", 0, 2),
    FullCaseEntry("ⲉ", 1, 2),
    FullCaseEntry("Ờ", 0, 2),
    FullCaseEntry("ờ", 1, 2),
    FullCaseEntry("Ǿ", 0, 2),
    FullCaseEntry("ǿ", 1, 2),
    FullCaseEntry("Ԉ", 0, 2),
    FullCaseEntry("ԉ", 1, 2),
    FullCaseEntry("Ⲋ", 0, 2),
    FullCaseEntry("ⲋ", 1, 2),
    FullCaseEntry("Ở", 0, 2),
    FullCaseEntry("ở", 1, 2),
    FullCaseEntry("Ꞡ", 0, 2),
    FullCaseEntry("ꞡ", 1, 2),
    FullCaseEntry("Ȁ", 0, 2),
    FullCaseEntry("ȁ", 1, 2),
    FullCaseEntry("Ԋ", 0, 2),
    FullCaseEntry("ԋ", 1, 2),
    FullCaseEntry("Ⲍ", 0, 2),
    FullCaseEntry("ⲍ", 1, 2),
    FullCaseEntry("Ά", 0, 2),
    FullCaseEntry("ά", 1, 2),
    FullCaseEntry("Ỡ", 0, 2),
    FullCaseEntry("ỡ", 1, 2),
    FullCaseEntry("Ꞣ", 0, 2),
    FullCaseEntry("ꞣ", 1, 2),
    FullCaseEntry("Ȃ", 0, 2),
    FullCaseEntry("ȃ", 1, 2),
    FullCaseEntry("Ԍ", 0, 2),
    FullCaseEntry("ԍ", 1, 2),
    FullCaseEntry("Ⲏ", 0, 2),
    FullCaseEntry("ⲏ", 1, 2),
    FullCaseEntry("Έ", 0, 2),
    FullCaseEntry("έ", 1, 2),
    FullCaseEntry("Ợ", 0, 2),
    FullCaseEntry("ợ", 1, 2),
    FullCaseEntry("Ꞥ", 0, 2),
    FullCaseEntry("ꞥ", 1, 2),
    FullCaseEntry("Ȅ", 0, 2),
    FullCaseEntry("ȅ", 1, 2),
    FullCaseEntry("Ή", 0, 2),
    FullCaseEntry("ή", 1, 2),
    FullCaseEntry("Ԏ", 0, 2),
    FullCaseEntry("ԏ", 1, 2),
    FullCaseEntry("Ⲑ", 0, 2),
    FullCaseEntry("ⲑ", 1, 2),
    FullCaseEntry("Ί", 0, 2),
    FullCaseEntry("ί", 1, 2),
    FullCaseEntry("Ụ", 0, 2),
    FullCaseEntry("ụ", 1, 2),
    FullCaseEntry("Ꞧ", 0, 2),
    FullCaseEntry("ꞧ", 1, 2),
    FullCaseEntry("Ȇ", 0, 2),
    FullCaseEntry("ȇ", 1, 2),
    FullCaseEntry("Ԑ", 0, 2),
    FullCaseEntry("ԑ", 1, 2),
    FullCaseEntry("Ⲓ", 0, 2),
    FullCaseEntry("ⲓ", 1, 2),
    FullCaseEntry("Ό", 0, 2),
    FullCaseEntry("ό", 1, 2),
    FullCaseEntry("Ủ", 0, 2),
    FullCaseEntry("ủ", 1, 2),
    FullCaseEntry("Ꞩ", 0, 2),
    FullCaseEntry("ꞩ", 1, 2),
    FullCaseEntry("Ȉ", 0, 2),
    FullCaseEntry("ȉ", 1, 2),
    FullCaseEntry("Ԓ", 0, 2),
    FullCaseEntry("ԓ", 1, 2),
    FullCaseEntry("Ⲕ", 0, 2),
    FullCaseEntry("ⲕ", 1, 2),
    FullCaseEntry("Ύ", 0, 2),
    FullCaseEntry("ύ", 1, 2),
    FullCaseEntry("Ứ", 0, 2),
    FullCaseEntry("ứ", 1, 2),
    FullCaseEntry("Ɦ", 0, 2),
    FullCaseEntry("ɦ", 1, 2),
    FullCaseEntry("Ȋ", 0, 2),
    FullCaseEntry("ȋ", 1, 2),
    FullCaseEntry("Ώ", 0, 2),
    FullCaseEntry("ώ", 1, 2),
    FullCaseEntry("Ԕ", 0, 2),
    FullCaseEntry("ԕ", 1, 2),
    FullCaseEntry("Ⲗ", 0, 2),
    FullCaseEntry("ⲗ", 1, 2),
    FullCaseEntry("ΐ", 0, 3),
    FullCaseEntry("ΐ", 1, 3),
    FullCaseEntry("ΐ", 2, 3),
    FullCaseEntry("Ừ", 0, 2),
    FullCaseEntry("ừ", 1, 2),
    FullCaseEntry("Ȍ", 0, 2),
    FullCaseEntry("ȍ", 1, 2),
    FullCaseEntry("Α", 0, 2),
    FullCaseEntry("α", 1, 2),
    FullCaseEntry("Ԗ", 0, 2),
    FullCaseEntry("ԗ", 1, 2),
    FullCaseEntry("Ⲙ", 0, 2),
    FullCaseEntry("ⲙ", 1, 2),
    FullCaseEntry("Β", 0, 3),
    FullCaseEntry("β", 1, 3),
    FullCaseEntry("ϐ", 2, 3),
    FullCaseEntry("Ử", 0, 2),
    FullCaseEntry("ử", 1, 2),
    FullCaseEntry("Ȏ", 0, 2),
    FullCaseEntry("ȏ", 1, 2),
    FullCaseEntry("Γ", 0, 2),
    FullCaseEntry("γ", 1, 2),
    FullCaseEntry("Ԙ", 0, 2),
    FullCaseEntry("ԙ", 1, 2),
    FullCaseEntry("Ⲛ", 0, 2),
    FullCaseEntry("ⲛ", 1, 2),
    FullCaseEntry("Δ", 0, 2),
    FullCaseEntry("δ", 1, 2),
    FullCaseEntry("Ữ", 0, 2),
    FullCaseEntry("ữ", 1, 2),
    FullCaseEntry("Ȑ", 0, 2),
    FullCaseEntry("ȑ", 1, 2),
    FullCaseEntry("Ε", 0, 3),
    FullCaseEntry("ε", 1, 3),
    FullCaseEntry("ϵ", 2, 3),
    FullCaseEntry("Ԛ", 0, 2),
    FullCaseEntry("ԛ", 1, 2),
    FullCaseEntry("Ⲝ", 0, 2),
    FullCaseEntry("ⲝ", 1, 2),
    FullCaseEntry("Ζ", 0, 2),
    FullCaseEntry("ζ", 1, 2),
    FullCaseEntry("Ự", 0, 2),
    FullCaseEntry("ự", 1, 2),
    FullCaseEntry("Ȓ", 0, 2),
    FullCaseEntry("ȓ", 1, 2),
    FullCaseEntry("Η", 0, 2),
    FullCaseEntry("η", 1, 2),
    FullCaseEntry("Ԝ", 0, 2),
    FullCaseEntry("ԝ", 1, 2),
    FullCaseEntry("Ⲟ", 0, 2),
    FullCaseEntry("ⲟ", 1, 2),
    FullCaseEntry("Θ", 0, 4),
    FullCaseEntry("θ", 1, 4),
    FullCaseEntry("ϑ", 2, 4),
    FullCaseEntry("ϴ", 3, 4),
    FullCaseEntry("Ỳ", 0, 2),
    FullCaseEntry("ỳ", 1, 2),
    FullCaseEntry("Ȕ", 0, 2),
    FullCaseEntry("ȕ", 1, 2),
    FullCaseEntry("Ι", 0, 4),
    FullCaseEntry("ι", 1, 4),
    FullCaseEntry("ͅ", 2, 4),
    FullCaseEntry("ι", 3, 4),
    FullCaseEntry("Ԟ", 0, 2),
    FullCaseEntry("ԟ", 1, 2),
    FullCaseEntry("Ⲡ", 0, 2),
    FullCaseEntry("ⲡ", 1, 2),
    FullCaseEntry("Κ", 0, 3),
    FullCaseEntry("κ", 1, 3),
    FullCaseEntry("ϰ", 2, 3),
    FullCaseEntry("Ỵ", 0, 2),
    FullCaseEntry("ỵ", 1, 2),
    FullCaseEntry("Ȗ", 0, 2),
    FullCaseEntry("ȗ", 1, 2),
    FullCaseEntry("Λ", 0, 2),
    FullCaseEntry("λ", 1, 2),
    FullCaseEntry("Ԡ", 0, 2),
    FullCaseEntry("ԡ", 1, 2),
    FullCaseEntry("Ⲣ", 0, 2),
    FullCaseEntry("ⲣ", 1, 2),
    FullCaseEntry("Μ", 0, 3),
    FullCaseEntry("μ", 1, 3),
    FullCaseEntry("µ", 2, 3),
    FullCaseEntry("Ỷ", 0, 2),
    FullCaseEntry("ỷ", 1, 2),
    FullCaseEntry("Ș", 0, 2),
    FullCaseEntry("ș", 1, 2),
    FullCaseEntry("Ν", 0, 2),
    FullCaseEntry("ν", 1, 2),
    FullCaseEntry("Ԣ", 0, 2),
    FullCaseEntry("ԣ", 1, 2),
    FullCaseEntry("Ⲥ", 0, 2),
    FullCaseEntry("ⲥ", 1, 2),
    FullCaseEntry("Ξ", 0, 2),
    FullCaseEntry("ξ", 1, 2),
    FullCaseEntry("Ỹ", 0, 2),
    FullCaseEntry("ỹ", 1, 2),
    FullCaseEntry("Ț", 0, 2),
    FullCaseEntry("ț", 1, 2),
    FullCaseEntry("Ο", 0, 2),
    FullCaseEntry("ο", 1, 2),
    FullCaseEntry("Ԥ", 0, 2),
    FullCaseEntry("ԥ", 1, 2),
    FullCaseEntry("Ⲧ", 0, 2),
    FullCaseEntry("ⲧ", 1, 2),
    FullCaseEntry("Π", 0, 3),
    FullCaseEntry("π", 1, 3),
    FullCaseEntry("ϖ", 2, 3),
    FullCaseEntry("Ỻ", 0, 2),
    FullCaseEntry("ỻ", 1, 2),
    FullCaseEntry("Ȝ", 0, 2),
    FullCaseEntry("ȝ", 1, 2),
    FullCaseEntry("Ρ", 0, 3),
    FullCaseEntry("ρ", 1, 3),
    FullCaseEntry("ϱ", 2, 3),
    FullCaseEntry("Ԧ", 0, 2),
    FullCaseEntry("ԧ", 1, 2),
    FullCaseEntry("Ⲩ", 0, 2),
    FullCaseEntry("ⲩ", 1, 2),
    FullCaseEntry("Ỽ", 0, 2),
    FullCaseEntry("ỽ", 1, 2),
    FullCaseEntry("Ȟ", 0, 2),
    FullCaseEntry("ȟ", 1, 2),
    FullCaseEntry("Σ", 0, 3),
    FullCaseEntry("σ", 1, 3),
    FullCaseEntry("ς", 2, 3),
    FullCaseEntry("Ⲫ", 0, 2),
    FullCaseEntry("ⲫ", 1, 2),
    FullCaseEntry("Τ", 0, 2),
    FullCaseEntry("τ", 1, 2),
    FullCaseEntry("Ỿ", 0, 2),
    FullCaseEntry("ỿ", 1, 2),
    FullCaseEntry("Ƞ", 0, 2),
    FullCaseEntry("ƞ", 1, 2),
    FullCaseEntry("Υ", 0, 2),
    FullCaseEntry("υ", 1, 2),
    FullCaseEntry("Ⲭ", 0, 2),
    FullCaseEntry("ⲭ", 1, 2),
    FullCaseEntry("Φ", 0, 3),
    FullCaseEntry("φ", 1, 3),
    FullCaseEntry("ϕ", 2, 3),
    FullCaseEntry("Ȣ", 0, 2),
    FullCaseEntry("ȣ", 1, 2),
    FullCaseEntry("Χ", 0, 2),
    FullCaseEntry("χ", 1, 2),
    FullCaseEntry("Ⲯ", 0, 2),
    FullCaseEntry("ⲯ", 1, 2),
    FullCaseEntry("Ψ", 0, 2),
    FullCaseEntry("ψ", 1, 2),
    FullCaseEntry("Ȥ", 0, 2),
    FullCaseEntry("ȥ", 1, 2),
    FullCaseEntry("Ω", 0, 3),
    FullCaseEntry("ω", 1, 3),
    FullCaseEntry("Ω", 2, 3),
    FullCaseEntry("Ⲱ", 0, 2),
    FullCaseEntry("ⲱ", 1, 2),
    FullCaseEntry("Ꙁ", 0, 2),
    FullCaseEntry("ꙁ", 1, 2),
    FullCaseEntry("Ϊ", 0, 2),
    FullCaseEntry("ϊ", 1, 2),
    FullCaseEntry("Ȧ", 0, 2),
    FullCaseEntry("ȧ", 1, 2),
    FullCaseEntry("Ϋ", 0, 2),
    FullCaseEntry("ϋ", 1, 2),
    FullCaseEntry("Ⲳ", 0, 2),
    FullCaseEntry("ⲳ", 1, 2),
    FullCaseEntry("Ꙃ", 0, 2),
    FullCaseEntry("ꙃ", 1, 2),
    FullCaseEntry("Ա", 0, 2),
    FullCaseEntry("ա", 1, 2),
    FullCaseEntry("Ȩ", 0, 2),
    FullCaseEntry("ȩ", 1, 2),
    FullCaseEntry("Բ", 0, 2),
    FullCaseEntry("բ", 1, 2),
    FullCaseEntry("Ⲵ", 0, 2),
    FullCaseEntry("ⲵ", 1, 2),
    FullCaseEntry("Ꙅ", 0, 2),
    FullCaseEntry("ꙅ", 1, 2),
    FullCaseEntry("Գ", 0, 2),
    FullCaseEntry("գ", 1, 2),
    FullCaseEntry("Ἀ", 0, 2),
    FullCaseEntry("ἀ", 1, 2),
    FullCaseEntry("Ȫ", 0, 2),
    FullCaseEntry("ȫ", 1, 2),
    FullCaseEntry("Դ", 0, 2),
    FullCaseEntry("դ", 1, 2),
    FullCaseEntry("Ἁ", 0, 2),
    FullCaseEntry("ἁ", 1, 2),
    FullCaseEntry("Ⲷ", 0, 2),
    FullCaseEntry("ⲷ", 1, 2),
    FullCaseEntry("Ꙇ", 0, 2),
    FullCaseEntry("ꙇ", 1, 2),
    FullCaseEntry("ΰ", 0, 3),
    FullCaseEntry("ΰ", 1, 3),
    FullCaseEntry("ΰ", 2, 3),
    FullCaseEntry("Ե", 0, 2),
    FullCaseEntry("ե", 1, 2),
    FullCaseEntry("Ἂ", 0, 2),
    FullCaseEntry("ἂ", 1, 2),
    FullCaseEntry("Ȭ", 0, 2),
    FullCaseEntry("ȭ", 1, 2),
    FullCaseEntry("Զ", 0, 2),
    FullCaseEntry("զ", 1, 2),
    FullCaseEntry("Ἃ", 0, 2),
    FullCaseEntry("ἃ", 1, 2),
    FullCaseEntry("Ⲹ", 0, 2),
    FullCaseEntry("ⲹ", 1, 2),
    FullCaseEntry("Ꙉ", 0, 2),
    FullCaseEntry("ꙉ", 1, 2),
    FullCaseEntry("Է", 0, 2),
    FullCaseEntry("է", 1, 2),
    FullCaseEntry("Ἄ", 0, 2),
    FullCaseEntry("ἄ", 1, 2),
    FullCaseEntry("Ȯ", 0, 2),
    FullCaseEntry("ȯ", 1, 2),
    FullCaseEntry("Ը", 0, 2),
    FullCaseEntry("ը", 1, 2),
    FullCaseEntry("Ἅ", 0, 2),
    FullCaseEntry("ἅ", 1, 2),
    FullCaseEntry("Ⲻ", 0, 2),
    FullCaseEntry("ⲻ", 1, 2),
    FullCaseEntry("Ꙋ", 0, 2),
    FullCaseEntry("ꙋ", 1, 2),
    FullCaseEntry("Թ", 0, 2),
    FullCaseEntry("թ", 1, 2),
    FullCaseEntry("Ἆ", 0, 2),
    FullCaseEntry("ἆ", 1, 2),
    FullCaseEntry("Ȱ", 0, 2),
    FullCaseEntry("ȱ", 1, 2),
    FullCaseEntry("Ժ", 0, 2),
    FullCaseEntry("ժ", 1, 2),
    FullCaseEntry("Ἇ", 0, 2),
    FullCaseEntry("ἇ", 1, 2),
    FullCaseEntry("Ⲽ", 0, 2),
    FullCaseEntry("ⲽ", 1, 2),
    FullCaseEntry("Ꙍ", 0, 2),
    FullCaseEntry("ꙍ", 1, 2),
    FullCaseEntry("Ի", 0, 2),
    FullCaseEntry("ի", 1, 2),
    FullCaseEntry("Ȳ", 0, 2),
    FullCaseEntry("ȳ", 1, 2),
    FullCaseEntry("Լ", 0, 2),
    FullCaseEntry("լ", 1, 2),
    FullCaseEntry("Ⲿ", 0, 2),
    FullCaseEntry("ⲿ", 1, 2),
    FullCaseEntry("Ꙏ", 0, 2),
    FullCaseEntry("ꙏ", 1, 2),
    FullCaseEntry("Խ", 0, 2),
    FullCaseEntry("խ", 1, 2),
    FullCaseEntry("Ծ", 0, 2),
    FullCaseEntry("ծ", 1, 2),
    FullCaseEntry("Ⳁ", 0, 2),
    FullCaseEntry("ⳁ", 1, 2),
    FullCaseEntry("Ꙑ", 0, 2),
    FullCaseEntry("ꙑ", 1, 2),
    FullCaseEntry("Կ", 0, 2),
    FullCaseEntry("կ", 1, 2),
    FullCaseEntry("Հ", 0, 2),
    FullCaseEntry("հ", 1, 2),
    FullCaseEntry("Ⳃ", 0, 2),
    FullCaseEntry("ⳃ", 1, 2),
    FullCaseEntry("Ꙓ", 0, 2),
    FullCaseEntry("ꙓ", 1, 2),
    FullCaseEntry("Ձ", 0, 2),
    FullCaseEntry("ձ", 1, 2),
    FullCaseEntry("Ղ", 0, 2),
    FullCaseEntry("ղ", 1, 2),
    FullCaseEntry("Ⳅ", 0, 2),
    FullCaseEntry("ⳅ", 1, 2),
    FullCaseEntry("Ꙕ", 0, 2),
    FullCaseEntry("ꙕ", 1, 2),
    FullCaseEntry("Ճ", 0, 2),
    FullCaseEntry("ճ", 1, 2),
    FullCaseEntry("Ἐ", 0, 2),
    FullCaseEntry("ἐ", 1, 2),
    FullCaseEntry("µ", 0, 3),
    FullCaseEntry("μ", 1, 3),
    FullCaseEntry("Μ", 2, 3),
    FullCaseEntry("Ⱥ", 0, 2),
    FullCaseEntry("ⱥ", 1, 2),
    FullCaseEntry("Մ", 0, 2),
    FullCaseEntry("մ", 1, 2),
    FullCaseEntry("Ἑ", 0, 2),
    FullCaseEntry("ἑ", 1, 2),
    FullCaseEntry("Ⳇ", 0, 2),
    FullCaseEntry("ⳇ", 1, 2),
    FullCaseEntry("Ꙗ", 0, 2),
    FullCaseEntry("ꙗ", 1, 2),
    FullCaseEntry("Ȼ", 0, 2),
    FullCaseEntry("ȼ", 1, 2),
    FullCaseEntry("Յ", 0, 2),
    FullCaseEntry("յ", 1, 2),
    FullCaseEntry("Ἒ", 0, 2),
    FullCaseEntry("ἒ", 1, 2),
    FullCaseEntry("Ն", 0, 2),
    FullCaseEntry("ն", 1, 2),
    FullCaseEntry("Ἓ", 0, 2),
    FullCaseEntry("ἓ", 1, 2),
    FullCaseEntry("Ⳉ", 0, 2),
    FullCaseEntry("ⳉ", 1, 2),
    FullCaseEntry("Ꙙ", 0, 2),
    FullCaseEntry("ꙙ", 1, 2),
    FullCaseEntry("Ƚ", 0, 2),
    FullCaseEntry("ƚ", 1, 2),
    FullCaseEntry("ς", 0, 3),
    FullCaseEntry("σ", 1, 3),
    FullCaseEntry("Σ", 2, 3),
    FullCaseEntry("Շ", 0, 2),
    FullCaseEntry("շ", 1, 2),
    FullCaseEntry("Ἔ", 0, 2),
    FullCaseEntry("ἔ", 1, 2),
    FullCaseEntry("Ⱦ", 0, 2),
    FullCaseEntry("ⱦ", 1, 2),
    FullCaseEntry("Ո", 0, 2),
    FullCaseEntry("ո", 1, 2),
    FullCaseEntry("Ἕ", 0, 2),
    FullCaseEntry("ἕ", 1, 2),
    FullCaseEntry("Ⳋ", 0, 2),
    FullCaseEntry("ⳋ", 1, 2),
    FullCaseEntry("Ꙛ", 0, 2),
    FullCaseEntry("ꙛ", 1, 2),
    FullCaseEntry("Չ", 0, 2),
    FullCaseEntry("չ", 1, 2),
    FullCaseEntry("Պ", 0, 2),
    FullCaseEntry("պ", 1, 2),
    FullCaseEntry("Ⳍ", 0, 2),
    FullCaseEntry("ⳍ", 1, 2),
    FullCaseEntry("Ꙝ", 0, 2),
    FullCaseEntry("ꙝ", 1, 2),
    FullCaseEntry("Ɂ", 0, 2),
    FullCaseEntry("ɂ", 1, 2),
    FullCaseEntry("Ջ", 0, 2),
    FullCaseEntry("ջ", 1, 2),
    FullCaseEntry("Ռ", 0, 2),
    FullCaseEntry("ռ", 1, 2),
    FullCaseEntry("Ⳏ", 0, 2),
    FullCaseEntry("ⳏ", 1, 2),
    FullCaseEntry("Ꙟ", 0, 2),
    FullCaseEntry("ꙟ", 1, 2),
    FullCaseEntry("Ƀ", 0, 2),
    FullCaseEntry("ƀ", 1, 2),
    FullCaseEntry("Ս", 0, 2),
    FullCaseEntry("ս", 1, 2),
    FullCaseEntry("Ʉ", 0, 2),
    FullCaseEntry("ʉ", 1, 2),
    FullCaseEntry("Վ", 0, 2),
    FullCaseEntry("վ", 1, 2),
    FullCaseEntry("Ⳑ", 0, 2),
    FullCaseEntry("ⳑ", 1, 2),
    FullCaseEntry("Ꙡ", 0, 2),
    FullCaseEntry("ꙡ", 1, 2),
    FullCaseEntry("À", 0, 2),
    FullCaseEntry("à", 1, 2),
    FullCaseEntry("Ʌ", 0, 2),
    FullCaseEntry("ʌ", 1, 2),
    FullCaseEntry("Տ", 0, 2),
    FullCaseEntry("տ", 1, 2),
    FullCaseEntry("Á", 0, 2),
    FullCaseEntry("á", 1, 2),
    FullCaseEntry("Ɇ", 0, 2),
    FullCaseEntry("ɇ", 1, 2),
    FullCaseEntry("Ր", 0, 2),
    FullCaseEntry("ր", 1, 2),
    FullCaseEntry("Ⳓ", 0, 2),
    FullCaseEntry("ⳓ", 1, 2),
    FullCaseEntry("Ꙣ", 0, 2),
    FullCaseEntry("ꙣ", 1, 2),
    FullCaseEntry("Â", 0, 2),
    FullCaseEntry("â", 1, 2),
    FullCaseEntry("Ց", 0, 2),
    FullCaseEntry("ց", 1, 2),
    FullCaseEntry("Ã", 0, 2),
    FullCaseEntry("ã", 1, 2),
    FullCaseEntry("Ɉ", 0, 2),
    FullCaseEntry("ɉ", 1, 2),
    FullCaseEntry("Ւ", 0, 2),
    FullCaseEntry("ւ", 1, 2),
    FullCaseEntry("Ⳕ", 0, 2),
    FullCaseEntry("ⳕ", 1, 2),
    FullCaseEntry("Ꙥ", 0, 2),
    FullCaseEntry("ꙥ", 1, 2),
    FullCaseEntry("Ä", 0, 2),
    FullCaseEntry("ä", 1, 2),
    FullCaseEntry("Փ", 0, 2),
    FullCaseEntry("փ", 1, 2),
    FullCaseEntry("Ἠ", 0, 2),
    FullCaseEntry("ἠ", 1, 2),
    FullCaseEntry("Å", 0, 3),
    FullCaseEntry("å", 1, 3),
    FullCaseEntry("Å", 2, 3),
    FullCaseEntry("Ɋ", 0, 2),
    FullCaseEntry("ɋ", 1, 2),
    FullCaseEntry("Ϗ", 0, 2),
    FullCaseEntry("ϗ", 1, 2),
    FullCaseEntry("Ք", 0, 2),
    FullCaseEntry("ք", 1, 2),
    FullCaseEntry("Ἡ", 0, 2),
    FullCaseEntry("ἡ", 1, 2),
    FullCaseEntry("Ⳗ", 0, 2),
    FullCaseEntry("ⳗ", 1, 2),
    FullCaseEntry("Ꙧ", 0, 2),
    FullCaseEntry("ꙧ", 1, 2),
    FullCaseEntry("Æ", 0, 2),
    FullCaseEntry("æ", 1, 2),
    FullCaseEntry("ϐ", 0, 3),
    FullCaseEntry("β", 1, 3),
    FullCaseEntry("Β", 2, 3),
    FullCaseEntry("Օ", 0, 2),
    FullCaseEntry("օ", 1, 2),
    FullCaseEntry("Ἢ", 0, 2),
    FullCaseEntry("ἢ", 1, 2),
    FullCaseEntry("Ç", 0, 2),
    FullCaseEntry("ç", 1, 2),
    FullCaseEntry("Ɍ", 0, 2),
    FullCaseEntry("ɍ", 1, 2),
    FullCaseEntry("ϑ", 0, 4),
    FullCaseEntry("θ", 1, 4),
    FullCaseEntry("Θ", 2, 4),
    FullCaseEntry("ϴ", 3, 4),
    FullCaseEntry("Ֆ", 0, 2),
    FullCaseEntry("ֆ", 1, 2),
    FullCaseEntry("Ἣ", 0, 2),
    FullCaseEntry("ἣ", 1, 2),
    FullCaseEntry("Ⳙ", 0, 2),
    FullCaseEntry("ⳙ", 1, 2),
    FullCaseEntry("Ꙩ", 0, 2),
    FullCaseEntry("ꙩ", 1, 2),
    FullCaseEntry("È", 0, 2),
    FullCaseEntry("è", 1, 2),
    FullCaseEntry("Ἤ", 0, 2),
    FullCaseEntry("ἤ", 1, 2),
    FullCaseEntry("É", 0, 2),
    FullCaseEntry("é", 1, 2),
    FullCaseEntry("Ɏ", 0, 2),
    FullCaseEntry("ɏ", 1, 2),
    FullCaseEntry("Ἥ", 0, 2),
    FullCaseEntry("ἥ", 1, 2),
    FullCaseEntry("Ⳛ", 0, 2),
    FullCaseEntry("ⳛ", 1, 2),
    FullCaseEntry("Ꙫ", 0, 2),
    FullCaseEntry("ꙫ", 1, 2),
    FullCaseEntry("Ê", 0, 2),
    FullCaseEntry("ê", 1, 2),
    FullCaseEntry("Ἦ", 0, 2),
    FullCaseEntry("ἦ", 1, 2),
    FullCaseEntry("Ë", 0, 2),
    FullCaseEntry("ë", 1, 2),
    FullCaseEntry("ϕ", 0, 3),
    FullCaseEntry("φ", 1, 3),
    FullCaseEntry("Φ", 2, 3),
    FullCaseEntry("Ἧ", 0, 2),
    FullCaseEntry("ἧ", 1, 2),
    FullCaseEntry("Ⳝ", 0, 2),
    FullCaseEntry("ⳝ", 1, 2),
    FullCaseEntry("Ꙭ", 0, 2),
    FullCaseEntry("ꙭ", 1, 2),
    FullCaseEntry("Ì", 0, 2),
    FullCaseEntry("ì", 1, 2),
    FullCaseEntry("ϖ", 0, 3),
    FullCaseEntry("π", 1, 3),
    FullCaseEntry("Π", 2, 3),
    FullCaseEntry("Í", 0, 2),
    FullCaseEntry("í", 1, 2),
    FullCaseEntry("Ⳟ", 0, 2),
    FullCaseEntry("ⳟ", 1, 2),
    FullCaseEntry("Î", 0, 2),
    FullCaseEntry("î", 1, 2),
    FullCaseEntry("Ϙ", 0, 2),
    FullCaseEntry("ϙ", 1, 2),
    FullCaseEntry("Ï", 0, 2),
    FullCaseEntry("ï", 1, 2),
    FullCaseEntry("Ⳡ", 0, 2),
    FullCaseEntry("ⳡ", 1, 2),
    FullCaseEntry("Ð", 0, 2),
    FullCaseEntry("ð", 1, 2),
    FullCaseEntry("Ϛ", 0, 2),
    FullCaseEntry("ϛ", 1, 2),
    FullCaseEntry("Ñ", 0, 2),
    FullCaseEntry("ñ", 1, 2),
    FullCaseEntry("Ⳣ", 0, 2),
    FullCaseEntry("ⳣ", 1, 2),
    FullCaseEntry("Ò", 0, 2),
    FullCaseEntry("ò", 1, 2),
    FullCaseEntry("Ϝ", 0, 2),
    FullCaseEntry("ϝ", 1, 2),
    FullCaseEntry("Ó", 0, 2),
    FullCaseEntry("ó", 1, 2),
    FullCaseEntry("Ô", 0, 2),
    FullCaseEntry("ô", 1, 2),
    FullCaseEntry("Ϟ", 0, 2),
    FullCaseEntry("ϟ", 1, 2),
    FullCaseEntry("Ἰ", 0, 2),
    FullCaseEntry("ἰ", 1, 2),
    FullCaseEntry("Õ", 0, 2),
    FullCaseEntry("õ", 1, 2),
    FullCaseEntry("Ἱ", 0, 2),
    FullCaseEntry("ἱ", 1, 2),
    FullCaseEntry("Ö", 0, 2),
    FullCaseEntry("ö", 1, 2),
    FullCaseEntry("Ϡ", 0, 2),
    FullCaseEntry("ϡ", 1, 2),
    FullCaseEntry("Ἲ", 0, 2),
    FullCaseEntry("ἲ", 1, 2),
    FullCaseEntry("Ἳ", 0, 2),
    FullCaseEntry("ἳ", 1, 2),
    FullCaseEntry("Ø", 0, 2),
    FullCaseEntry("ø", 1, 2),
    FullCaseEntry("Ϣ", 0, 2),
    FullCaseEntry("ϣ", 1, 2),
    FullCaseEntry("Ἴ", 0, 2),
    FullCaseEntry("ἴ", 1, 2),
    FullCaseEntry("Ù", 0, 2),
    FullCaseEntry("ù", 1, 2),
    FullCaseEntry("Ἵ", 0, 2),
    FullCaseEntry("ἵ", 1, 2),
    FullCaseEntry("Ú", 0, 2),
    FullCaseEntry("ú", 1, 2),
    FullCaseEntry("Ϥ", 0, 2),
    FullCaseEntry("ϥ", 1, 2),
    FullCaseEntry("Ἶ", 0, 2),
    FullCaseEntry("ἶ", 1, 2),
    FullCaseEntry("Ⳬ", 0, 2),
    FullCaseEntry("ⳬ", 1, 2),
    FullCaseEntry("Û", 0, 2),
    FullCaseEntry("û", 1, 2),
    FullCaseEntry("Ἷ", 0, 2),
    FullCaseEntry("ἷ", 1, 2),
    FullCaseEntry("Ü", 0, 2),
    FullCaseEntry("ü", 1, 2),
    FullCaseEntry("Ϧ", 0, 2),
    FullCaseEntry("ϧ", 1, 2),
    FullCaseEntry("Ⳮ", 0, 2),
    FullCaseEntry("ⳮ", 1, 2),
    FullCaseEntry("Ý", 0, 2),
    FullCaseEntry("ý", 1, 2),
    FullCaseEntry("Þ", 0, 2),
    FullCaseEntry("þ", 1, 2),
    FullCaseEntry("Ϩ", 0, 2),
    FullCaseEntry("ϩ", 1, 2),
    FullCaseEntry("ß", 0, 3),
    FullCaseEntry("ss", 1, 3),
    FullCaseEntry("ẞ", 2, 3),
    FullCaseEntry("Ꚁ", 0, 2),
    FullCaseEntry("ꚁ", 1, 2),
    FullCaseEntry("Ϫ", 0, 2),
    FullCaseEntry("ϫ", 1, 2),
    FullCaseEntry("Ⳳ", 0, 2),
    FullCaseEntry("ⳳ", 1, 2),
    FullCaseEntry("Ꚃ", 0, 2),
    FullCaseEntry("ꚃ", 1, 2),
    FullCaseEntry("Ϭ", 0, 2),
    FullCaseEntry("ϭ", 1, 2),
    FullCaseEntry("Ꚅ", 0, 2),
    FullCaseEntry("ꚅ", 1, 2),
    FullCaseEntry("Ϯ", 0, 2),
    FullCaseEntry("ϯ", 1, 2),
    FullCaseEntry("Ὀ", 0, 2),
    FullCaseEntry("ὀ", 1, 2),
    FullCaseEntry("Ὁ", 0, 2),
    FullCaseEntry("ὁ", 1, 2),
    FullCaseEntry("Ꚇ", 0, 2),
    FullCaseEntry("ꚇ", 1, 2),
    FullCaseEntry("ϰ", 0, 3),
    FullCaseEntry("κ", 1, 3),
    FullCaseEntry("Κ", 2, 3),
    FullCaseEntry("Ὂ", 0, 2),
    FullCaseEntry("ὂ", 1, 2),
    FullCaseEntry("ϱ", 0, 3),
    FullCaseEntry("ρ", 1, 3),
    FullCaseEntry("Ρ", 2, 3),
    FullCaseEntry("Ὃ", 0, 2),
    FullCaseEntry("ὃ", 1, 2),
    FullCaseEntry("Ꚉ", 0, 2),
    FullCaseEntry("ꚉ", 1, 2),
    FullCaseEntry("Ὄ", 0, 2),
    FullCaseEntry("ὄ", 1, 2),
    FullCaseEntry("Ὅ", 0, 2),
    FullCaseEntry("ὅ", 1, 2),
    FullCaseEntry("Ꚋ", 0, 2),
    FullCaseEntry("ꚋ", 1, 2),
    FullCaseEntry("ϴ", 0, 4),
    FullCaseEntry("θ", 1, 4),
    FullCaseEntry("Θ", 2, 4),
    FullCaseEntry("ϑ", 3, 4),
    FullCaseEntry("ϵ", 0, 3),
    FullCaseEntry("ε", 1, 3),
    FullCaseEntry("Ε", 2, 3),
    FullCaseEntry("Ꚍ", 0, 2),
    FullCaseEntry("ꚍ", 1, 2),
    FullCaseEntry("ὐ", 0, 2),
    FullCaseEntry("ὐ", 1, 2),
    FullCaseEntry("Ϸ", 0, 2),
    FullCaseEntry("ϸ", 1, 2),
    FullCaseEntry("Ꚏ", 0, 2),
    FullCaseEntry("ꚏ", 1, 2),
    FullCaseEntry("ὒ", 0, 2),
    FullCaseEntry("ὒ", 1, 2),
    FullCaseEntry("Ϲ", 0, 2),
    FullCaseEntry("ϲ", 1, 2),
    FullCaseEntry("Ꚑ", 0, 2),
    FullCaseEntry("ꚑ", 1, 2),
    FullCaseEntry("Ϻ", 0, 2),
    FullCaseEntry("ϻ", 1, 2),
    FullCaseEntry("ὔ", 0, 2),
    FullCaseEntry("ὔ", 1, 2),
    FullCaseEntry("Ꚓ", 0, 2),
    FullCaseEntry("ꚓ", 1, 2),
    FullCaseEntry("ὖ", 0, 2),
    FullCaseEntry("ὖ", 1, 2),
    FullCaseEntry("Ͻ", 0, 2),
    FullCaseEntry("ͻ", 1, 2),
    FullCaseEntry("Ꚕ", 0, 2),
    FullCaseEntry("ꚕ", 1, 2),
    FullCaseEntry("Ͼ", 0, 2),
    FullCaseEntry("ͼ", 1, 2),
    FullCaseEntry("Ͽ", 0, 2),
    FullCaseEntry("ͽ", 1, 2),
    FullCaseEntry("Ὑ", 0, 2),
    FullCaseEntry("ὑ", 1, 2),
    FullCaseEntry("Ꚗ", 0, 2),
    FullCaseEntry("ꚗ", 1, 2),
    FullCaseEntry("Ѐ", 0, 2),
    FullCaseEntry("ѐ", 1, 2),
    FullCaseEntry("Ё", 0, 2),
    FullCaseEntry("ё", 1, 2),
    FullCaseEntry("Ὓ", 0, 2),
    FullCaseEntry("ὓ", 1, 2),
    FullCaseEntry("Ђ", 0, 2),
    FullCaseEntry("ђ", 1, 2),
    FullCaseEntry("և", 0, 2),
    FullCaseEntry("եւ", 1, 2),
    FullCaseEntry("Ѓ", 0, 2),
    FullCaseEntry("ѓ", 1, 2),
    FullCaseEntry("Ὕ", 0, 2),
    FullCaseEntry("ὕ", 1, 2),
    FullCaseEntry("Є", 0, 2),
    FullCaseEntry("є", 1, 2),
    FullCaseEntry("Ѕ", 0, 2),
    FullCaseEntry("ѕ", 1, 2),
    FullCaseEntry("Ὗ", 0, 2),
    FullCaseEntry("ὗ", 1, 2),
    FullCaseEntry("І", 0, 2),
    FullCaseEntry("і", 1, 2),
    FullCaseEntry("Ї", 0, 2),
    FullCaseEntry("ї", 1, 2),
    FullCaseEntry("Ј", 0, 2),
    FullCaseEntry("ј", 1, 2),
    FullCaseEntry("Љ", 0, 2),
    FullCaseEntry("љ", 1, 2),
    FullCaseEntry("Ā", 0, 2),
    FullCaseEntry("ā", 1, 2),
    FullCaseEntry("Њ", 0, 2),
    FullCaseEntry("њ", 1, 2),
    FullCaseEntry("Ћ", 0, 2),
    FullCaseEntry("ћ", 1, 2),
    FullCaseEntry("Ă", 0, 2),
    FullCaseEntry("ă", 1, 2),
    FullCaseEntry("Ќ", 0, 2),
    FullCaseEntry("ќ", 1, 2),
    FullCaseEntry("Ѝ", 0, 2),
    FullCaseEntry("ѝ", 1, 2),
    FullCaseEntry("Ą", 0, 2),
    FullCaseEntry("ą", 1, 2),
    FullCaseEntry("Ў", 0, 2),
    FullCaseEntry("ў", 1, 2),
    FullCaseEntry("Ὠ", 0, 2),
    FullCaseEntry("ὠ", 1, 2),
    FullCaseEntry("Џ", 0, 2),
    FullCaseEntry("џ", 1, 2),
    FullCaseEntry("Ὡ", 0, 2),
    FullCaseEntry("ὡ", 1, 2),
    FullCaseEntry("Ć", 0, 2),
    FullCaseEntry("ć", 1, 2),
    FullCaseEntry("А", 0, 2),
    FullCaseEntry("а", 1, 2),
    FullCaseEntry("Ὢ", 0, 2),
    FullCaseEntry("ὢ", 1, 2),
    FullCaseEntry("Б", 0, 2),
    FullCaseEntry("б", 1, 2),
    FullCaseEntry("Ὣ", 0, 2),
    FullCaseEntry("ὣ", 1, 2),
    FullCaseEntry("Ĉ", 0, 2),
    FullCaseEntry("ĉ", 1, 2),
    FullCaseEntry("В", 0, 2),
    FullCaseEntry("в", 1, 2),
    FullCaseEntry("Ὤ", 0, 2),
    FullCaseEntry("ὤ", 1, 2),
    FullCaseEntry("Г", 0, 2),
    FullCaseEntry("г", 1, 2),
    FullCaseEntry("Ὥ", 0, 2),
    FullCaseEntry("ὥ", 1, 2),
    FullCaseEntry("Ċ", 0, 2),
    FullCaseEntry("ċ", 1, 2),
    FullCaseEntry("Д", 0, 2),
    FullCaseEntry("д", 1, 2),
    FullCaseEntry("Ὦ", 0, 2),
    FullCaseEntry("ὦ", 1, 2),
    FullCaseEntry("Е", 0, 2),
    FullCaseEntry("е", 1, 2),
    FullCaseEntry("Ὧ", 0, 2),
    FullCaseEntry("ὧ", 1, 2),
    FullCaseEntry("Č", 0, 2),
    FullCaseEntry("č", 1, 2),
    FullCaseEntry("Ж", 0, 2),
    FullCaseEntry("ж", 1, 2),
    FullCaseEntry("З", 0, 2),
    FullCaseEntry("з", 1, 2),
    FullCaseEntry("Ď", 0, 2),
    FullCaseEntry("ď", 1, 2),
    FullCaseEntry("И", 0, 2),
    FullCaseEntry("и", 1, 2),
    FullCaseEntry("Й", 0, 2),
    FullCaseEntry("й", 1, 2),
    FullCaseEntry("Đ", 0, 2),
    FullCaseEntry("đ", 1, 2),
    FullCaseEntry("К", 0, 2),
    FullCaseEntry("к", 1, 2),
    FullCaseEntry("Л", 0, 2),
    FullCaseEntry("л", 1, 2),
    FullCaseEntry("Ē", 0, 2),
    FullCaseEntry("ē", 1, 2),
    FullCaseEntry("М", 0, 2),
    FullCaseEntry("м", 1, 2),
    FullCaseEntry("Н", 0, 2),
    FullCaseEntry("н", 1, 2),
    FullCaseEntry("Ĕ", 0, 2),
    FullCaseEntry("ĕ", 1, 2),
    FullCaseEntry("О", 0, 2),
    FullCaseEntry("о", 1, 2),
    FullCaseEntry("П", 0, 2),
    FullCaseEntry("п", 1, 2),
    FullCaseEntry("Ė", 0, 2),
    FullCaseEntry("ė", 1, 2),
    FullCaseEntry("Р", 0, 2),
    FullCaseEntry("р", 1, 2),
    FullCaseEntry("С", 0, 2),
    FullCaseEntry("с", 1, 2),
    FullCaseEntry("Ę", 0, 2),
    FullCaseEntry("ę", 1, 2),
    FullCaseEntry("Т", 0, 2),
    FullCaseEntry("т", 1, 2),
    FullCaseEntry("У", 0, 2),
    FullCaseEntry("у", 1, 2),
    FullCaseEntry("Ě", 0, 2),
    FullCaseEntry("ě", 1, 2),
    FullCaseEntry("Ф", 0, 2),
    FullCaseEntry("ф", 1, 2),
    FullCaseEntry("Х", 0, 2),
    FullCaseEntry("х", 1, 2),
    FullCaseEntry("Ĝ", 0, 2),
    FullCaseEntry("ĝ", 1, 2),
    FullCaseEntry("Ц", 0, 2),
    FullCaseEntry("ц", 1, 2),
    FullCaseEntry("ᾀ", 0, 3),
    FullCaseEntry("ἀι", 1, 3),
    FullCaseEntry("ᾈ", 2, 3),
    FullCaseEntry("Ч", 0, 2),
    FullCaseEntry("ч", 1, 2),
    FullCaseEntry("ᾁ", 0, 3),
    FullCaseEntry("ἁι", 1, 3),
    FullCaseEntry("ᾉ", 2, 3),
    FullCaseEntry("Ğ", 0, 2),
    FullCaseEntry("ğ", 1, 2),
    FullCaseEntry("Ш", 0, 2),
    FullCaseEntry("ш", 1, 2),
    FullCaseEntry("ᾂ", 0, 3),
    FullCaseEntry("ἂι", 1, 3),
    FullCaseEntry("ᾊ", 2, 3),
    FullCaseEntry("Щ", 0, 2),
    FullCaseEntry("щ", 1, 2),
    FullCaseEntry("ᾃ", 0, 3),
    FullCaseEntry("ἃι", 1, 3),
    FullCaseEntry("ᾋ", 2, 3),
    FullCaseEntry("Ġ", 0, 2),
    FullCaseEntry("ġ", 1, 2),
    FullCaseEntry("Ъ", 0, 2),
    FullCaseEntry("ъ", 1, 2),
    FullCaseEntry("ᾄ", 0, 3),
    FullCaseEntry("ἄι", 1, 3),
    FullCaseEntry("ᾌ", 2, 3),
    FullCaseEntry("Ы", 0, 2),
    FullCaseEntry("ы", 1, 2),
    FullCaseEntry("Ḁ", 0, 2),
    FullCaseEntry("ḁ", 1, 2),
    FullCaseEntry("ᾅ", 0, 3),
    FullCaseEntry("ἅι", 1, 3),
    FullCaseEntry("ᾍ", 2, 3),
    FullCaseEntry("Ģ", 0, 2),
    FullCaseEntry("ģ", 1, 2),
    FullCaseEntry("Ь", 0, 2),
    FullCaseEntry("ь", 1, 2),
    FullCaseEntry("ᾆ", 0, 3),
    FullCaseEntry("ἆι", 1, 3),
    FullCaseEntry("ᾎ", 2, 3),
    FullCaseEntry("Э", 0, 2),
    FullCaseEntry("э", 1, 2),
    FullCaseEntry("Ḃ", 0, 2),
    FullCaseEntry("ḃ", 1, 2),
    FullCaseEntry("ᾇ", 0, 3),
    FullCaseEntry("ἇι", 1, 3),
    FullCaseEntry("ᾏ", 2, 3),
    FullCaseEntry("Ĥ", 0, 2),
    FullCaseEntry("ĥ", 1, 2),
    FullCaseEntry("Ю", 0, 2),
    FullCaseEntry("ю", 1, 2),
    FullCaseEntry("ᾈ", 0, 3),
    FullCaseEntry("ἀι", 1, 3),
    FullCaseEntry("ᾀ", 2, 3),
    FullCaseEntry("Я", 0, 2),
    FullCaseEntry("я", 1, 2),
    FullCaseEntry("Ḅ", 0, 2),
    FullCaseEntry("ḅ", 1, 2),
    FullCaseEntry("ᾉ", 0, 3),
    FullCaseEntry("ἁι", 1, 3),
    FullCaseEntry("ᾁ", 2, 3),
    FullCaseEntry("Ħ", 0, 2),
    FullCaseEntry("ħ", 1, 2),
    FullCaseEntry("ᾊ", 0, 3),
    FullCaseEntry("ἂι", 1, 3),
    FullCaseEntry("ᾂ", 2, 3),
    FullCaseEntry("Ḇ", 0, 2),
    FullCaseEntry("ḇ", 1, 2),
    FullCaseEntry("ᾋ", 0, 3),
    FullCaseEntry("ἃι", 1, 3),
    FullCaseEntry("ᾃ", 2, 3),
    FullCaseEntry("Ĩ", 0, 2),
    FullCaseEntry("ĩ", 1, 2),
    FullCaseEntry("ᾌ", 0, 3),
    FullCaseEntry("ἄι", 1, 3),
    FullCaseEntry("ᾄ", 2, 3),
    FullCaseEntry("Ḉ", 0, 2),
    FullCaseEntry("ḉ", 1, 2),
    FullCaseEntry("ᾍ", 0, 3),
    FullCaseEntry("ἅι", 1, 3),
    FullCaseEntry("ᾅ", 2, 3),
    FullCaseEntry("Ī", 0, 2),
    FullCaseEntry("ī", 1, 2),
    FullCaseEntry("ᾎ", 0, 3),
    FullCaseEntry("ἆι", 1, 3),
    FullCaseEntry("ᾆ", 2, 3),
    FullCaseEntry("Ḋ", 0, 2),
    FullCaseEntry("ḋ", 1, 2),
    FullCaseEntry("ᾏ", 0, 3),
    FullCaseEntry("ἇι", 1, 3),
    FullCaseEntry("ᾇ", 2, 3),
    FullCaseEntry("Ĭ", 0, 2),
    FullCaseEntry("ĭ", 1, 2),
    FullCaseEntry("ᾐ", 0, 3),
    FullCaseEntry("ἠι", 1, 3),
    FullCaseEntry("ᾘ", 2, 3),
    FullCaseEntry("Ḍ", 0, 2),
    FullCaseEntry("ḍ", 1, 2),
    FullCaseEntry("ᾑ", 0, 3),
    FullCaseEntry("ἡι", 1, 3),
    FullCaseEntry("ᾙ", 2, 3),
    FullCaseEntry("Į", 0, 2),
    FullCaseEntry("į", 1, 2),
    FullCaseEntry("ᾒ", 0, 3),
    FullCaseEntry("ἢι", 1, 3),
    FullCaseEntry("ᾚ", 2, 3),
    FullCaseEntry("Ḏ", 0, 2),
    FullCaseEntry("ḏ", 1, 2),
    FullCaseEntry("ᾓ", 0, 3),
    FullCaseEntry("ἣι", 1, 3),
    FullCaseEntry("ᾛ", 2, 3),
    FullCaseEntry("İ", 0, 2),
    FullCaseEntry("i̇", 1, 2),
    FullCaseEntry("ᾔ", 0, 3),
    FullCaseEntry("ἤι", 1, 3),
    FullCaseEntry("ᾜ", 2, 3),
    FullCaseEntry("Ḑ", 0, 2),
    FullCaseEntry("ḑ", 1, 2),
    FullCaseEntry("ᾕ", 0, 3),
    FullCaseEntry("ἥι", 1, 3),
    FullCaseEntry("ᾝ", 2, 3),
    FullCaseEntry("Ĳ", 0, 2),
    FullCaseEntry("ĳ", 1, 2),
    FullCaseEntry("ᾖ", 0, 3),
    FullCaseEntry("ἦι", 1, 3),
    FullCaseEntry("ᾞ", 2, 3),
    FullCaseEntry("Ḓ", 0, 2),
    FullCaseEntry("ḓ", 1, 2),
    FullCaseEntry("ᾗ", 0, 3),
    FullCaseEntry("ἧι", 1, 3),
    FullCaseEntry("ᾟ", 2, 3),
    FullCaseEntry("Ĵ", 0, 2),
    FullCaseEntry("ĵ", 1, 2),
    FullCaseEntry("ᾘ", 0, 3),
    FullCaseEntry("ἠι", 1, 3),
    FullCaseEntry("ᾐ", 2, 3),
    FullCaseEntry("Ḕ", 0, 2),
    FullCaseEntry("ḕ", 1, 2),
    FullCaseEntry("ᾙ", 0, 3),
    FullCaseEntry("ἡι", 1, 3),
    FullCaseEntry("ᾑ", 2, 3),
    FullCaseEntry("Ķ", 0, 2),
    FullCaseEntry("ķ", 1, 2),
    FullCaseEntry("ᾚ", 0, 3),
    FullCaseEntry("ἢι", 1, 3),
    FullCaseEntry("ᾒ", 2, 3),
    FullCaseEntry("Ḗ", 0, 2),
    FullCaseEntry("ḗ", 1, 2),
    FullCaseEntry("ᾛ", 0, 3),
    FullCaseEntry("ἣι", 1, 3),
    FullCaseEntry("ᾓ", 2, 3),
    FullCaseEntry("ᾜ", 0, 3),
    FullCaseEntry("ἤι", 1, 3),
    FullCaseEntry("ᾔ", 2, 3),
    FullCaseEntry("Ĺ", 0, 2),
    FullCaseEntry("ĺ", 1, 2),
    FullCaseEntry("Ḙ", 0, 2),
    FullCaseEntry("ḙ", 1, 2),
    FullCaseEntry("ᾝ", 0, 3),
    FullCaseEntry("ἥι", 1, 3),
    FullCaseEntry("ᾕ", 2, 3),
    FullCaseEntry("ᾞ", 0, 3),
    FullCaseEntry("ἦι", 1, 3),
    FullCaseEntry("ᾖ", 2, 3),
    FullCaseEntry("Ļ", 0, 2),
    FullCaseEntry("ļ", 1, 2),
    FullCaseEntry("Ḛ", 0, 2),
    FullCaseEntry("ḛ", 1, 2),
    FullCaseEntry("ᾟ", 0, 3),
    FullCaseEntry("ἧι", 1, 3),
    FullCaseEntry("ᾗ", 2, 3),
    FullCaseEntry("ᾠ", 0, 3),
    FullCaseEntry("ὠι", 1, 3),
    FullCaseEntry("ᾨ", 2, 3),
    FullCaseEntry("Ľ", 0, 2),
    FullCaseEntry("ľ", 1, 2),
    FullCaseEntry("Ḝ", 0, 2),
    FullCaseEntry("ḝ", 1, 2),
    FullCaseEntry("ᾡ", 0, 3),
    FullCaseEntry("ὡι", 1, 3),
    FullCaseEntry("ᾩ", 2, 3),
    FullCaseEntry("Ω", 0, 3),
    FullCaseEntry("ω", 1, 3),
    FullCaseEntry("Ω", 2, 3),
    FullCaseEntry("ᾢ", 0, 3),
    FullCaseEntry("ὢι", 1, 3),
    FullCaseEntry("ᾪ", 2, 3),
    FullCaseEntry("Ŀ", 0, 2),
    FullCaseEntry("ŀ", 1, 2),
    FullCaseEntry("Ḟ", 0, 2),
    FullCaseEntry("ḟ", 1, 2),
    FullCaseEntry("ᾣ", 0, 3),
    FullCaseEntry("ὣι", 1, 3),
    FullCaseEntry("ᾫ", 2, 3),
    FullCaseEntry("ᾤ", 0, 3),
    FullCaseEntry("ὤι", 1, 3),
    FullCaseEntry("ᾬ", 2, 3),
    FullCaseEntry("Ł", 0, 2),
    FullCaseEntry("ł", 1, 2),
    FullCaseEntry("Ḡ", 0, 2),
    FullCaseEntry("ḡ", 1, 2),
    FullCaseEntry("ᾥ", 0, 3),
    FullCaseEntry("ὥι", 1, 3),
    FullCaseEntry("ᾭ", 2, 3),
    FullCaseEntry("K", 0, 3),
    FullCaseEntry("k", 1, 3),
    FullCaseEntry("K", 2, 3),
    FullCaseEntry("ᾦ", 0, 3),
    FullCaseEntry("ὦι", 1, 3),
    FullCaseEntry("ᾮ", 2, 3),
    FullCaseEntry("Å", 0, 3),
    FullCaseEntry("å", 1, 3),
    FullCaseEntry("Å", 2, 3),
    FullCaseEntry("Ń", 0, 2),
    FullCaseEntry("ń", 1, 2),
    FullCaseEntry("Ḣ", 0, 2),
    FullCaseEntry("ḣ", 1, 2),
    FullCaseEntry("ᾧ", 0, 3),
    FullCaseEntry("ὧι", 1, 3),
    FullCaseEntry("ᾯ", 2, 3),
    FullCaseEntry("ᾨ", 0, 3),
    FullCaseEntry("ὠι", 1, 3),
    FullCaseEntry("ᾠ", 2, 3),
    FullCaseEntry("Ņ", 0, 2),
    FullCaseEntry("ņ", 1, 2),
    FullCaseEntry("Ḥ", 0, 2),
    FullCaseEntry("ḥ", 1, 2),
    FullCaseEntry("ᾩ", 0, 3),
    FullCaseEntry("ὡι", 1, 3),
    FullCaseEntry("ᾡ", 2, 3),
    FullCaseEntry("ᾪ", 0, 3),
    FullCaseEntry("ὢι", 1, 3),
    FullCaseEntry("ᾢ", 2, 3),
    FullCaseEntry("Ň", 0, 2),
    FullCaseEntry("ň", 1, 2),
    FullCaseEntry("Ḧ", 0, 2),
    FullCaseEntry("ḧ", 1, 2),
    FullCaseEntry("ᾫ", 0, 3),
    FullCaseEntry("ὣι", 1, 3),
    FullCaseEntry("ᾣ", 2, 3),
    FullCaseEntry("ᾬ", 0, 3),
    FullCaseEntry("ὤι", 1, 3),
    FullCaseEntry("ᾤ", 2, 3),
    FullCaseEntry("ŉ", 0, 2),
    FullCaseEntry("ʼn", 1, 2),
    FullCaseEntry("Ḩ", 0, 2),
    FullCaseEntry("ḩ", 1, 2),
    FullCaseEntry("ᾭ", 0, 3),
    FullCaseEntry("ὥι", 1, 3),
    FullCaseEntry("ᾥ", 2, 3),
    FullCaseEntry("Ⅎ", 0, 2),
    FullCaseEntry("ⅎ", 1, 2),
    FullCaseEntry("Ŋ", 0, 2),
    FullCaseEntry("ŋ", 1, 2),
    FullCaseEntry("ᾮ", 0, 3),
    FullCaseEntry("ὦι", 1, 3),
    FullCaseEntry("ᾦ", 2, 3),
    FullCaseEntry("Ḫ", 0, 2),
    FullCaseEntry("ḫ", 1, 2),
    FullCaseEntry("ᾯ", 0, 3),
    FullCaseEntry("ὧι", 1, 3),
    FullCaseEntry("ᾧ", 2, 3),
    FullCaseEntry("Ō", 0, 2),
    FullCaseEntry("ō", 1, 2),
    FullCaseEntry("Ḭ", 0, 2),
    FullCaseEntry("ḭ", 1, 2),
    FullCaseEntry("Ŏ", 0, 2),
    FullCaseEntry("ŏ", 1, 2),
    FullCaseEntry("ᾲ", 0, 2),
    FullCaseEntry("ὰι", 1, 2),
    FullCaseEntry("Ḯ", 0, 2),
    FullCaseEntry("ḯ", 1, 2),
    FullCaseEntry("ᾳ", 0, 3),
    FullCaseEntry("αι", 1, 3),
    FullCaseEntry("ᾼ", 2, 3),
    FullCaseEntry("Ő", 0, 2),
    FullCaseEntry("ő", 1, 2),
    FullCaseEntry("ᾴ", 0, 2),
    FullCaseEntry("άι", 1, 2),
    FullCaseEntry("Ḱ", 0, 2),
    FullCaseEntry("ḱ", 1, 2),
    FullCaseEntry("Œ", 0, 2),
    FullCaseEntry("œ", 1, 2),
    FullCaseEntry("ᾶ", 0, 2),
    FullCaseEntry("ᾶ", 1, 2),
    FullCaseEntry("Ḳ", 0, 2),
    FullCaseEntry("ḳ", 1, 2),
    FullCaseEntry("ᾷ", 0, 2),
    FullCaseEntry("ᾶι", 1, 2),
    FullCaseEntry("Ŕ", 0, 2),
    FullCaseEntry("ŕ", 1, 2),
    FullCaseEntry("Ᾰ", 0, 2),
    FullCaseEntry("ᾰ", 1, 2),
    FullCaseEntry("Ḵ", 0, 2),
    FullCaseEntry("ḵ", 1, 2),
    FullCaseEntry("Ᾱ", 0, 2),
    FullCaseEntry("ᾱ", 1, 2),
    FullCaseEntry("Ŗ", 0, 2),
    FullCaseEntry("ŗ", 1, 2),
    FullCaseEntry("Ѡ", 0, 2),
    FullCaseEntry("ѡ", 1, 2),
    FullCaseEntry("Ὰ", 0, 2),
    FullCaseEntry("ὰ", 1, 2),
    FullCaseEntry("Ḷ", 0, 2),
    FullCaseEntry("ḷ", 1, 2),
    FullCaseEntry("Ά", 0, 2),
    FullCaseEntry("ά", 1, 2),
    FullCaseEntry("Ř", 0, 2),
    FullCaseEntry("ř", 1, 2),
    FullCaseEntry("Ѣ", 0, 2),
    FullCaseEntry("ѣ", 1, 2),
    FullCaseEntry("ᾼ", 0, 3),
    FullCaseEntry("αι", 1, 3),
    FullCaseEntry("ᾳ", 2, 3),
    FullCaseEntry("Ḹ", 0, 2),
    FullCaseEntry("ḹ", 1, 2),
    FullCaseEntry("Ś", 0, 2),
    FullCaseEntry("ś", 1, 2),
    FullCaseEntry("Ѥ", 0, 2),
    FullCaseEntry("ѥ", 1, 2),
    FullCaseEntry("ι", 0, 4),
    FullCaseEntry("ι", 1, 4),
    FullCaseEntry("ͅ", 2, 4),
    FullCaseEntry("Ι", 3, 4),
    FullCaseEntry("Ḻ", 0, 2),
    FullCaseEntry("ḻ", 1, 2),
    FullCaseEntry("Ŝ", 0, 2),
    FullCaseEntry("ŝ", 1, 2),
    FullCaseEntry("Ѧ", 0, 2),
    FullCaseEntry("ѧ", 1, 2),
    FullCaseEntry("Ḽ", 0, 2),
    FullCaseEntry("ḽ", 1, 2),
    FullCaseEntry("Ş", 0, 2),
    FullCaseEntry("ş", 1, 2),
    FullCaseEntry("Ѩ", 0, 2),
    FullCaseEntry("ѩ", 1, 2),
    FullCaseEntry("ῂ", 0, 2),
    FullCaseEntry("ὴι", 1, 2),
    FullCaseEntry("Ａ", 0, 2),
    FullCaseEntry("ａ", 1, 2),
    FullCaseEntry("Ḿ", 0, 2),
    FullCaseEntry("ḿ", 1, 2),
    FullCaseEntry("ῃ", 0, 3),
    FullCaseEntry("ηι", 1, 3),
    FullCaseEntry("ῌ", 2, 3),
    FullCaseEntry("Ｂ", 0, 2),
    FullCaseEntry("ｂ", 1, 2),
    FullCaseEntry("Š", 0, 2),
    FullCaseEntry("š", 1, 2),
    FullCaseEntry("Ѫ", 0, 2),
    FullCaseEntry("ѫ", 1, 2),
    FullCaseEntry("ῄ", 0, 2),
    FullCaseEntry("ήι", 1, 2),
    FullCaseEntry("Ｃ", 0, 2),
    FullCaseEntry("ｃ", 1, 2),
    FullCaseEntry("Ṁ", 0, 2),
    FullCaseEntry("ṁ", 1, 2),
    FullCaseEntry("Ｄ", 0, 2),
    FullCaseEntry("ｄ", 1, 2),
    FullCaseEntry("Ţ", 0, 2),
    FullCaseEntry("ţ", 1, 2),
    FullCaseEntry("Ѭ", 0, 2),
    FullCaseEntry("ѭ", 1, 2),
    FullCaseEntry("ῆ", 0, 2),
    FullCaseEntry("ῆ", 1, 2),
    FullCaseEntry("Ｅ", 0, 2),
    FullCaseEntry("ｅ", 1, 2),
    FullCaseEntry("Ṃ", 0, 2),
    FullCaseEntry("ṃ", 1, 2),
    FullCaseEntry("ῇ", 0, 2),
    FullCaseEntry("ῆι", 1, 2),
    FullCaseEntry("Ｆ", 0, 2),
    FullCaseEntry("ｆ", 1, 2),
    FullCaseEntry("Ť", 0, 2),
    FullCaseEntry("ť", 1, 2),
    FullCaseEntry("Ѯ", 0, 2),
    FullCaseEntry("ѯ", 1, 2),
    FullCaseEntry("Ὲ", 0, 2),
    FullCaseEntry("ὲ", 1, 2),
    FullCaseEntry("Ｇ", 0, 2),
    FullCaseEntry("ｇ", 1, 2),
    FullCaseEntry("Ṅ", 0, 2),
    FullCaseEntry("ṅ", 1, 2),
    FullCaseEntry("Έ", 0, 2),
    FullCaseEntry("έ", 1, 2),
    FullCaseEntry("Ｈ", 0, 2),
    FullCaseEntry("ｈ", 1, 2),
    FullCaseEntry("Ŧ", 0, 2),
    FullCaseEntry("ŧ", 1, 2),
    FullCaseEntry("Ѱ", 0, 2),
    FullCaseEntry("ѱ", 1, 2),
    FullCaseEntry("Ὴ", 0, 2),
    FullCaseEntry("ὴ", 1, 2),
    FullCaseEntry("Ｉ", 0, 2),
    FullCaseEntry("ｉ", 1, 2),
    FullCaseEntry("Ṇ", 0, 2),
    FullCaseEntry("ṇ", 1, 2),
    FullCaseEntry("Ή", 0, 2),
    FullCaseEntry("ή", 1, 2),
    FullCaseEntry("Ｊ", 0, 2),
    FullCaseEntry("ｊ", 1, 2),
    FullCaseEntry("Ũ", 0, 2),
    FullCaseEntry("ũ", 1, 2),
    FullCaseEntry("Ѳ", 0, 2),
    FullCaseEntry("ѳ", 1, 2),
    FullCaseEntry("ῌ", 0, 3),
    FullCaseEntry("ηι", 1, 3),
    FullCaseEntry("ῃ", 2, 3),
    FullCaseEntry("Ｋ", 0, 2),
    FullCaseEntry("ｋ", 1, 2),
    FullCaseEntry("Ṉ", 0, 2),
    FullCaseEntry("ṉ", 1, 2),
    FullCaseEntry("Ｌ", 0, 2),
    FullCaseEntry("ｌ", 1, 2),
    FullCaseEntry("Ū", 0, 2),
    FullCaseEntry("ū", 1, 2),
    FullCaseEntry("Ѵ", 0, 2),
    FullCaseEntry("ѵ", 1, 2),
    FullCaseEntry("Ｍ", 0, 2),
    FullCaseEntry("ｍ", 1, 2),
    FullCaseEntry("Ṋ", 0, 2),
    FullCaseEntry("ṋ", 1, 2),
    FullCaseEntry("Ｎ", 0, 2),
    FullCaseEntry("ｎ", 1, 2),
    FullCaseEntry("Ŭ", 0, 2),
    FullCaseEntry("ŭ", 1, 2),
    FullCaseEntry("Ѷ", 0, 2),
    FullCaseEntry("ѷ", 1, 2),
    FullCaseEntry("Ｏ", 0, 2),
    FullCaseEntry("ｏ", 1, 2),
    FullCaseEntry("Ṍ", 0, 2),
    FullCaseEntry("ṍ", 1, 2),
    FullCaseEntry("Ｐ", 0, 2),
    FullCaseEntry("ｐ", 1, 2),
    FullCaseEntry("Ů", 0, 2),
    FullCaseEntry("ů", 1, 2),
    FullCaseEntry("Ѹ", 0, 2),
    FullCaseEntry("ѹ", 1, 2),
    FullCaseEntry("Ⴀ", 0, 2),
    FullCaseEntry("ⴀ", 1, 2),
    FullCaseEntry("ῒ", 0, 2),
    FullCaseEntry("ῒ", 1, 2),
    FullCaseEntry("Ｑ", 0, 2),
    FullCaseEntry("ｑ", 1, 2),
    FullCaseEntry("Ⴁ", 0, 2),
    FullCaseEntry("ⴁ", 1, 2),
    FullCaseEntry("Ṏ", 0, 2),
    FullCaseEntry("ṏ", 1, 2),
    FullCaseEntry("ΐ", 0, 3),
    FullCaseEntry("ΐ", 1, 3),
    FullCaseEntry("ΐ", 2, 3),
    FullCaseEntry("Ｒ", 0, 2),
    FullCaseEntry("ｒ", 1, 2),
    FullCaseEntry("Ű", 0, 2),
    FullCaseEntry("ű", 1, 2),
    FullCaseEntry("Ѻ", 0, 2),
    FullCaseEntry("ѻ", 1, 2),
    FullCaseEntry("Ⴂ", 0, 2),
    FullCaseEntry("ⴂ", 1, 2),
    FullCaseEntry("Ｓ", 0, 2),
    FullCaseEntry("ｓ", 1, 2),
    FullCaseEntry("Ⴃ", 0, 2),
    FullCaseEntry("ⴃ", 1, 2),
    FullCaseEntry("Ṑ", 0, 2),
    FullCaseEntry("ṑ", 1, 2),
    FullCaseEntry("Ｔ", 0, 2),
    FullCaseEntry("ｔ", 1, 2),
    FullCaseEntry("Ų", 0, 2),
    FullCaseEntry("ų", 1, 2),
    FullCaseEntry("Ѽ", 0, 2),
    FullCaseEntry("ѽ", 1, 2),
    FullCaseEntry("Ⴄ", 0, 2),
    FullCaseEntry("ⴄ", 1, 2),
    FullCaseEntry("ῖ", 0, 2),
    FullCaseEntry("ῖ", 1, 2),
    FullCaseEntry("Ｕ", 0, 2),
    FullCaseEntry("ｕ", 1, 2),
    FullCaseEntry("Ⴅ", 0, 2),
    FullCaseEntry("ⴅ", 1, 2),
    FullCaseEntry("Ṓ", 0, 2),
    FullCaseEntry("ṓ", 1, 2),
    FullCaseEntry("ῗ", 0, 2),
    FullCaseEntry("ῗ", 1, 2),
    FullCaseEntry("Ｖ", 0, 2),
    FullCaseEntry("ｖ", 1, 2),
    FullCaseEntry("Ŵ", 0, 2),
    FullCaseEntry("ŵ", 1, 2),
    FullCaseEntry("Ѿ", 0, 2),
    FullCaseEntry("ѿ", 1, 2),
    FullCaseEntry("Ⴆ", 0, 2),
    FullCaseEntry("ⴆ", 1, 2),
    FullCaseEntry("Ῐ", 0, 2),
    FullCaseEntry("ῐ", 1, 2),
    FullCaseEntry("Ⰰ", 0, 2),
    FullCaseEntry("ⰰ", 1, 2),
    FullCaseEntry("Ｗ", 0, 2),
    FullCaseEntry("ｗ", 1, 2),
    FullCaseEntry("Ⴇ", 0, 2),
    FullCaseEntry("ⴇ", 1, 2),
    FullCaseEntry("Ṕ", 0, 2),
    FullCaseEntry("ṕ", 1, 2),
    FullCaseEntry("Ῑ", 0, 2),
    FullCaseEntry("ῑ", 1, 2),
    FullCaseEntry("Ⰱ", 0, 2),
    FullCaseEntry("ⰱ", 1, 2),
    FullCaseEntry("Ｘ", 0, 2),
    FullCaseEntry("ｘ", 1, 2),
    FullCaseEntry("Ŷ", 0, 2),
    FullCaseEntry("ŷ", 1, 2),
    FullCaseEntry("Ҁ", 0, 2),
    FullCaseEntry("ҁ", 1, 2),
    FullCaseEntry("Ⴈ", 0, 2),
    FullCaseEntry("ⴈ", 1, 2),
    FullCaseEntry("Ὶ", 0, 2),
    FullCaseEntry("ὶ", 1, 2),
    FullCaseEntry("Ⰲ", 0, 2),
    FullCaseEntry("ⰲ", 1, 2),
    FullCaseEntry("Ｙ", 0, 2),
    FullCaseEntry("ｙ", 1, 2),
    FullCaseEntry("Ⴉ", 0, 2),
    FullCaseEntry("ⴉ", 1, 2),
    FullCaseEntry("Ṗ", 0, 2),
    FullCaseEntry("ṗ", 1, 2),
    FullCaseEntry("Ί", 0, 2),
    FullCaseEntry("ί", 1, 2),
    FullCaseEntry("Ⅰ", 0, 2),
    FullCaseEntry("ⅰ", 1, 2),
    FullCaseEntry("Ⰳ", 0, 2),
    FullCaseEntry("ⰳ", 1, 2),
    FullCaseEntry("Ｚ", 0, 2),
    FullCaseEntry("ｚ", 1, 2),
    FullCaseEntry("Ÿ", 0, 2),
    FullCaseEntry("ÿ", 1, 2),
    FullCaseEntry("Ⴊ", 0, 2),
    FullCaseEntry("ⴊ", 1, 2),
    FullCaseEntry("Ⅱ", 0, 2),
    FullCaseEntry("ⅱ", 1, 2),
    FullCaseEntry("Ⰴ", 0, 2),
    FullCaseEntry("ⰴ", 1, 2),
    FullCaseEntry("Ź", 0, 2),
    FullCaseEntry("ź", 1, 2),
    FullCaseEntry("Ⴋ", 0, 2),
    FullCaseEntry("ⴋ", 1, 2),
    FullCaseEntry("Ṙ", 0, 2),
    FullCaseEntry("ṙ", 1, 2),
    FullCaseEntry("Ⅲ", 0, 2),
    FullCaseEntry("ⅲ", 1, 2),
    FullCaseEntry("Ⰵ", 0, 2),
    FullCaseEntry("ⰵ", 1, 2),
    FullCaseEntry("Ⴌ", 0, 2),
    FullCaseEntry("ⴌ", 1, 2),
    FullCaseEntry("Ⅳ", 0, 2),
    FullCaseEntry("ⅳ", 1, 2),
    FullCaseEntry("Ⰶ", 0, 2),
    FullCaseEntry("ⰶ", 1, 2),
    FullCaseEntry("Ż", 0, 2),
    FullCaseEntry("ż", 1, 2),
    FullCaseEntry("Ⴍ", 0, 2),
    FullCaseEntry("ⴍ", 1, 2),
    FullCaseEntry("Ṛ", 0, 2),
    FullCaseEntry("ṛ", 1, 2),
    FullCaseEntry("Ⅴ", 0, 2),
    FullCaseEntry("ⅴ", 1, 2),
    FullCaseEntry("Ⰷ", 0, 2),
    FullCaseEntry("ⰷ", 1, 2),
    FullCaseEntry("Ⴎ", 0, 2),
    FullCaseEntry("ⴎ", 1, 2),
    FullCaseEntry("Ⅵ", 0, 2),
    FullCaseEntry("ⅵ", 1, 2),
    FullCaseEntry("Ⰸ", 0, 2),
    FullCaseEntry("ⰸ", 1, 2),
    FullCaseEntry("Ž", 0, 2),
    FullCaseEntry("ž", 1, 2),
    FullCaseEntry("Ⴏ", 0, 2),
    FullCaseEntry("ⴏ", 1, 2),
    FullCaseEntry("Ṝ", 0, 2),
    FullCaseEntry("ṝ", 1, 2),
    FullCaseEntry("Ⅶ", 0, 2),
    FullCaseEntry("ⅶ", 1, 2),
    FullCaseEntry("Ⰹ", 0, 2),
    FullCaseEntry("ⰹ", 1, 2),
    FullCaseEntry("Ⴐ", 0, 2),
    FullCaseEntry("ⴐ", 1, 2),
    FullCaseEntry("ῢ", 0, 2),
    FullCaseEntry("ῢ", 1, 2),
    FullCaseEntry("Ⅷ", 0, 2),
    FullCaseEntry("ⅷ", 1, 2),
    FullCaseEntry("Ⰺ", 0, 2),
    FullCaseEntry("ⰺ", 1, 2),
    FullCaseEntry("ſ", 0, 3),
    FullCaseEntry("s", 1, 3),
    FullCaseEntry("S", 2, 3),
    FullCaseEntry("Ⴑ", 0, 2),
    FullCaseEntry("ⴑ", 1, 2),
    FullCaseEntry("Ṟ", 0, 2),
    FullCaseEntry("ṟ", 1, 2),
    FullCaseEntry("ΰ", 0, 3),
    FullCaseEntry("ΰ", 1, 3),
    FullCaseEntry("ΰ", 2, 3),
    FullCaseEntry("Ⅸ", 0, 2),
    FullCaseEntry("ⅸ", 1, 2),
    FullCaseEntry("Ⰻ", 0, 2),
    FullCaseEntry("ⰻ", 1, 2),
    FullCaseEntry("Ҋ", 0, 2),
    FullCaseEntry("ҋ", 1, 2),
    FullCaseEntry("Ⴒ", 0, 2),
    FullCaseEntry("ⴒ", 1, 2),
    FullCaseEntry("ῤ", 0, 2),
    FullCaseEntry("ῤ", 1, 2),
    FullCaseEntry("Ⅹ", 0, 2),
    FullCaseEntry("ⅹ", 1, 2),
    FullCaseEntry("Ⰼ", 0, 2),
    FullCaseEntry("ⰼ", 1, 2),
    FullCaseEntry("Ɓ", 0, 2),
    FullCaseEntry("ɓ", 1, 2),
    FullCaseEntry("Ⴓ", 0, 2),
    FullCaseEntry("ⴓ", 1, 2),
    FullCaseEntry("Ṡ", 0, 3),
    FullCaseEntry("ṡ", 1, 3),
    FullCaseEntry("ẛ", 2, 3),
    FullCaseEntry("Ⅺ", 0, 2),
    FullCaseEntry("ⅺ", 1, 2),
    FullCaseEntry("Ⰽ", 0, 2),
    FullCaseEntry("ⰽ", 1, 2),
    FullCaseEntry("Ꜣ", 0, 2),
    FullCaseEntry("ꜣ", 1, 2),
    FullCaseEntry("Ƃ", 0, 2),
    FullCaseEntry("ƃ", 1, 2),
    FullCaseEntry("Ҍ", 0, 2),
    FullCaseEntry("ҍ", 1, 2),
    FullCaseEntry("Ⴔ", 0, 2),
    FullCaseEntry("ⴔ", 1, 2),
    FullCaseEntry("ῦ", 0, 2),
    FullCaseEntry("ῦ", 1, 2),
    FullCaseEntry("Ⅻ", 0, 2),
    FullCaseEntry("ⅻ", 1, 2),
    FullCaseEntry("Ⰾ", 0, 2),
    FullCaseEntry("ⰾ", 1, 2),
    FullCaseEntry("Ⴕ", 0, 2),
    FullCaseEntry("ⴕ", 1, 2),
    FullCaseEntry("Ṣ", 0, 2),
    FullCaseEntry("ṣ", 1, 2),
    FullCaseEntry("ῧ", 0, 2),
    FullCaseEntry("ῧ", 1, 2),
    FullCaseEntry("Ⅼ", 0, 2),
    FullCaseEntry("ⅼ", 1, 2),
    FullCaseEntry("Ⰿ", 0, 2),
    FullCaseEntry("ⰿ", 1, 2),
    FullCaseEntry("Ꜥ", 0, 2),
    FullCaseEntry("ꜥ", 1, 2),
    FullCaseEntry("Ƅ", 0, 2),
    FullCaseEntry("ƅ", 1, 2),
    FullCaseEntry("Ҏ", 0, 2),
    FullCaseEntry("ҏ", 1, 2),
    FullCaseEntry("Ⴖ", 0, 2),
    FullCaseEntry("ⴖ", 1, 2),
    FullCaseEntry("Ῠ", 0, 2),
    FullCaseEntry("ῠ", 1, 2),
    FullCaseEntry("Ⅽ", 0, 2),
    FullCaseEntry("ⅽ", 1, 2),
    FullCaseEntry("Ⱀ", 0, 2),
    FullCaseEntry("ⱀ", 1, 2),
];
struct UnicodeProperty(T)
{
    string name;
    RleBitSet!T set;
}
immutable unicodeASCII_Hex_Digit = RleBitSet!ubyte.fromRawArray([0x30, 0xa, 0x7, 0x6, 0x1a, 0x6]);
immutable unicodeTamil = RleBitSet!ubyte.fromRawArray([0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x8d, 0x2, 0x1, 0x6, 0x3, 0x3, 0x1, 0x4, 0x3, 0x2, 0x1, 0x1, 0x1, 0x2, 0x3, 0x2, 0x3, 0x3, 0x3, 0xc, 0x4, 0x5, 0x3, 0x3, 0x1, 0x4, 0x2, 0x1, 0x6, 0x1, 0xe, 0x15]);
immutable unicodeGujarati = RleBitSet!ubyte.fromRawArray([0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x8b, 0x3, 0x1, 0x9, 0x1, 0x3, 0x1, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x2, 0xa, 0x1, 0x3, 0x1, 0x3, 0x2, 0x1, 0xf, 0x4, 0x2, 0xc]);
immutable unicodeInBasic_Latin = RleBitSet!ubyte.fromRawArray([0x0, 0x80]);
immutable unicodeLl = RleBitSet!ubyte.fromRawArray([0x61, 0x1a, 0x3a, 0x1, 0x29, 0x18, 0x1, 0x8, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x3, 0x2, 0x1, 0x1, 0x1, 0x2, 0x1, 0x3, 0x2, 0x4, 0x1, 0x2, 0x1, 0x3, 0x3, 0x2, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x3, 0x1, 0x1, 0x1, 0x2, 0x2, 0x2, 0x3, 0x6, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x1, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x7, 0x2, 0x1, 0x2, 0x2, 0x1, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x45, 0x1, 0x1b, 0xc1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x3, 0x3, 0x12, 0x1, 0x1b, 0x23, 0x1, 0x2, 0x3, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x5, 0x1, 0x1, 0x2, 0x1, 0x2, 0x2, 0x33, 0x30, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x9, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x39, 0x27, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x8f, 0x2c, 0x3f, 0xd, 0x1, 0x22, 0x66, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x9, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x9, 0x8, 0x6, 0xa, 0x8, 0x8, 0x8, 0x8, 0x6, 0xa, 0x8, 0x8, 0x8, 0x8, 0xe, 0x2, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8, 0x5, 0x1, 0x2, 0x6, 0x1, 0x3, 0x3, 0x1, 0x2, 0x8, 0x4, 0x2, 0x2, 0x8, 0x8, 0xa, 0x3, 0x1, 0x2, 0xff, 0x0, 0x13, 0x1, 0x3, 0x2, 0x3, 0x1, 0x1b, 0x1, 0x4, 0x1, 0x4, 0x1, 0x2, 0x2, 0x8, 0x4, 0x4, 0x1, 0x35, 0x1, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xb5, 0x2f, 0x2, 0x1, 0x3, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x1, 0x1, 0x2, 0x1, 0x6, 0x5, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x1, 0xc, 0x26, 0x1, 0x1, 0x5, 0x1, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x8c, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x13, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x8b, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x8, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0xd, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x50, 0x1, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x58, 0x7, 0xc, 0x5, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x2d, 0x1a, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xd1, 0x28, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x9a, 0x1a, 0x1a, 0x7, 0x1, 0x12, 0x1a, 0x1a, 0x1a, 0x4, 0x1, 0x1, 0x1, 0x7, 0x1, 0xb, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1c, 0x1c, 0x19, 0x1, 0x6, 0x1a, 0x19, 0x1, 0x6, 0x1a, 0x19, 0x1, 0x6, 0x1a, 0x19, 0x1, 0x6, 0x1a, 0x19, 0x1, 0x6, 0x1, 0x1]);
immutable unicodeOriya = RleBitSet!ubyte.fromRawArray([0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xc, 0x3, 0x1, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x2, 0x9, 0x2, 0x2, 0x2, 0x3, 0x8, 0x2, 0x4, 0x2, 0x1, 0x5, 0x2, 0x12]);
immutable unicodeKannada = RleBitSet!ubyte.fromRawArray([0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x8e, 0x2, 0x1, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x2, 0x9, 0x1, 0x3, 0x1, 0x4, 0x7, 0x2, 0x7, 0x1, 0x1, 0x4, 0x2, 0xa, 0x1, 0x2]);
immutable unicodeInLatin_1_Supplement = RleBitSet!ubyte.fromRawArray([0x80, 0x80]);
immutable unicodeTelugu = RleBitSet!ubyte.fromRawArray([0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xd, 0x3, 0x1, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x8, 0x1, 0x3, 0x1, 0x4, 0x7, 0x2, 0x1, 0x2, 0x6, 0x4, 0x2, 0xa, 0x8, 0x8]);
immutable unicodeLao = RleBitSet!ubyte.fromRawArray([0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x8f, 0x2, 0x1, 0x1, 0x2, 0x2, 0x1, 0x1, 0x2, 0x1, 0x6, 0x4, 0x1, 0x7, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x1, 0xd, 0x1, 0x3, 0x2, 0x5, 0x1, 0x1, 0x1, 0x6, 0x2, 0xa, 0x2, 0x4]);
immutable unicodeBengali = RleBitSet!ubyte.fromRawArray([0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x8a, 0x3, 0x1, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x1, 0x3, 0x4, 0x2, 0x9, 0x2, 0x2, 0x2, 0x4, 0x8, 0x1, 0x4, 0x2, 0x1, 0x5, 0x2, 0x16]);
immutable unicodeLV = RleBitSet!ubyte.fromRawArray([0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xac, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1]);
immutable unicodeLu = RleBitSet!ubyte.fromRawArray([0x41, 0x1a, 0x65, 0x17, 0x1, 0x7, 0x21, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x3, 0x2, 0x1, 0x1, 0x1, 0x2, 0x1, 0x3, 0x2, 0x4, 0x1, 0x2, 0x1, 0x3, 0x3, 0x2, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x3, 0x1, 0x1, 0x1, 0x2, 0x3, 0x1, 0x7, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x7, 0x2, 0x1, 0x2, 0x2, 0x1, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0xff, 0x0, 0x22, 0x1, 0x1, 0x1, 0x3, 0x1, 0xf, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x2, 0x1, 0x11, 0x1, 0x9, 0x23, 0x1, 0x2, 0x3, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x5, 0x1, 0x2, 0x1, 0x1, 0x2, 0x2, 0x33, 0x30, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x9, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0xa, 0x26, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x54, 0x26, 0x1, 0x1, 0x5, 0x1, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x3f, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x9, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x9, 0x8, 0x8, 0x6, 0xa, 0x8, 0x8, 0x8, 0x8, 0x6, 0xb, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x8, 0x8, 0x48, 0x4, 0xc, 0x4, 0xc, 0x4, 0xc, 0x5, 0xb, 0x4, 0xff, 0x0, 0x7, 0x1, 0x4, 0x1, 0x3, 0x3, 0x2, 0x3, 0x2, 0x1, 0x3, 0x5, 0x6, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x2, 0x4, 0xa, 0x2, 0x5, 0x1, 0x3d, 0x1, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x86, 0x2f, 0x31, 0x1, 0x1, 0x3, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x1, 0x1, 0x2, 0x1, 0x8, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x8, 0x1, 0x1, 0x1, 0x4, 0x1, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xc6, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x13, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x8b, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0xa, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0xd, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xcd, 0x1a, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xc9, 0x28, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xa8, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0x8, 0x1a, 0x1a, 0x1a, 0x2, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1b, 0x2, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1b, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1e, 0x19, 0x21, 0x19, 0x21, 0x19, 0x21, 0x19, 0x21, 0x19, 0x21, 0x1]);
immutable unicodeLVT = RleBitSet!ubyte.fromRawArray([0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xad, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b, 0x1, 0x1b]);
immutable unicodeLowercase = RleBitSet!ubyte.fromRawArray([0x61, 0x1a, 0x2f, 0x1, 0xa, 0x1, 0x4, 0x1, 0x24, 0x18, 0x1, 0x8, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x3, 0x2, 0x1, 0x1, 0x1, 0x2, 0x1, 0x3, 0x2, 0x4, 0x1, 0x2, 0x1, 0x3, 0x3, 0x2, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x3, 0x1, 0x1, 0x1, 0x2, 0x2, 0x2, 0x3, 0x6, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x1, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x7, 0x2, 0x1, 0x2, 0x2, 0x1, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x45, 0x1, 0x24, 0x7, 0x2, 0x1e, 0x5, 0x60, 0x1, 0x2b, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x4, 0x12, 0x1, 0x1b, 0x23, 0x1, 0x2, 0x3, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x5, 0x1, 0x1, 0x2, 0x1, 0x2, 0x2, 0x33, 0x30, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x9, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x39, 0x27, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x8f, 0xc0, 0x41, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x9, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x9, 0x8, 0x6, 0xa, 0x8, 0x8, 0x8, 0x8, 0x6, 0xa, 0x8, 0x8, 0x8, 0x8, 0xe, 0x2, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8, 0x5, 0x1, 0x2, 0x6, 0x1, 0x3, 0x3, 0x1, 0x2, 0x8, 0x4, 0x2, 0x2, 0x8, 0x8, 0xa, 0x3, 0x1, 0x2, 0x79, 0x1, 0xd, 0x1, 0x10, 0xd, 0x6d, 0x1, 0x3, 0x2, 0x3, 0x1, 0x1b, 0x1, 0x4, 0x1, 0x4, 0x1, 0x2, 0x2, 0x8, 0x4, 0x4, 0x1, 0x21, 0x10, 0x4, 0x1, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x4e, 0x1a, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x4d, 0x2f, 0x2, 0x1, 0x3, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x1, 0x1, 0x2, 0x1, 0x8, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x1, 0xc, 0x26, 0x1, 0x1, 0x5, 0x1, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x8c, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x13, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x8b, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0xa, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0xd, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4e, 0x3, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x58, 0x7, 0xc, 0x5, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x2d, 0x1a, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xd1, 0x28, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x9a, 0x1a, 0x1a, 0x7, 0x1, 0x12, 0x1a, 0x1a, 0x1a, 0x4, 0x1, 0x1, 0x1, 0x7, 0x1, 0xb, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1c, 0x1c, 0x19, 0x1, 0x6, 0x1a, 0x19, 0x1, 0x6, 0x1a, 0x19, 0x1, 0x6, 0x1a, 0x19, 0x1, 0x6, 0x1a, 0x19, 0x1, 0x6, 0x1, 0x1]);
immutable unicodeUppercase = RleBitSet!ubyte.fromRawArray([0x41, 0x1a, 0x65, 0x17, 0x1, 0x7, 0x21, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x3, 0x2, 0x1, 0x1, 0x1, 0x2, 0x1, 0x3, 0x2, 0x4, 0x1, 0x2, 0x1, 0x3, 0x3, 0x2, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x3, 0x1, 0x1, 0x1, 0x2, 0x3, 0x1, 0x7, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x7, 0x2, 0x1, 0x2, 0x2, 0x1, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0xff, 0x0, 0x22, 0x1, 0x1, 0x1, 0x3, 0x1, 0xf, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x2, 0x1, 0x11, 0x1, 0x9, 0x23, 0x1, 0x2, 0x3, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x5, 0x1, 0x2, 0x1, 0x1, 0x2, 0x2, 0x33, 0x30, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x9, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0xa, 0x26, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x54, 0x26, 0x1, 0x1, 0x5, 0x1, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x3f, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x9, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x9, 0x8, 0x8, 0x6, 0xa, 0x8, 0x8, 0x8, 0x8, 0x6, 0xb, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x8, 0x8, 0x48, 0x4, 0xc, 0x4, 0xc, 0x4, 0xc, 0x5, 0xb, 0x4, 0xff, 0x0, 0x7, 0x1, 0x4, 0x1, 0x3, 0x3, 0x2, 0x3, 0x2, 0x1, 0x3, 0x5, 0x6, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x2, 0x4, 0xa, 0x2, 0x5, 0x1, 0x1a, 0x10, 0x13, 0x1, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x35, 0x1a, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0x37, 0x2f, 0x31, 0x1, 0x1, 0x3, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x1, 0x1, 0x2, 0x1, 0x8, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x8, 0x1, 0x1, 0x1, 0x4, 0x1, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xc6, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x13, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x8b, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0xa, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0xd, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xcd, 0x1a, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xc9, 0x28, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xa8, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0x8, 0x1a, 0x1a, 0x1a, 0x2, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1b, 0x2, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1b, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1e, 0x19, 0x21, 0x19, 0x21, 0x19, 0x21, 0x19, 0x21, 0x19, 0x21, 0x1]);
immutable unicodeGurmukhi = RleBitSet!ubyte.fromRawArray([0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xb, 0x3, 0x1, 0x6, 0x4, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x2, 0x1, 0x1, 0x5, 0x4, 0x2, 0x2, 0x3, 0x3, 0x1, 0x7, 0x4, 0x1, 0x1, 0x7, 0x10]);
immutable unicodeCc = RleBitSet!ubyte.fromRawArray([0x0, 0x20, 0x5f, 0x21]);
immutable unicodeInCombining_Diacritical_Marks_Supplement = RleBitSet!ushort.fromRawArray([0x1dc0, 0x40]);
immutable unicodeInCJK_Radicals_Supplement = RleBitSet!ushort.fromRawArray([0x2e80, 0x80]);
immutable unicodeInEthiopic_Supplement = RleBitSet!ushort.fromRawArray([0x1380, 0x20]);
immutable unicodeInPhags_pa = RleBitSet!ushort.fromRawArray([0xa840, 0x40]);
immutable unicodeInSyriac = RleBitSet!ushort.fromRawArray([0x700, 0x50]);
immutable unicodeOther_ID_Start = RleBitSet!ushort.fromRawArray([0x2118, 0x1, 0x15, 0x1, 0xf6c, 0x2]);
immutable unicodeInGujarati = RleBitSet!ushort.fromRawArray([0xa80, 0x80]);
immutable unicodeInHangul_Jamo = RleBitSet!ushort.fromRawArray([0x1100, 0x100]);
immutable unicodeRunic = RleBitSet!ushort.fromRawArray([0x16a0, 0x4b, 0x3, 0x3]);
immutable unicodeInKayah_Li = RleBitSet!ushort.fromRawArray([0xa900, 0x30]);
immutable unicodeIDS_Binary_Operator = RleBitSet!ushort.fromRawArray([0x2ff0, 0x2, 0x2, 0x8]);
immutable unicodeTai_Tham = RleBitSet!ushort.fromRawArray([0x1a20, 0x3f, 0x1, 0x1d, 0x2, 0xb, 0x6, 0xa, 0x6, 0xe]);
immutable unicodeLinear_B = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x1, 0xc, 0x1, 0x1a, 0x1, 0x13, 0x1, 0x2, 0x1, 0xf, 0x2, 0xe, 0x22, 0x7b]);
immutable unicodeInSupplemental_Arrows_A = RleBitSet!ushort.fromRawArray([0x27f0, 0x10]);
immutable unicodeArmenian = RleBitSet!ushort.fromRawArray([0x531, 0x26, 0x2, 0x7, 0x1, 0x27, 0x2, 0x1, 0x4, 0x1, 0xf583, 0x5]);
immutable unicodeInBlock_Elements = RleBitSet!ushort.fromRawArray([0x2580, 0x20]);
immutable unicodeInBalinese = RleBitSet!ushort.fromRawArray([0x1b00, 0x80]);
immutable unicodeInSupplemental_Arrows_B = RleBitSet!ushort.fromRawArray([0x2900, 0x80]);
immutable unicodeCyrillic = RleBitSet!ushort.fromRawArray([0x400, 0x85, 0x2, 0xa1, 0x1803, 0x1, 0x4c, 0x1, 0x1067, 0x20, 0x7840, 0x58, 0x7, 0x1]);
immutable unicodeWhite_Space = RleBitSet!ushort.fromRawArray([0x9, 0x5, 0x12, 0x1, 0x64, 0x1, 0x1a, 0x1, 0x15df, 0x1, 0x18d, 0x1, 0x7f1, 0xb, 0x1d, 0x2, 0x5, 0x1, 0x2f, 0x1, 0xfa0, 0x1]);
immutable unicodeBatak = RleBitSet!ushort.fromRawArray([0x1bc0, 0x34, 0x8, 0x4]);
immutable unicodeCherokee = RleBitSet!ushort.fromRawArray([0x13a0, 0x55]);
immutable unicodeInUnified_Canadian_Aboriginal_Syllabics_Extended = RleBitSet!ushort.fromRawArray([0x18b0, 0x50]);
immutable unicodeHiragana = RleBitSet!ushort.fromRawArray([0x3041, 0x56, 0x6, 0x3, 0xffff, 0x0, 0x7f62, 0x1, 0x41fe, 0x1]);
immutable unicodeGrapheme_Extend = RleBitSet!ushort.fromRawArray([0x300, 0x70, 0x113, 0x7, 0x107, 0x2d, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x48, 0xb, 0x30, 0x15, 0x10, 0x1, 0x65, 0x7, 0x2, 0x6, 0x2, 0x2, 0x1, 0x4, 0x23, 0x1, 0x1e, 0x1b, 0x5b, 0xb, 0x3a, 0x9, 0x22, 0x4, 0x1, 0x9, 0x1, 0x3, 0x1, 0x5, 0x2b, 0x3, 0x88, 0x1b, 0x1, 0x3, 0x37, 0x1, 0x1, 0x1, 0x4, 0x8, 0x4, 0x1, 0x3, 0x7, 0xa, 0x2, 0x1d, 0x1, 0x3a, 0x1, 0x1, 0x1, 0x2, 0x4, 0x8, 0x1, 0x9, 0x1, 0xa, 0x2, 0x1d, 0x2, 0x39, 0x1, 0x4, 0x2, 0x4, 0x2, 0x2, 0x3, 0x3, 0x1, 0x1e, 0x2, 0x3, 0x1, 0xb, 0x2, 0x39, 0x1, 0x4, 0x5, 0x1, 0x2, 0x4, 0x1, 0x14, 0x2, 0x1d, 0x1, 0x3a, 0x1, 0x1, 0x2, 0x1, 0x4, 0x8, 0x1, 0x8, 0x2, 0xa, 0x2, 0x1e, 0x1, 0x3b, 0x1, 0x1, 0x1, 0xc, 0x1, 0x9, 0x1, 0x66, 0x3, 0x5, 0x3, 0x1, 0x4, 0x7, 0x2, 0xb, 0x2, 0x58, 0x1, 0x2, 0x1, 0x2, 0x1, 0x3, 0x1, 0x5, 0x2, 0x7, 0x2, 0xb, 0x2, 0x5a, 0x1, 0x2, 0x4, 0x8, 0x1, 0x9, 0x1, 0xa, 0x2, 0x66, 0x1, 0x4, 0x1, 0x2, 0x3, 0x1, 0x1, 0x8, 0x1, 0x51, 0x1, 0x2, 0x7, 0xc, 0x8, 0x62, 0x1, 0x2, 0x6, 0x1, 0x2, 0xb, 0x6, 0x4a, 0x2, 0x1b, 0x1, 0x1, 0x1, 0x1, 0x1, 0x37, 0xe, 0x1, 0x5, 0x1, 0x2, 0x5, 0xb, 0x1, 0x24, 0x9, 0x1, 0x66, 0x4, 0x1, 0x6, 0x1, 0x2, 0x2, 0x2, 0x19, 0x2, 0x4, 0x3, 0x10, 0x4, 0xd, 0x1, 0x2, 0x2, 0x6, 0x1, 0xf, 0x1, 0x2bf, 0x3, 0x3b2, 0x3, 0x1d, 0x3, 0x1d, 0x2, 0x1e, 0x2, 0x40, 0x2, 0x1, 0x7, 0x8, 0x1, 0x2, 0xb, 0x9, 0x1, 0x2d, 0x3, 0x9b, 0x1, 0x76, 0x3, 0x4, 0x2, 0x9, 0x1, 0x6, 0x3, 0xdb, 0x2, 0x3d, 0x1, 0x1, 0x7, 0x1, 0x1, 0x1, 0x1, 0x2, 0x8, 0x6, 0xa, 0x2, 0x1, 0x80, 0x4, 0x30, 0x1, 0x1, 0x5, 0x1, 0x1, 0x5, 0x1, 0x28, 0x9, 0xc, 0x2, 0x20, 0x4, 0x2, 0x2, 0x1, 0x1, 0x3a, 0x1, 0x1, 0x2, 0x3, 0x1, 0x1, 0x3, 0x3a, 0x8, 0x2, 0x2, 0x98, 0x3, 0x1, 0xd, 0x1, 0x7, 0x4, 0x1, 0x6, 0x1, 0xcb, 0x27, 0x15, 0x4, 0x20c, 0x2, 0xc2, 0x21, 0xbfe, 0x3, 0x8d, 0x1, 0x60, 0x20, 0x22a, 0x6, 0x69, 0x2, 0x75d4, 0x4, 0x1, 0xa, 0x21, 0x1, 0x50, 0x2, 0x110, 0x1, 0x3, 0x1, 0x4, 0x1, 0x19, 0x2, 0x9d, 0x1, 0x1b, 0x12, 0x34, 0x8, 0x19, 0xb, 0x2e, 0x3, 0x30, 0x1, 0x2, 0x4, 0x2, 0x1, 0x6c, 0x6, 0x2, 0x2, 0x2, 0x2, 0xc, 0x1, 0x8, 0x1, 0x63, 0x1, 0x1, 0x3, 0x2, 0x2, 0x5, 0x2, 0x1, 0x1, 0x2a, 0x2, 0x8, 0x1, 0xee, 0x1, 0x2, 0x1, 0x4, 0x1, 0x4f30, 0x1, 0x2e1, 0x10, 0x10, 0x7, 0x177, 0x2, 0x25d, 0x1, 0x803, 0x3, 0x1, 0x2, 0x5, 0x4, 0x28, 0x3, 0x4, 0x1, 0x5c1, 0x1, 0x36, 0xf, 0x39, 0x2, 0x31, 0x4, 0x2, 0x2, 0x45, 0x3, 0x24, 0x5, 0x1, 0x8, 0x4b, 0x2, 0x34, 0x9, 0x4ec, 0x1, 0x1, 0x1, 0x2, 0x6, 0x1, 0x1, 0x58d7, 0x4, 0x61d2, 0x1, 0x1, 0x3, 0x4, 0x5, 0x8, 0x8, 0x2, 0x7, 0x1e, 0x4, 0x94, 0x3, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0x2ec7, 0xf0]);
immutable unicodeInCJK_Compatibility_Ideographs = RleBitSet!ushort.fromRawArray([0xf900, 0x200]);
immutable unicodePattern_Syntax = RleBitSet!ushort.fromRawArray([0x21, 0xf, 0xa, 0x7, 0x1a, 0x4, 0x1, 0x1, 0x1a, 0x4, 0x22, 0x7, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x2, 0x4, 0x1, 0x4, 0x1, 0x3, 0x1, 0x17, 0x1, 0x1f, 0x1, 0x1f18, 0x18, 0x8, 0xf, 0x2, 0x13, 0x1, 0xa, 0x131, 0x2d0, 0xa0, 0x276, 0x1e, 0x46c, 0x200, 0x80, 0x181, 0x3, 0x4, 0x19, 0xf, 0x1, 0xcd0d, 0x2, 0x105, 0x2]);
immutable unicodeNew_Tai_Lue = RleBitSet!ushort.fromRawArray([0x1980, 0x2c, 0x4, 0x1a, 0x6, 0xb, 0x3, 0x2]);
immutable unicodeArabic = RleBitSet!ushort.fromRawArray([0x600, 0x5, 0x1, 0x6, 0x1, 0xe, 0x3, 0x1, 0x1, 0x20, 0x1, 0xa, 0xb, 0x9, 0xb, 0x6, 0x1, 0x6c, 0x1, 0x22, 0x50, 0x30, 0x120, 0x1, 0x1, 0xb, 0x37, 0x1b, 0xf251, 0x72, 0x11, 0x16b, 0x12, 0x40, 0x2, 0x36, 0x28, 0xd, 0x73, 0x5, 0x1, 0x87, 0xf63, 0x1f, 0xdf81, 0x4, 0x1, 0x1b, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0xa, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x6, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x4, 0x1, 0x7, 0x1, 0x4, 0x1, 0x4, 0x1, 0x1, 0x1, 0xa, 0x1, 0x11, 0x5, 0x3, 0x1, 0x5, 0x1, 0x11, 0x34, 0x2]);
immutable unicodeBrahmi = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x1001, 0x4e, 0x4, 0x1e]);
immutable unicodeInControl_Pictures = RleBitSet!ushort.fromRawArray([0x2400, 0x40]);
immutable unicodeOther_ID_Continue = RleBitSet!ushort.fromRawArray([0xb7, 0x1, 0x2cf, 0x1, 0xfe1, 0x9, 0x668, 0x1]);
immutable unicodeInOl_Chiki = RleBitSet!ushort.fromRawArray([0x1c50, 0x30]);
immutable unicodeInArmenian = RleBitSet!ushort.fromRawArray([0x530, 0x60]);
immutable unicodeInCyrillic = RleBitSet!ushort.fromRawArray([0x400, 0x100]);
immutable unicodeInHigh_Private_Use_Surrogates = RleBitSet!ushort.fromRawArray([0xdb80, 0x80]);
immutable unicodeInNew_Tai_Lue = RleBitSet!ushort.fromRawArray([0x1980, 0x60]);
immutable unicodeInHigh_Surrogates = RleBitSet!ushort.fromRawArray([0xd800, 0x380]);
immutable unicodeQuotation_Mark = RleBitSet!ushort.fromRawArray([0x22, 0x1, 0x4, 0x1, 0x83, 0x1, 0xf, 0x1, 0x1f5c, 0x8, 0x19, 0x2, 0xfd1, 0x4, 0xd, 0x3, 0xce21, 0x4, 0xbd, 0x1, 0x4, 0x1, 0x5a, 0x2]);
immutable unicodeTai_Le = RleBitSet!ushort.fromRawArray([0x1950, 0x1e, 0x2, 0x5]);
immutable unicodeMiao = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x6f01, 0x45, 0xb, 0x2f, 0x10, 0x11]);
immutable unicodeInCherokee = RleBitSet!ushort.fromRawArray([0x13a0, 0x60]);
immutable unicodeCoptic = RleBitSet!ushort.fromRawArray([0x3e2, 0xe, 0x2890, 0x74, 0x5, 0x7]);
immutable unicodeInCyrillic_Supplement = RleBitSet!ushort.fromRawArray([0x500, 0x30]);
immutable unicodeCf = RleBitSet!ushort.fromRawArray([0xad, 0x1, 0x552, 0x5, 0xd8, 0x1, 0x31, 0x1, 0x18fb, 0x5, 0x1a, 0x5, 0x31, 0x5, 0x5, 0x6, 0xde8f, 0x1, 0xf9, 0x3, 0x10c1, 0x1, 0xc0b5, 0x8, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0x2e92, 0x1, 0x1e, 0x60]);
immutable unicodeInHiragana = RleBitSet!ushort.fromRawArray([0x3040, 0x60]);
immutable unicodeInIPA_Extensions = RleBitSet!ushort.fromRawArray([0x250, 0x60]);
immutable unicodeOgham = RleBitSet!ushort.fromRawArray([0x1680, 0x1d]);
immutable unicodeInCJK_Compatibility_Forms = RleBitSet!ushort.fromRawArray([0xfe30, 0x20]);
immutable unicodeCn = RleBitSet!ushort.fromRawArray([0x378, 0x2, 0x5, 0x5, 0x7, 0x1, 0x1, 0x1, 0x14, 0x1, 0x185, 0x9, 0x26, 0x2, 0x7, 0x1, 0x27, 0x1, 0x2, 0x4, 0x1, 0x1, 0x37, 0x8, 0x1b, 0x5, 0x5, 0xb, 0x5, 0x1, 0x16, 0x2, 0xf0, 0x1, 0x3c, 0x2, 0x65, 0xe, 0x3b, 0x5, 0x2e, 0x2, 0xf, 0x1, 0x1c, 0x2, 0x1, 0x41, 0x1, 0x1, 0xb, 0x37, 0x1b, 0x1, 0x78, 0x1, 0x7, 0x1, 0x3, 0x1, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x1, 0x3, 0x4, 0x2, 0x9, 0x2, 0x2, 0x2, 0x4, 0x8, 0x1, 0x4, 0x2, 0x1, 0x5, 0x2, 0x16, 0x5, 0x3, 0x1, 0x6, 0x4, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x2, 0x1, 0x1, 0x5, 0x4, 0x2, 0x2, 0x3, 0x3, 0x1, 0x7, 0x4, 0x1, 0x1, 0x7, 0x10, 0xb, 0x3, 0x1, 0x9, 0x1, 0x3, 0x1, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x2, 0xa, 0x1, 0x3, 0x1, 0x3, 0x2, 0x1, 0xf, 0x4, 0x2, 0xc, 0xf, 0x3, 0x1, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x2, 0x9, 0x2, 0x2, 0x2, 0x3, 0x8, 0x2, 0x4, 0x2, 0x1, 0x5, 0x2, 0x12, 0xa, 0x2, 0x1, 0x6, 0x3, 0x3, 0x1, 0x4, 0x3, 0x2, 0x1, 0x1, 0x1, 0x2, 0x3, 0x2, 0x3, 0x3, 0x3, 0xc, 0x4, 0x5, 0x3, 0x3, 0x1, 0x4, 0x2, 0x1, 0x6, 0x1, 0xe, 0x15, 0x6, 0x3, 0x1, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x8, 0x1, 0x3, 0x1, 0x4, 0x7, 0x2, 0x1, 0x2, 0x6, 0x4, 0x2, 0xa, 0x8, 0x8, 0x2, 0x2, 0x1, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x2, 0x9, 0x1, 0x3, 0x1, 0x4, 0x7, 0x2, 0x7, 0x1, 0x1, 0x4, 0x2, 0xa, 0x1, 0x2, 0xf, 0x2, 0x1, 0x8, 0x1, 0x3, 0x1, 0x29, 0x2, 0x8, 0x1, 0x3, 0x1, 0x5, 0x8, 0x1, 0x8, 0x4, 0x2, 0x10, 0x3, 0x7, 0x2, 0x2, 0x1, 0x12, 0x3, 0x18, 0x1, 0x9, 0x1, 0x1, 0x2, 0x7, 0x3, 0x1, 0x4, 0x6, 0x1, 0x1, 0x1, 0x8, 0x12, 0x3, 0xc, 0x3a, 0x4, 0x1d, 0x25, 0x2, 0x1, 0x1, 0x2, 0x2, 0x1, 0x1, 0x2, 0x1, 0x6, 0x4, 0x1, 0x7, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x1, 0xd, 0x1, 0x3, 0x2, 0x5, 0x1, 0x1, 0x1, 0x6, 0x2, 0xa, 0x2, 0x4, 0x20, 0x48, 0x1, 0x24, 0x4, 0x27, 0x1, 0x24, 0x1, 0xf, 0x1, 0xd, 0x25, 0xc6, 0x1, 0x1, 0x5, 0x1, 0x2, 0x179, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0x29, 0x1, 0x4, 0x2, 0x21, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0xf, 0x1, 0x39, 0x1, 0x4, 0x2, 0x43, 0x2, 0x20, 0x3, 0x1a, 0x6, 0x55, 0xb, 0x29d, 0x3, 0x51, 0xf, 0xd, 0x1, 0x7, 0xb, 0x17, 0x9, 0x14, 0xc, 0xd, 0x1, 0x3, 0x1, 0x2, 0xc, 0x5e, 0x2, 0xa, 0x6, 0xa, 0x6, 0xf, 0x1, 0xa, 0x6, 0x58, 0x8, 0x2b, 0x5, 0x46, 0xa, 0x1d, 0x3, 0xc, 0x4, 0xc, 0x4, 0x1, 0x3, 0x2a, 0x2, 0x5, 0xb, 0x2c, 0x4, 0x1a, 0x6, 0xb, 0x3, 0x3e, 0x2, 0x41, 0x1, 0x1d, 0x2, 0xb, 0x6, 0xa, 0x6, 0xe, 0x52, 0x4c, 0x4, 0x2d, 0x3, 0x74, 0x8, 0x3c, 0x3, 0xf, 0x3, 0x33, 0x40, 0x8, 0x8, 0x27, 0x9, 0xe7, 0x15, 0x11a, 0x2, 0x6, 0x2, 0x26, 0x2, 0x6, 0x2, 0x8, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1f, 0x2, 0x35, 0x1, 0xf, 0x1, 0xe, 0x2, 0x6, 0x1, 0x13, 0x2, 0x3, 0x1, 0x9, 0x1, 0x65, 0x5, 0x8, 0x2, 0x1b, 0x1, 0xd, 0x3, 0x1b, 0x15, 0x21, 0xf, 0x8a, 0x6, 0x264, 0xc, 0x27, 0x19, 0xb, 0x15, 0x2a0, 0x1, 0x44c, 0x3, 0xa, 0xa6, 0x2f, 0x1, 0x2f, 0x1, 0x94, 0x5, 0x2d, 0x1, 0x1, 0x5, 0x1, 0x2, 0x38, 0x7, 0x2, 0xe, 0x18, 0x9, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x5c, 0x44, 0x1a, 0x1, 0x59, 0xc, 0xd6, 0x1a, 0xc, 0x4, 0x40, 0x1, 0x56, 0x2, 0x67, 0x5, 0x29, 0x3, 0x5e, 0x1, 0x2b, 0x5, 0x24, 0xc, 0x2f, 0x1, 0xdf, 0x1, 0x1ab6, 0xa, 0x520d, 0x33, 0x48d, 0x3, 0x37, 0x9, 0x15c, 0x14, 0x58, 0x7, 0x59, 0x8, 0x8f, 0x1, 0x4, 0xc, 0xb, 0x4d, 0x34, 0x4, 0xa, 0x6, 0x38, 0x8, 0x45, 0x9, 0xc, 0x6, 0x1c, 0x4, 0x54, 0xb, 0x1e, 0x3, 0x4e, 0x1, 0xb, 0x4, 0x2, 0x20, 0x37, 0x9, 0xe, 0x2, 0xa, 0x2, 0x20, 0x4, 0x43, 0x18, 0x1c, 0xa, 0x6, 0x2, 0x6, 0x2, 0x6, 0x9, 0x7, 0x1, 0x7, 0x91, 0x2e, 0x2, 0xa, 0x6, 0x2ba4, 0xc, 0x17, 0x4, 0x31, 0x4, 0x226e, 0x2, 0x6a, 0x26, 0x7, 0xc, 0x5, 0x5, 0x1a, 0x1, 0x5, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x7c, 0x11, 0x16d, 0x10, 0x40, 0x2, 0x36, 0x28, 0xe, 0x2, 0x1a, 0x6, 0x7, 0x9, 0x23, 0x1, 0x13, 0x1, 0x4, 0x4, 0x5, 0x1, 0x87, 0x2, 0x1, 0x1, 0xbe, 0x3, 0x6, 0x2, 0x6, 0x2, 0x6, 0x2, 0x3, 0x3, 0x7, 0x1, 0x7, 0xa, 0x5, 0x2, 0xc, 0x1, 0x1a, 0x1, 0x13, 0x1, 0x2, 0x1, 0xf, 0x2, 0xe, 0x22, 0x7b, 0x5, 0x3, 0x4, 0x2d, 0x3, 0x54, 0x5, 0xc, 0x34, 0x2e, 0x82, 0x1d, 0x3, 0x31, 0x2f, 0x1f, 0x1, 0x4, 0xc, 0x1b, 0x35, 0x1e, 0x1, 0x25, 0x4, 0xe, 0x2a, 0x9e, 0x2, 0xa, 0x356, 0x6, 0x2, 0x1, 0x1, 0x2c, 0x1, 0x2, 0x3, 0x1, 0x2, 0x17, 0x1, 0x9, 0xa0, 0x1c, 0x3, 0x1b, 0x5, 0x1, 0x40, 0x38, 0x6, 0x2, 0x40, 0x4, 0x1, 0x2, 0x5, 0x8, 0x1, 0x3, 0x1, 0x1b, 0x4, 0x3, 0x4, 0x9, 0x8, 0x9, 0x7, 0x20, 0x80, 0x36, 0x3, 0x1d, 0x2, 0x1b, 0x5, 0x8, 0x80, 0x49, 0x217, 0x1f, 0x181, 0x4e, 0x4, 0x1e, 0x10, 0x42, 0xe, 0x19, 0x7, 0xa, 0x6, 0x35, 0x1, 0xe, 0x3c, 0x49, 0x7, 0xa, 0x4a6, 0x38, 0x8, 0xa, 0x936, 0x36f, 0x91, 0x63, 0xd, 0x4, 0xb8c, 0x42f, 0x33d1, 0x239, 0x4c7, 0x45, 0xb, 0x2f, 0x10, 0x11, 0x4060, 0x2, 0x1ffe, 0xf6, 0xa, 0x27, 0x2, 0xb5, 0x22, 0x46, 0xba, 0x57, 0x9, 0x12, 0x8e, 0x55, 0x1, 0x47, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0xc, 0x1, 0x1, 0x1, 0x7, 0x1, 0x41, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1, 0x1c, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1, 0x154, 0x2, 0x124, 0x2, 0x32, 0x1600, 0x4, 0x1, 0x1b, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0xa, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x6, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x4, 0x1, 0x7, 0x1, 0x4, 0x1, 0x4, 0x1, 0x1, 0x1, 0xa, 0x1, 0x11, 0x5, 0x3, 0x1, 0x5, 0x1, 0x11, 0x34, 0x2, 0x10e, 0x2c, 0x4, 0x64, 0xc, 0xf, 0x2, 0xe, 0x2, 0xf, 0x1, 0xf, 0x20, 0xb, 0x5, 0x1f, 0x1, 0x3c, 0x4, 0x2b, 0x4b, 0x1d, 0xd, 0x2b, 0x5, 0x9, 0x7, 0x2, 0xae, 0x21, 0xf, 0x6, 0x1, 0x46, 0x3, 0x14, 0xc, 0x25, 0x1, 0x5, 0x15, 0x11, 0xf, 0x3f, 0x1, 0x1, 0x1, 0xb6, 0x1, 0x4, 0x3, 0x3e, 0x2, 0x4, 0xc, 0x18, 0x93, 0x46, 0x4, 0xb, 0x30, 0x46, 0x3a, 0x74, 0x88c, 0xa6d7, 0x29, 0x1035, 0xb, 0xde, 0x3fe2, 0x21e, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0x5ee, 0x1, 0x1e, 0x60, 0x80, 0xf0, 0xfe10, 0xfffe, 0x2, 0xfffe, 0x2]);
immutable unicodeMath = RleBitSet!ushort.fromRawArray([0x2b, 0x1, 0x10, 0x3, 0x1f, 0x1, 0x1d, 0x1, 0x1, 0x1, 0x2d, 0x1, 0x4, 0x1, 0x25, 0x1, 0x1f, 0x1, 0x2d8, 0x3, 0x2, 0x1, 0x1a, 0x2, 0x2, 0x3, 0x20f, 0x3, 0x1a0d, 0x1, 0x1b, 0x3, 0xb, 0x1, 0x3, 0x1, 0xd, 0x1, 0xe, 0x4, 0x15, 0x5, 0xb, 0x5, 0x41, 0xd, 0x4, 0x1, 0x3, 0x2, 0x4, 0x5, 0x12, 0x1, 0x4, 0x1, 0x2, 0xa, 0x1, 0x1, 0x2, 0x6, 0x6, 0x1, 0x3, 0x2, 0x2, 0x2, 0x1, 0x3, 0x1, 0x6, 0x3, 0xe, 0x1, 0x1, 0x44, 0x18, 0x1, 0x6, 0x1, 0x2, 0x4, 0x2, 0x4, 0x20, 0x1, 0x1, 0x6, 0x2, 0xe, 0x10c, 0x8, 0x4, 0x14, 0x2, 0x5a, 0x1, 0x1e, 0x1b, 0x1, 0x1, 0x18, 0x1, 0xb, 0x7, 0x1bd, 0x2, 0xc, 0xa, 0x4, 0x6, 0x4, 0x2, 0x2, 0x2, 0x3, 0x5, 0xe, 0x1, 0x1, 0x1, 0x2, 0x6, 0xb, 0x8, 0x5, 0x2, 0x39, 0x1, 0x1, 0x1, 0x1d, 0x4, 0x9, 0x3, 0x150, 0x40, 0x100, 0x200, 0x30, 0x15, 0x2, 0x6, 0xcfdc, 0x1, 0x337, 0x6, 0x1, 0x1, 0xa2, 0x1, 0x10, 0x3, 0x1d, 0x1, 0x1, 0x1, 0x1d, 0x1, 0x1, 0x1, 0x83, 0x1, 0x6, 0x4, 0xd413, 0x55, 0x1, 0x47, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0xc, 0x1, 0x1, 0x1, 0x7, 0x1, 0x41, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1, 0x1c, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1, 0x154, 0x2, 0x124, 0x2, 0x32, 0x1600, 0x4, 0x1, 0x1b, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0xa, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x6, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x4, 0x1, 0x7, 0x1, 0x4, 0x1, 0x4, 0x1, 0x1, 0x1, 0xa, 0x1, 0x11, 0x5, 0x3, 0x1, 0x5, 0x1, 0x11, 0x34, 0x2]);
immutable unicodeSora_Sompeng = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x10d1, 0x19, 0x7, 0xa]);
immutable unicodeInYi_Syllables = RleBitSet!ushort.fromRawArray([0xa000, 0x490]);
immutable unicodeCs = RleBitSet!ushort.fromRawArray([0xd800, 0x800]);
immutable unicodeInHangul_Jamo_Extended_A = RleBitSet!ushort.fromRawArray([0xa960, 0x20]);
immutable unicodeL = RleBitSet!ushort.fromRawArray([0x1100, 0x60, 0x9800, 0x1d]);
immutable unicodeInGlagolitic = RleBitSet!ushort.fromRawArray([0x2c00, 0x60]);
immutable unicodeInHangul_Jamo_Extended_B = RleBitSet!ushort.fromRawArray([0xd7b0, 0x50]);
immutable unicodeBopomofo = RleBitSet!ushort.fromRawArray([0x2ea, 0x2, 0x2e19, 0x29, 0x72, 0x1b]);
immutable unicodeInSpecials = RleBitSet!ushort.fromRawArray([0xfff0, 0x10]);
immutable unicodeInBamum = RleBitSet!ushort.fromRawArray([0xa6a0, 0x60]);
immutable unicodeInArabic = RleBitSet!ushort.fromRawArray([0x600, 0x100]);
immutable unicodeInMathematical_Operators = RleBitSet!ushort.fromRawArray([0x2200, 0x100]);
immutable unicodeMalayalam = RleBitSet!ushort.fromRawArray([0xd02, 0x2, 0x1, 0x8, 0x1, 0x3, 0x1, 0x29, 0x2, 0x8, 0x1, 0x3, 0x1, 0x5, 0x8, 0x1, 0x8, 0x4, 0x2, 0x10, 0x3, 0x7]);
immutable unicodeInPhonetic_Extensions_Supplement = RleBitSet!ushort.fromRawArray([0x1d80, 0x40]);
immutable unicodeInCJK_Unified_Ideographs_Extension_A = RleBitSet!ushort.fromRawArray([0x3400, 0x19c0]);
immutable unicodeT = RleBitSet!ushort.fromRawArray([0x11a8, 0x58, 0xc5cb, 0x31]);
immutable unicodeInYijing_Hexagram_Symbols = RleBitSet!ushort.fromRawArray([0x4dc0, 0x40]);
immutable unicodeV = RleBitSet!ushort.fromRawArray([0x1160, 0x48, 0xc608, 0x17]);
immutable unicodeInTibetan = RleBitSet!ushort.fromRawArray([0xf00, 0x100]);
immutable unicodeSharada = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x1181, 0x49, 0x7, 0xa]);
immutable unicodeTakri = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x1681, 0x38, 0x8, 0xa]);
immutable unicodeMeroitic_Cursive = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x9a1, 0x18, 0x6, 0x2]);
immutable unicodePattern_White_Space = RleBitSet!ushort.fromRawArray([0x9, 0x5, 0x12, 0x1, 0x64, 0x1, 0x1f88, 0x2, 0x18, 0x2]);
immutable unicodeInYi_Radicals = RleBitSet!ushort.fromRawArray([0xa490, 0x40]);
immutable unicodeInBraille_Patterns = RleBitSet!ushort.fromRawArray([0x2800, 0x100]);
immutable unicodeInscriptional_Pahlavi = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0xb61, 0x13, 0x5, 0x8]);
immutable unicodeInCoptic = RleBitSet!ushort.fromRawArray([0x2c80, 0x80]);
immutable unicodeInDevanagari = RleBitSet!ushort.fromRawArray([0x900, 0x80]);
immutable unicodeSTerm = RleBitSet!ushort.fromRawArray([0x21, 0x1, 0xc, 0x1, 0x10, 0x1, 0x51c, 0x1, 0x1, 0x1, 0x2a, 0x1, 0x95, 0x1, 0xb4, 0x1, 0x2b, 0x3, 0xf6, 0x1, 0x16a, 0x2, 0x6e4, 0x2, 0x316, 0x1, 0x4, 0x2, 0x305, 0x1, 0xc6, 0x2, 0xcc, 0x1, 0x5, 0x1, 0x13a, 0x2, 0x162, 0x4, 0xae, 0x2, 0x2, 0x2, 0xdb, 0x2, 0x41, 0x2, 0x3bc, 0x2, 0x9, 0x3, 0xde4, 0x1, 0x1d3, 0x1, 0x74fc, 0x1, 0x10e, 0x2, 0xe3, 0x1, 0x3, 0x1, 0x17e, 0x2, 0x56, 0x2, 0x5f, 0x1, 0x98, 0x2, 0x93, 0x3, 0x90, 0x2, 0xf9, 0x1, 0x5266, 0x1, 0x3, 0x2, 0xa9, 0x1, 0xc, 0x1, 0x10, 0x1, 0x41, 0x1, 0xaf4, 0x2, 0x5ef, 0x2, 0x75, 0x4, 0x7f, 0x3, 0x81, 0x2]);
immutable unicodeXID_Start = RleBitSet!ushort.fromRawArray([0x41, 0x1a, 0x6, 0x1a, 0x2f, 0x1, 0xa, 0x1, 0x4, 0x1, 0x5, 0x17, 0x1, 0x1f, 0x1, 0x1ca, 0x4, 0xc, 0xe, 0x5, 0x7, 0x1, 0x1, 0x1, 0x81, 0x5, 0x1, 0x2, 0x3, 0x3, 0x8, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x14, 0x1, 0x53, 0x1, 0x8b, 0x8, 0x9e, 0x9, 0x26, 0x2, 0x1, 0x7, 0x27, 0x48, 0x1b, 0x5, 0x3, 0x2d, 0x2b, 0x23, 0x2, 0x1, 0x63, 0x1, 0x1, 0xf, 0x2, 0x7, 0x2, 0xa, 0x3, 0x2, 0x1, 0x10, 0x1, 0x1, 0x1e, 0x1d, 0x59, 0xb, 0x1, 0x18, 0x21, 0x9, 0x2, 0x4, 0x1, 0x5, 0x16, 0x4, 0x1, 0x9, 0x1, 0x3, 0x1, 0x17, 0x19, 0x47, 0x1, 0x1, 0xb, 0x57, 0x36, 0x3, 0x1, 0x12, 0x1, 0x7, 0xa, 0xf, 0x7, 0x1, 0x7, 0x5, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x1, 0x3, 0x4, 0x3, 0x1, 0x10, 0x1, 0xd, 0x2, 0x1, 0x3, 0xe, 0x2, 0x13, 0x6, 0x4, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1f, 0x4, 0x1, 0x1, 0x13, 0x3, 0x10, 0x9, 0x1, 0x3, 0x1, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x3, 0x1, 0x12, 0x1, 0xf, 0x2, 0x23, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x3, 0x1, 0x1e, 0x2, 0x1, 0x3, 0xf, 0x1, 0x11, 0x1, 0x1, 0x6, 0x3, 0x3, 0x1, 0x4, 0x3, 0x2, 0x1, 0x1, 0x1, 0x2, 0x3, 0x2, 0x3, 0x3, 0x3, 0xc, 0x16, 0x1, 0x34, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x1, 0x1a, 0x2, 0x6, 0x2, 0x23, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x1, 0x20, 0x1, 0x1, 0x2, 0xf, 0x2, 0x12, 0x8, 0x1, 0x3, 0x1, 0x29, 0x2, 0x1, 0x10, 0x1, 0x11, 0x2, 0x18, 0x6, 0x5, 0x12, 0x3, 0x18, 0x1, 0x9, 0x1, 0x1, 0x2, 0x7, 0x3a, 0x30, 0x1, 0x1, 0xd, 0x7, 0x3a, 0x2, 0x1, 0x1, 0x2, 0x2, 0x1, 0x1, 0x2, 0x1, 0x6, 0x4, 0x1, 0x7, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x1, 0x4, 0x1, 0x1, 0xa, 0x1, 0x2, 0x5, 0x1, 0x1, 0x15, 0x4, 0x20, 0x1, 0x3f, 0x8, 0x1, 0x24, 0x1b, 0x5, 0x73, 0x2b, 0x14, 0x1, 0x10, 0x6, 0x4, 0x4, 0x3, 0x1, 0x3, 0x2, 0x7, 0x3, 0x4, 0xd, 0xc, 0x1, 0x11, 0x26, 0x1, 0x1, 0x5, 0x1, 0x2, 0x2b, 0x1, 0x14d, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0x29, 0x1, 0x4, 0x2, 0x21, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0xf, 0x1, 0x39, 0x1, 0x4, 0x2, 0x43, 0x25, 0x10, 0x10, 0x55, 0xc, 0x26c, 0x2, 0x11, 0x1, 0x1a, 0x5, 0x4b, 0x3, 0x3, 0xf, 0xd, 0x1, 0x4, 0xe, 0x12, 0xe, 0x12, 0xe, 0xd, 0x1, 0x3, 0xf, 0x34, 0x23, 0x1, 0x4, 0x1, 0x43, 0x58, 0x8, 0x29, 0x1, 0x1, 0x5, 0x46, 0xa, 0x1d, 0x33, 0x1e, 0x2, 0x5, 0xb, 0x2c, 0x15, 0x7, 0x38, 0x17, 0x9, 0x35, 0x52, 0x1, 0x5d, 0x2f, 0x11, 0x7, 0x37, 0x1e, 0xd, 0x2, 0xa, 0x2c, 0x1a, 0x24, 0x29, 0x3, 0xa, 0x24, 0x6b, 0x4, 0x1, 0x4, 0x3, 0x2, 0x9, 0xc0, 0x40, 0x116, 0x2, 0x6, 0x2, 0x26, 0x2, 0x6, 0x2, 0x8, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1f, 0x2, 0x35, 0x1, 0x7, 0x1, 0x1, 0x3, 0x3, 0x1, 0x7, 0x3, 0x4, 0x2, 0x6, 0x4, 0xd, 0x5, 0x3, 0x1, 0x7, 0x74, 0x1, 0xd, 0x1, 0x10, 0xd, 0x65, 0x1, 0x4, 0x1, 0x2, 0xa, 0x1, 0x1, 0x2, 0x6, 0x6, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x10, 0x2, 0x4, 0x5, 0x5, 0x4, 0x1, 0x11, 0x29, 0xa77, 0x2f, 0x1, 0x2f, 0x1, 0x85, 0x6, 0x4, 0x3, 0x2, 0xc, 0x26, 0x1, 0x1, 0x5, 0x1, 0x2, 0x38, 0x7, 0x1, 0x10, 0x17, 0x9, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x226, 0x3, 0x19, 0x9, 0x7, 0x5, 0x2, 0x5, 0x4, 0x56, 0x6, 0x3, 0x1, 0x5a, 0x1, 0x4, 0x5, 0x29, 0x3, 0x5e, 0x11, 0x1b, 0x35, 0x10, 0x200, 0x19b6, 0x4a, 0x51cd, 0x33, 0x48d, 0x43, 0x2e, 0x2, 0x10d, 0x3, 0x10, 0xa, 0x2, 0x14, 0x2f, 0x10, 0x19, 0x8, 0x50, 0x27, 0x9, 0x2, 0x67, 0x2, 0x4, 0x1, 0x4, 0xc, 0xb, 0x4d, 0xa, 0x1, 0x3, 0x1, 0x4, 0x1, 0x17, 0x1d, 0x34, 0xe, 0x32, 0x3e, 0x6, 0x3, 0x1, 0xe, 0x1c, 0xa, 0x17, 0x19, 0x1d, 0x7, 0x2f, 0x1c, 0x1, 0x30, 0x29, 0x17, 0x3, 0x1, 0x8, 0x14, 0x17, 0x3, 0x1, 0x5, 0x30, 0x1, 0x1, 0x3, 0x2, 0x2, 0x5, 0x2, 0x1, 0x1, 0x1, 0x18, 0x3, 0x2, 0xb, 0x7, 0x3, 0xc, 0x6, 0x2, 0x6, 0x2, 0x6, 0x9, 0x7, 0x1, 0x7, 0x91, 0x23, 0x1d, 0x2ba4, 0xc, 0x17, 0x4, 0x31, 0x2104, 0x16e, 0x2, 0x6a, 0x26, 0x7, 0xc, 0x5, 0x5, 0x1, 0x1, 0xa, 0x1, 0xd, 0x1, 0x5, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x6c, 0x21, 0x8b, 0x6, 0xda, 0x12, 0x40, 0x2, 0x36, 0x28, 0xa, 0x77, 0x1, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x7e, 0x24, 0x1a, 0x6, 0x1a, 0xb, 0x38, 0x2, 0x1f, 0x3, 0x6, 0x2, 0x6, 0x2, 0x6, 0x2, 0x3, 0x23, 0xc, 0x1, 0x1a, 0x1, 0x13, 0x1, 0x2, 0x1, 0xf, 0x2, 0xe, 0x22, 0x7b, 0x45, 0x35, 0x10b, 0x1d, 0x3, 0x31, 0x2f, 0x1f, 0x11, 0x1b, 0x35, 0x1e, 0x2, 0x24, 0x4, 0x8, 0x1, 0x5, 0x2a, 0x9e, 0x362, 0x6, 0x2, 0x1, 0x1, 0x2c, 0x1, 0x2, 0x3, 0x1, 0x2, 0x17, 0xaa, 0x16, 0xa, 0x1a, 0x46, 0x38, 0x6, 0x2, 0x40, 0x1, 0xf, 0x4, 0x1, 0x3, 0x1, 0x1b, 0x2c, 0x1d, 0x83, 0x36, 0xa, 0x16, 0xa, 0x13, 0x8d, 0x49, 0x3ba, 0x35, 0x4b, 0x2d, 0x20, 0x19, 0x1a, 0x24, 0x5c, 0x30, 0xe, 0x4, 0x4bb, 0x2b, 0x955, 0x36f, 0x91, 0x63, 0xb9d, 0x42f, 0x33d1, 0x239, 0x4c7, 0x45, 0xb, 0x1, 0x42, 0xd, 0x4060, 0x2, 0x23fe, 0x55, 0x1, 0x47, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0xc, 0x1, 0x1, 0x1, 0x7, 0x1, 0x41, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1, 0x1c, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1, 0x154, 0x2, 0x19, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x8, 0x1634, 0x4, 0x1, 0x1b, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0xa, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x6, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x4, 0x1, 0x7, 0x1, 0x4, 0x1, 0x4, 0x1, 0x1, 0x1, 0xa, 0x1, 0x11, 0x5, 0x3, 0x1, 0x5, 0x1, 0x11, 0x1144, 0xa6d7, 0x29, 0x1035, 0xb, 0xde, 0x3fe2, 0x21e]);
immutable unicodeInTai_Viet = RleBitSet!ushort.fromRawArray([0xaa80, 0x60]);
immutable unicodeHebrew = RleBitSet!ushort.fromRawArray([0x591, 0x37, 0x8, 0x1b, 0x5, 0x5, 0xf528, 0x1a, 0x1, 0x5, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0xa]);
immutable unicodeLisu = RleBitSet!ushort.fromRawArray([0xa4d0, 0x30]);
immutable unicodeUgaritic = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x381, 0x1e, 0x1, 0x1]);
immutable unicodeInMongolian = RleBitSet!ushort.fromRawArray([0x1800, 0xb0]);
immutable unicodeInBopomofo = RleBitSet!ushort.fromRawArray([0x3100, 0x30]);
immutable unicodeOld_Persian = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x3a1, 0x24, 0x4, 0xe]);
immutable unicodeInSundanese_Supplement = RleBitSet!ushort.fromRawArray([0x1cc0, 0x10]);
immutable unicodePhoenician = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x901, 0x1c, 0x3, 0x1]);
immutable unicodeInLisu = RleBitSet!ushort.fromRawArray([0xa4d0, 0x30]);
immutable unicodeInLow_Surrogates = RleBitSet!ushort.fromRawArray([0xdc00, 0x400]);
immutable unicodeBidi_Control = RleBitSet!ushort.fromRawArray([0x200e, 0x2, 0x1a, 0x5]);
immutable unicodeKatakana = RleBitSet!ushort.fromRawArray([0x30a1, 0x5a, 0x2, 0x3, 0xf0, 0x10, 0xd0, 0x2f, 0x1, 0x58, 0xcc0e, 0xa, 0x1, 0x2d, 0xb062, 0x1]);
immutable unicodeInTamil = RleBitSet!ushort.fromRawArray([0xb80, 0x80]);
immutable unicodeInSupplemental_Punctuation = RleBitSet!ushort.fromRawArray([0x2e00, 0x80]);
immutable unicodeInKanbun = RleBitSet!ushort.fromRawArray([0x3190, 0x10]);
immutable unicodeGrapheme_Base = RleBitSet!ushort.fromRawArray([0x20, 0x5f, 0x21, 0xd, 0x1, 0x252, 0x70, 0x8, 0x2, 0x5, 0x5, 0x7, 0x1, 0x1, 0x1, 0x14, 0x1, 0xe0, 0x7, 0x9e, 0x9, 0x26, 0x2, 0x7, 0x1, 0x27, 0x1, 0x2, 0x4, 0x1, 0x2e, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x9, 0x1b, 0x5, 0x5, 0x11, 0xa, 0xb, 0x1, 0x2, 0x2d, 0x15, 0x10, 0x1, 0x65, 0x8, 0x1, 0x6, 0x2, 0x2, 0x1, 0x4, 0x20, 0x2, 0x1, 0x1, 0x1e, 0x1d, 0x59, 0xb, 0x1, 0xe, 0x2b, 0x9, 0x7, 0x5, 0x16, 0x4, 0x1, 0x9, 0x1, 0x3, 0x1, 0x7, 0xf, 0x1, 0x19, 0x5, 0x1, 0x41, 0x1, 0x1, 0xb, 0x56, 0x37, 0x1, 0x1, 0x1, 0x4, 0x8, 0x4, 0x1, 0x3, 0x7, 0xa, 0x2, 0x14, 0x1, 0x7, 0x2, 0x2, 0x1, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x1, 0x3, 0x4, 0x3, 0x1, 0x1, 0x2, 0x6, 0x2, 0x2, 0x2, 0x1, 0x1, 0xd, 0x2, 0x1, 0x3, 0x4, 0x16, 0x7, 0x1, 0x1, 0x6, 0x4, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x4, 0x3, 0x18, 0x4, 0x1, 0x1, 0x7, 0xa, 0x2, 0x3, 0xe, 0x1, 0x1, 0x9, 0x1, 0x3, 0x1, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x3, 0x4, 0x8, 0x1, 0x1, 0x2, 0x3, 0x1, 0xf, 0x2, 0x4, 0xc, 0x10, 0x2, 0x1, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x3, 0x1, 0x2, 0x1, 0x6, 0x2, 0x2, 0x2, 0xf, 0x2, 0x1, 0x3, 0x4, 0x12, 0xb, 0x1, 0x1, 0x6, 0x3, 0x3, 0x1, 0x4, 0x3, 0x2, 0x1, 0x1, 0x1, 0x2, 0x3, 0x2, 0x3, 0x3, 0x3, 0xc, 0x5, 0x1, 0x1, 0x2, 0x3, 0x3, 0x1, 0x3, 0x3, 0x1, 0x15, 0x15, 0x6, 0x3, 0x1, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x1, 0x3, 0x4, 0x13, 0x2, 0x6, 0x2, 0x4, 0xa, 0x8, 0x8, 0x2, 0x2, 0x1, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x2, 0x1, 0x2, 0x1, 0x2, 0x2, 0x2, 0x1, 0x2, 0x12, 0x1, 0x1, 0x2, 0x4, 0xa, 0x1, 0x2, 0xf, 0x2, 0x1, 0x8, 0x1, 0x3, 0x1, 0x29, 0x2, 0x1, 0x1, 0x2, 0x5, 0x3, 0x1, 0x3, 0x1, 0x1, 0x11, 0x2, 0x4, 0x10, 0x3, 0x7, 0x2, 0x2, 0x1, 0x12, 0x3, 0x18, 0x1, 0x9, 0x1, 0x1, 0x2, 0x7, 0x9, 0x2, 0x6, 0x7, 0x13, 0x3, 0xc, 0x30, 0x1, 0x2, 0xb, 0x8, 0x8, 0xd, 0x25, 0x2, 0x1, 0x1, 0x2, 0x2, 0x1, 0x1, 0x2, 0x1, 0x6, 0x4, 0x1, 0x7, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x1, 0x4, 0x1, 0x2, 0x9, 0x1, 0x2, 0x5, 0x1, 0x1, 0x9, 0xa, 0x2, 0x4, 0x20, 0x18, 0x2, 0x1b, 0x1, 0x1, 0x1, 0x1, 0x1, 0xe, 0x1, 0x24, 0x12, 0x1, 0x5, 0x1, 0x2, 0x5, 0x31, 0x8, 0x1, 0x6, 0x1, 0xd, 0x25, 0x2d, 0x4, 0x1, 0x6, 0x1, 0x2, 0x2, 0x2, 0x19, 0x2, 0x4, 0x3, 0x10, 0x4, 0xd, 0x1, 0x2, 0x2, 0x6, 0x1, 0xf, 0x1, 0x28, 0x1, 0x1, 0x5, 0x1, 0x2, 0x179, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0x29, 0x1, 0x4, 0x2, 0x21, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0xf, 0x1, 0x39, 0x1, 0x4, 0x2, 0x43, 0x5, 0x1d, 0x3, 0x1a, 0x6, 0x55, 0xb, 0x29d, 0x3, 0x51, 0xf, 0xd, 0x1, 0x4, 0xe, 0x12, 0x3, 0x2, 0x9, 0x12, 0xe, 0xd, 0x1, 0x3, 0xf, 0x34, 0x2, 0x1, 0x7, 0x8, 0x1, 0x2, 0xb, 0x9, 0x3, 0xa, 0x6, 0xa, 0x6, 0xb, 0x3, 0x1, 0x1, 0xa, 0x6, 0x58, 0x8, 0x29, 0x1, 0x1, 0x5, 0x46, 0xa, 0x1d, 0x6, 0x4, 0x2, 0x3, 0x4, 0x2, 0x1, 0x6, 0x7, 0x1, 0x3, 0x2a, 0x2, 0x5, 0xb, 0x2c, 0x4, 0x1a, 0x6, 0xb, 0x3, 0x39, 0x2, 0x3, 0x2, 0x38, 0x1, 0x1, 0x9, 0x1, 0x1, 0x2, 0x8, 0x6, 0xd, 0xa, 0x6, 0xa, 0x6, 0xe, 0x56, 0x30, 0x1, 0x1, 0x5, 0x1, 0x1, 0x5, 0x1, 0x9, 0x4, 0x1b, 0x9, 0x9, 0x5, 0x20, 0x4, 0x2, 0x2, 0x1, 0x1, 0x3a, 0x1, 0x1, 0x2, 0x3, 0x1, 0x1, 0x3, 0x2, 0x8, 0x30, 0x8, 0x2, 0x5, 0xf, 0x3, 0x33, 0x40, 0x8, 0xb, 0x1, 0xd, 0x1, 0x7, 0x4, 0x1, 0x6, 0x1, 0x2, 0x9, 0xc0, 0x40, 0x116, 0x2, 0x6, 0x2, 0x26, 0x2, 0x6, 0x2, 0x8, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1f, 0x2, 0x35, 0x1, 0xf, 0x1, 0xe, 0x2, 0x6, 0x1, 0x13, 0x2, 0x3, 0x1, 0x9, 0x1, 0xb, 0x5, 0x18, 0x7, 0x31, 0x10, 0x2, 0x2, 0x1b, 0x1, 0xd, 0x3, 0x1b, 0x45, 0x8a, 0x6, 0x264, 0xc, 0x27, 0x19, 0xb, 0x15, 0x2a0, 0x1, 0x44c, 0x3, 0xa, 0xa6, 0x2f, 0x1, 0x2f, 0x1, 0x8f, 0x3, 0x2, 0x5, 0x2d, 0x1, 0x1, 0x5, 0x1, 0x2, 0x38, 0x7, 0x2, 0xf, 0x17, 0x9, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x21, 0x3c, 0x44, 0x1a, 0x1, 0x59, 0xc, 0xd6, 0x1a, 0xc, 0x4, 0x2a, 0x6, 0x10, 0x1, 0x56, 0x4, 0x65, 0x5, 0x29, 0x3, 0x5e, 0x1, 0x2b, 0x5, 0x24, 0xc, 0x2f, 0x1, 0xdf, 0x1, 0x1ab6, 0xa, 0x520d, 0x33, 0x48d, 0x3, 0x37, 0x9, 0x15c, 0x14, 0x2f, 0x4, 0x1, 0xa, 0x1a, 0x8, 0x50, 0x2, 0x6, 0x8, 0x8f, 0x1, 0x4, 0xc, 0xb, 0x4d, 0xa, 0x1, 0x3, 0x1, 0x4, 0x1, 0x19, 0x2, 0x5, 0x4, 0xa, 0x6, 0x38, 0x8, 0x44, 0xa, 0xc, 0x18, 0xa, 0x4, 0x26, 0x8, 0x19, 0xb, 0x2, 0xb, 0x1e, 0x6, 0x30, 0x1, 0x2, 0x4, 0x2, 0x1, 0x11, 0x1, 0xb, 0x4, 0x2, 0x20, 0x29, 0x6, 0x2, 0x2, 0x2, 0xb, 0x3, 0x1, 0x8, 0x1, 0x1, 0x2, 0xa, 0x2, 0x20, 0x4, 0x30, 0x1, 0x1, 0x3, 0x2, 0x2, 0x5, 0x2, 0x1, 0x1, 0x1, 0x18, 0x11, 0x2, 0x8, 0xb, 0x6, 0x2, 0x6, 0x2, 0x6, 0x9, 0x7, 0x1, 0x7, 0x91, 0x25, 0x1, 0x2, 0x1, 0x4, 0x3, 0xa, 0x6, 0x2ba4, 0xc, 0x17, 0x4, 0x31, 0x2104, 0x16e, 0x2, 0x6a, 0x26, 0x7, 0xc, 0x5, 0x5, 0x1, 0x1, 0x18, 0x1, 0x5, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x7c, 0x11, 0x16d, 0x10, 0x40, 0x2, 0x36, 0x28, 0xe, 0x12, 0xa, 0x16, 0x23, 0x1, 0x13, 0x1, 0x4, 0x4, 0x5, 0x1, 0x87, 0x4, 0x9d, 0x2, 0x1f, 0x3, 0x6, 0x2, 0x6, 0x2, 0x6, 0x2, 0x3, 0x3, 0x7, 0x1, 0x7, 0xd, 0x2, 0x2, 0xc, 0x1, 0x1a, 0x1, 0x13, 0x1, 0x2, 0x1, 0xf, 0x2, 0xe, 0x22, 0x7b, 0x5, 0x3, 0x4, 0x2d, 0x3, 0x54, 0x5, 0xc, 0x34, 0x2d, 0x83, 0x1d, 0x3, 0x31, 0x2f, 0x1f, 0x1, 0x4, 0xc, 0x1b, 0x35, 0x1e, 0x1, 0x25, 0x4, 0xe, 0x2a, 0x9e, 0x2, 0xa, 0x356, 0x6, 0x2, 0x1, 0x1, 0x2c, 0x1, 0x2, 0x3, 0x1, 0x2, 0x17, 0x1, 0x9, 0xa0, 0x1c, 0x3, 0x1b, 0x5, 0x1, 0x40, 0x38, 0x6, 0x2, 0x40, 0x1, 0xf, 0x4, 0x1, 0x3, 0x1, 0x1b, 0xc, 0x8, 0x8, 0x9, 0x7, 0x20, 0x80, 0x36, 0x3, 0x1d, 0x2, 0x1b, 0x5, 0x8, 0x80, 0x49, 0x217, 0x1f, 0x181, 0x1, 0x1, 0x36, 0xf, 0x7, 0x4, 0x1e, 0x12, 0x31, 0x4, 0x2, 0x2, 0x2, 0x1, 0x4, 0xe, 0x19, 0x7, 0xa, 0x9, 0x24, 0x5, 0x1, 0x9, 0xe, 0x3e, 0x34, 0x9, 0xa, 0x7, 0xa, 0x4a6, 0x2b, 0x1, 0x1, 0x1, 0x2, 0x6, 0x1, 0x9, 0xa, 0x936, 0x36f, 0x91, 0x63, 0xd, 0x4, 0xb8c, 0x42f, 0x33d1, 0x239, 0x4c7, 0x45, 0xb, 0x2f, 0x14, 0xd, 0x4060, 0x2, 0x1ffe, 0xf6, 0xa, 0x27, 0x2, 0x3c, 0x1, 0x1, 0x3, 0x4, 0x15, 0x2, 0x7, 0x1e, 0x4, 0x30, 0x22, 0x42, 0x3, 0x1, 0xba, 0x57, 0x9, 0x12, 0x8e, 0x55, 0x1, 0x47, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0xc, 0x1, 0x1, 0x1, 0x7, 0x1, 0x41, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1, 0x1c, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1, 0x154, 0x2, 0x124, 0x2, 0x32, 0x1600, 0x4, 0x1, 0x1b, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0xa, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x6, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x4, 0x1, 0x7, 0x1, 0x4, 0x1, 0x4, 0x1, 0x1, 0x1, 0xa, 0x1, 0x11, 0x5, 0x3, 0x1, 0x5, 0x1, 0x11, 0x34, 0x2, 0x10e, 0x2c, 0x4, 0x64, 0xc, 0xf, 0x2, 0xe, 0x2, 0xf, 0x1, 0xf, 0x20, 0xb, 0x5, 0x1f, 0x1, 0x3c, 0x4, 0x2b, 0x4b, 0x1d, 0xd, 0x2b, 0x5, 0x9, 0x7, 0x2, 0xae, 0x21, 0xf, 0x6, 0x1, 0x46, 0x3, 0x14, 0xc, 0x25, 0x1, 0x5, 0x15, 0x11, 0xf, 0x3f, 0x1, 0x1, 0x1, 0xb6, 0x1, 0x4, 0x3, 0x3e, 0x2, 0x4, 0xc, 0x18, 0x93, 0x46, 0x4, 0xb, 0x30, 0x46, 0x3a, 0x74, 0x88c, 0xa6d7, 0x29, 0x1035, 0xb, 0xde, 0x3fe2, 0x21e]);
immutable unicodeInHebrew = RleBitSet!ushort.fromRawArray([0x590, 0x70]);
immutable unicodeTai_Viet = RleBitSet!ushort.fromRawArray([0xaa80, 0x43, 0x18, 0x5]);
immutable unicodeInHanunoo = RleBitSet!ushort.fromRawArray([0x1720, 0x20]);
immutable unicodeOther_Lowercase = RleBitSet!ushort.fromRawArray([0xaa, 0x1, 0xf, 0x1, 0x1f5, 0x9, 0x7, 0x2, 0x1e, 0x5, 0x60, 0x1, 0x34, 0x1, 0x19b1, 0x3f, 0xd, 0x1, 0x22, 0x25, 0x2b1, 0x1, 0xd, 0x1, 0x10, 0xd, 0xd3, 0x10, 0x350, 0x1a, 0x792, 0x2, 0x7af2, 0x1, 0x87, 0x2]);
immutable unicodeDash = RleBitSet!ushort.fromRawArray([0x2d, 0x1, 0x55c, 0x1, 0x33, 0x1, 0xe41, 0x1, 0x405, 0x1, 0x809, 0x6, 0x3d, 0x1, 0x27, 0x1, 0xf, 0x1, 0x186, 0x1, 0xc04, 0x1, 0x2, 0x1, 0x1f, 0x2, 0x1e0, 0x1, 0x13, 0x1, 0x6f, 0x1, 0xcd90, 0x2, 0x25, 0x1, 0xa, 0x1, 0xa9, 0x1]);
immutable unicodeInSinhala = RleBitSet!ushort.fromRawArray([0xd80, 0x80]);
immutable unicodeInSundanese = RleBitSet!ushort.fromRawArray([0x1b80, 0x40]);
immutable unicodeInEthiopic_Extended_A = RleBitSet!ushort.fromRawArray([0xab00, 0x30]);
immutable unicodeTibetan = RleBitSet!ushort.fromRawArray([0xf00, 0x48, 0x1, 0x24, 0x4, 0x27, 0x1, 0x24, 0x1, 0xf, 0x1, 0x7, 0x4, 0x2]);
immutable unicodeSamaritan = RleBitSet!ushort.fromRawArray([0x800, 0x2e, 0x2, 0xf]);
immutable unicodeInOptical_Character_Recognition = RleBitSet!ushort.fromRawArray([0x2440, 0x20]);
immutable unicodeInVariation_Selectors = RleBitSet!ushort.fromRawArray([0xfe00, 0x10]);
immutable unicodeInKatakana = RleBitSet!ushort.fromRawArray([0x30a0, 0x60]);
immutable unicodeOld_Italic = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x301, 0x1f, 0x1, 0x4]);
immutable unicodeInEnclosed_CJK_Letters_and_Months = RleBitSet!ushort.fromRawArray([0x3200, 0x100]);
immutable unicodeHan = RleBitSet!ushort.fromRawArray([0x2e80, 0x1a, 0x1, 0x59, 0xc, 0xd6, 0x2f, 0x1, 0x1, 0x1, 0x19, 0x9, 0xe, 0x4, 0x3c4, 0x19b6, 0x4a, 0x51cd, 0x5933, 0x16e, 0x2, 0x6a, 0xffff, 0x0, 0x527, 0xa6d7, 0x29, 0x1035, 0xb, 0xde, 0x3fe2, 0x21e]);
immutable unicodeInMyanmar = RleBitSet!ushort.fromRawArray([0x1000, 0xa0]);
immutable unicodeSaurashtra = RleBitSet!ushort.fromRawArray([0xa880, 0x45, 0x9, 0xc]);
immutable unicodeLm = RleBitSet!ushort.fromRawArray([0x2b0, 0x12, 0x4, 0xc, 0xe, 0x5, 0x7, 0x1, 0x1, 0x1, 0x85, 0x1, 0x5, 0x1, 0x1de, 0x1, 0xe6, 0x1, 0xa4, 0x2, 0x10d, 0x2, 0x4, 0x1, 0x1f, 0x1, 0x9, 0x1, 0x3, 0x1, 0x148, 0x1, 0x4d4, 0x1, 0x7f, 0x1, 0x235, 0x1, 0x6da, 0x1, 0x6b, 0x1, 0x263, 0x1, 0x1d0, 0x6, 0xae, 0x3f, 0xd, 0x1, 0x22, 0x25, 0x2b1, 0x1, 0xd, 0x1, 0x10, 0xd, 0xbdf, 0x2, 0xf1, 0x1, 0xbf, 0x1, 0x1d5, 0x1, 0x2b, 0x5, 0x5, 0x1, 0x61, 0x2, 0x5d, 0x3, 0x6f16, 0x1, 0x4e2, 0x6, 0x10e, 0x1, 0x72, 0x1, 0x97, 0x9, 0x50, 0x1, 0x17, 0x1, 0x6f, 0x2, 0x1d5, 0x1, 0xa0, 0x1, 0x6c, 0x1, 0x15, 0x2, 0x547b, 0x1, 0x2d, 0x2, 0x6ff3, 0xd]);
immutable unicodeInKannada = RleBitSet!ushort.fromRawArray([0xc80, 0x80]);
immutable unicodeMc = RleBitSet!ushort.fromRawArray([0x903, 0x1, 0x37, 0x1, 0x2, 0x3, 0x8, 0x4, 0x1, 0x2, 0x32, 0x2, 0x3a, 0x3, 0x6, 0x2, 0x2, 0x2, 0xa, 0x1, 0x2b, 0x1, 0x3a, 0x3, 0x42, 0x1, 0x3a, 0x3, 0x8, 0x1, 0x1, 0x2, 0x35, 0x2, 0x3a, 0x1, 0x1, 0x1, 0x6, 0x2, 0x2, 0x2, 0xa, 0x1, 0x66, 0x2, 0x1, 0x2, 0x3, 0x3, 0x1, 0x3, 0xa, 0x1, 0x29, 0x3, 0x3d, 0x4, 0x3d, 0x2, 0x3a, 0x1, 0x1, 0x5, 0x2, 0x2, 0x1, 0x2, 0x9, 0x2, 0x2b, 0x2, 0x3a, 0x3, 0x5, 0x3, 0x1, 0x3, 0xa, 0x1, 0x2a, 0x2, 0x4b, 0x3, 0x6, 0x8, 0x12, 0x2, 0x14a, 0x2, 0x3f, 0x1, 0xab, 0x2, 0x4, 0x1, 0x6, 0x1, 0x2, 0x2, 0x19, 0x2, 0xa, 0x3, 0x2, 0x7, 0x15, 0x2, 0x2, 0x6, 0x2, 0x1, 0xa, 0x3, 0x719, 0x1, 0x7, 0x8, 0x1, 0x2, 0x15a, 0x4, 0x2, 0x3, 0x4, 0x2, 0x1, 0x6, 0x77, 0x11, 0x7, 0x2, 0x4f, 0x3, 0x39, 0x1, 0x1, 0x1, 0x9, 0x1, 0x1, 0x2, 0x8, 0x6, 0x91, 0x1, 0x30, 0x1, 0x5, 0x1, 0x1, 0x5, 0x1, 0x2, 0x3d, 0x1, 0x1e, 0x1, 0x4, 0x2, 0x2, 0x1, 0x1, 0x2, 0x39, 0x1, 0x2, 0x3, 0x1, 0x1, 0x3, 0x2, 0x30, 0x8, 0x8, 0x2, 0xab, 0x1, 0x10, 0x2, 0x133a, 0x2, 0x77f3, 0x2, 0x2, 0x1, 0x58, 0x2, 0x32, 0x10, 0x8e, 0x2, 0x2f, 0x1, 0x30, 0x2, 0x4, 0x2, 0x1, 0x4, 0x6e, 0x2, 0x2, 0x2, 0x18, 0x1, 0x2d, 0x1, 0x6f, 0x1, 0x2, 0x2, 0x5, 0x1, 0xed, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x6413, 0x1, 0x1, 0x1, 0x7f, 0x1, 0x2d, 0x3, 0x4, 0x2, 0x73, 0x1, 0x55, 0x1, 0x30, 0x3, 0x9, 0x2, 0x4eb, 0x1, 0x1, 0x2, 0x6, 0x1, 0x589a, 0x2e, 0x61e6, 0x2, 0x6, 0x6]);
immutable unicodeInLimbu = RleBitSet!ushort.fromRawArray([0x1900, 0x50]);
immutable unicodeLo = RleBitSet!ushort.fromRawArray([0xaa, 0x1, 0xf, 0x1, 0x100, 0x1, 0x4, 0x4, 0xd0, 0x1, 0x33b, 0x1b, 0x5, 0x3, 0x2d, 0x20, 0x1, 0xa, 0x23, 0x2, 0x1, 0x63, 0x1, 0x1, 0x18, 0x2, 0xa, 0x3, 0x2, 0x1, 0x10, 0x1, 0x1, 0x1e, 0x1d, 0x59, 0xb, 0x1, 0x18, 0x21, 0x15, 0x16, 0x2a, 0x19, 0x47, 0x1, 0x1, 0xb, 0x57, 0x36, 0x3, 0x1, 0x12, 0x1, 0x7, 0xa, 0x10, 0x6, 0x1, 0x7, 0x5, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x1, 0x3, 0x4, 0x3, 0x1, 0x10, 0x1, 0xd, 0x2, 0x1, 0x3, 0xe, 0x2, 0x13, 0x6, 0x4, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1f, 0x4, 0x1, 0x1, 0x13, 0x3, 0x10, 0x9, 0x1, 0x3, 0x1, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x3, 0x1, 0x12, 0x1, 0xf, 0x2, 0x23, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x3, 0x1, 0x1e, 0x2, 0x1, 0x3, 0xf, 0x1, 0x11, 0x1, 0x1, 0x6, 0x3, 0x3, 0x1, 0x4, 0x3, 0x2, 0x1, 0x1, 0x1, 0x2, 0x3, 0x2, 0x3, 0x3, 0x3, 0xc, 0x16, 0x1, 0x34, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x1, 0x1a, 0x2, 0x6, 0x2, 0x23, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x1, 0x20, 0x1, 0x1, 0x2, 0xf, 0x2, 0x12, 0x8, 0x1, 0x3, 0x1, 0x29, 0x2, 0x1, 0x10, 0x1, 0x11, 0x2, 0x18, 0x6, 0x5, 0x12, 0x3, 0x18, 0x1, 0x9, 0x1, 0x1, 0x2, 0x7, 0x3a, 0x30, 0x1, 0x2, 0xc, 0x6, 0x3b, 0x2, 0x1, 0x1, 0x2, 0x2, 0x1, 0x1, 0x2, 0x1, 0x6, 0x4, 0x1, 0x7, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x1, 0x4, 0x1, 0x2, 0x9, 0x1, 0x2, 0x5, 0x17, 0x4, 0x20, 0x1, 0x3f, 0x8, 0x1, 0x24, 0x1b, 0x5, 0x73, 0x2b, 0x14, 0x1, 0x10, 0x6, 0x4, 0x4, 0x3, 0x1, 0x3, 0x2, 0x7, 0x3, 0x4, 0xd, 0xc, 0x1, 0x41, 0x2b, 0x2, 0x14c, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0x29, 0x1, 0x4, 0x2, 0x21, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0xf, 0x1, 0x39, 0x1, 0x4, 0x2, 0x43, 0x25, 0x10, 0x10, 0x55, 0xc, 0x26c, 0x2, 0x11, 0x1, 0x1a, 0x5, 0x4b, 0x15, 0xd, 0x1, 0x4, 0xe, 0x12, 0xe, 0x12, 0xe, 0xd, 0x1, 0x3, 0xf, 0x34, 0x28, 0x1, 0x43, 0x23, 0x1, 0x34, 0x8, 0x29, 0x1, 0x1, 0x5, 0x46, 0xa, 0x1d, 0x33, 0x1e, 0x2, 0x5, 0xb, 0x2c, 0x15, 0x7, 0x38, 0x17, 0x9, 0x35, 0xb0, 0x2f, 0x11, 0x7, 0x37, 0x1e, 0xd, 0x2, 0xa, 0x2c, 0x1a, 0x24, 0x29, 0x3, 0xa, 0x1e, 0x71, 0x4, 0x1, 0x4, 0x3, 0x2, 0x43e, 0x4, 0xbf7, 0x38, 0x18, 0x17, 0x9, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x227, 0x1, 0x35, 0x1, 0x4, 0x56, 0x8, 0x1, 0x1, 0x5a, 0x4, 0x1, 0x5, 0x29, 0x3, 0x5e, 0x11, 0x1b, 0x35, 0x10, 0x200, 0x19b6, 0x4a, 0x51cd, 0x33, 0x15, 0x1, 0x477, 0x43, 0x28, 0x8, 0x10c, 0x4, 0x10, 0xa, 0x2, 0x42, 0x1, 0x31, 0x46, 0x115, 0x7, 0x1, 0x3, 0x1, 0x4, 0x1, 0x17, 0x1d, 0x34, 0xe, 0x32, 0x3e, 0x6, 0x3, 0x1, 0xe, 0x1c, 0xa, 0x17, 0x19, 0x1d, 0x7, 0x2f, 0x4d, 0x29, 0x17, 0x3, 0x1, 0x8, 0x14, 0x10, 0x1, 0x6, 0x3, 0x1, 0x5, 0x30, 0x1, 0x1, 0x3, 0x2, 0x2, 0x5, 0x2, 0x1, 0x1, 0x1, 0x18, 0x2, 0x3, 0xb, 0x7, 0x1, 0xe, 0x6, 0x2, 0x6, 0x2, 0x6, 0x9, 0x7, 0x1, 0x7, 0x91, 0x23, 0x1d, 0x2ba4, 0xc, 0x17, 0x4, 0x31, 0x2104, 0x16e, 0x2, 0x6a, 0x43, 0x1, 0x1, 0xa, 0x1, 0xd, 0x1, 0x5, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x6c, 0x21, 0x16b, 0x12, 0x40, 0x2, 0x36, 0x28, 0xc, 0x74, 0x5, 0x1, 0x87, 0x69, 0xa, 0x1, 0x2d, 0x2, 0x1f, 0x3, 0x6, 0x2, 0x6, 0x2, 0x6, 0x2, 0x3, 0x23, 0xc, 0x1, 0x1a, 0x1, 0x13, 0x1, 0x2, 0x1, 0xf, 0x2, 0xe, 0x22, 0x7b, 0x185, 0x1d, 0x3, 0x31, 0x2f, 0x1f, 0x11, 0x11, 0x1, 0x8, 0x36, 0x1e, 0x2, 0x24, 0x4, 0x8, 0x80, 0x4e, 0x362, 0x6, 0x2, 0x1, 0x1, 0x2c, 0x1, 0x2, 0x3, 0x1, 0x2, 0x17, 0xaa, 0x16, 0xa, 0x1a, 0x46, 0x38, 0x6, 0x2, 0x40, 0x1, 0xf, 0x4, 0x1, 0x3, 0x1, 0x1b, 0x2c, 0x1d, 0x83, 0x36, 0xa, 0x16, 0xa, 0x13, 0x8d, 0x49, 0x3ba, 0x35, 0x4b, 0x2d, 0x20, 0x19, 0x1a, 0x24, 0x5c, 0x30, 0xe, 0x4, 0x4bb, 0x2b, 0x955, 0x36f, 0xc91, 0x42f, 0x33d1, 0x239, 0x4c7, 0x45, 0xb, 0x1, 0x40af, 0x2, 0x3dfe, 0x4, 0x1, 0x1b, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0xa, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x6, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x4, 0x1, 0x7, 0x1, 0x4, 0x1, 0x4, 0x1, 0x1, 0x1, 0xa, 0x1, 0x11, 0x5, 0x3, 0x1, 0x5, 0x1, 0x11, 0x1144, 0xa6d7, 0x29, 0x1035, 0xb, 0xde, 0x3fe2, 0x21e]);
immutable unicodeMe = RleBitSet!ushort.fromRawArray([0x488, 0x2, 0x1c53, 0x4, 0x1, 0x3, 0x858b, 0x3]);
immutable unicodeInMeetei_Mayek = RleBitSet!ushort.fromRawArray([0xabc0, 0x40]);
immutable unicodeLt = RleBitSet!ushort.fromRawArray([0x1c5, 0x1, 0x2, 0x1, 0x2, 0x1, 0x26, 0x1, 0x1d95, 0x8, 0x8, 0x8, 0x8, 0x8, 0xc, 0x1, 0xf, 0x1, 0x2f, 0x1]);
immutable unicodeInKhmer = RleBitSet!ushort.fromRawArray([0x1780, 0x80]);
immutable unicodeInEthiopic_Extended = RleBitSet!ushort.fromRawArray([0x2d80, 0x60]);
immutable unicodeInVedic_Extensions = RleBitSet!ushort.fromRawArray([0x1cd0, 0x30]);
immutable unicodeMn = RleBitSet!ushort.fromRawArray([0x300, 0x70, 0x113, 0x5, 0x109, 0x2d, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x48, 0xb, 0x30, 0x15, 0x10, 0x1, 0x65, 0x7, 0x2, 0x6, 0x2, 0x2, 0x1, 0x4, 0x23, 0x1, 0x1e, 0x1b, 0x5b, 0xb, 0x3a, 0x9, 0x22, 0x4, 0x1, 0x9, 0x1, 0x3, 0x1, 0x5, 0x2b, 0x3, 0x88, 0x1b, 0x1, 0x3, 0x37, 0x1, 0x1, 0x1, 0x4, 0x8, 0x4, 0x1, 0x3, 0x7, 0xa, 0x2, 0x1d, 0x1, 0x3a, 0x1, 0x4, 0x4, 0x8, 0x1, 0x14, 0x2, 0x1d, 0x2, 0x39, 0x1, 0x4, 0x2, 0x4, 0x2, 0x2, 0x3, 0x3, 0x1, 0x1e, 0x2, 0x3, 0x1, 0xb, 0x2, 0x39, 0x1, 0x4, 0x5, 0x1, 0x2, 0x4, 0x1, 0x14, 0x2, 0x1d, 0x1, 0x3a, 0x1, 0x2, 0x1, 0x1, 0x4, 0x8, 0x1, 0x8, 0x1, 0xb, 0x2, 0x1e, 0x1, 0x3d, 0x1, 0xc, 0x1, 0x70, 0x3, 0x5, 0x3, 0x1, 0x4, 0x7, 0x2, 0xb, 0x2, 0x58, 0x1, 0x2, 0x1, 0x6, 0x1, 0x5, 0x2, 0x14, 0x2, 0x5d, 0x4, 0x8, 0x1, 0x14, 0x2, 0x66, 0x1, 0x7, 0x3, 0x1, 0x1, 0x5a, 0x1, 0x2, 0x7, 0xc, 0x8, 0x62, 0x1, 0x2, 0x6, 0x1, 0x2, 0xb, 0x6, 0x4a, 0x2, 0x1b, 0x1, 0x1, 0x1, 0x1, 0x1, 0x37, 0xe, 0x1, 0x5, 0x1, 0x2, 0x5, 0xb, 0x1, 0x24, 0x9, 0x1, 0x66, 0x4, 0x1, 0x6, 0x1, 0x2, 0x2, 0x2, 0x19, 0x2, 0x4, 0x3, 0x10, 0x4, 0xd, 0x1, 0x2, 0x2, 0x6, 0x1, 0xf, 0x1, 0x2bf, 0x3, 0x3b2, 0x3, 0x1d, 0x3, 0x1d, 0x2, 0x1e, 0x2, 0x40, 0x2, 0x1, 0x7, 0x8, 0x1, 0x2, 0xb, 0x9, 0x1, 0x2d, 0x3, 0x9b, 0x1, 0x76, 0x3, 0x4, 0x2, 0x9, 0x1, 0x6, 0x3, 0xdb, 0x2, 0x3d, 0x1, 0x1, 0x7, 0x1, 0x1, 0x1, 0x1, 0x2, 0x8, 0x6, 0xa, 0x2, 0x1, 0x80, 0x4, 0x30, 0x1, 0x1, 0x5, 0x1, 0x1, 0x5, 0x1, 0x28, 0x9, 0xc, 0x2, 0x20, 0x4, 0x2, 0x2, 0x1, 0x1, 0x3a, 0x1, 0x1, 0x2, 0x3, 0x1, 0x1, 0x3, 0x3a, 0x8, 0x2, 0x2, 0x98, 0x3, 0x1, 0xd, 0x1, 0x7, 0x4, 0x1, 0x6, 0x1, 0xcb, 0x27, 0x15, 0x4, 0x2d0, 0xd, 0x4, 0x1, 0x3, 0xc, 0xbfe, 0x3, 0x8d, 0x1, 0x60, 0x20, 0x22a, 0x4, 0x6b, 0x2, 0x75d4, 0x1, 0x4, 0xa, 0x21, 0x1, 0x50, 0x2, 0x110, 0x1, 0x3, 0x1, 0x4, 0x1, 0x19, 0x2, 0x9d, 0x1, 0x1b, 0x12, 0x34, 0x8, 0x19, 0xb, 0x2e, 0x3, 0x30, 0x1, 0x2, 0x4, 0x2, 0x1, 0x6c, 0x6, 0x2, 0x2, 0x2, 0x2, 0xc, 0x1, 0x8, 0x1, 0x63, 0x1, 0x1, 0x3, 0x2, 0x2, 0x5, 0x2, 0x1, 0x1, 0x2a, 0x2, 0x8, 0x1, 0xee, 0x1, 0x2, 0x1, 0x4, 0x1, 0x4f30, 0x1, 0x2e1, 0x10, 0x10, 0x7, 0x3d6, 0x1, 0x803, 0x3, 0x1, 0x2, 0x5, 0x4, 0x28, 0x3, 0x4, 0x1, 0x5c1, 0x1, 0x36, 0xf, 0x39, 0x2, 0x31, 0x4, 0x2, 0x2, 0x45, 0x3, 0x24, 0x5, 0x1, 0x8, 0x4b, 0x2, 0x34, 0x9, 0x4ec, 0x1, 0x1, 0x1, 0x2, 0x6, 0x1, 0x1, 0x58d7, 0x4, 0x61d4, 0x3, 0x11, 0x8, 0x2, 0x7, 0x1e, 0x4, 0x94, 0x3, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0x2ec7, 0xf0]);
immutable unicodeNd = RleBitSet!ushort.fromRawArray([0x30, 0xa, 0x626, 0xa, 0x86, 0xa, 0xc6, 0xa, 0x19c, 0xa, 0x76, 0xa, 0x76, 0xa, 0x76, 0xa, 0x76, 0xa, 0x76, 0xa, 0x76, 0xa, 0x76, 0xa, 0x76, 0xa, 0xe0, 0xa, 0x76, 0xa, 0x46, 0xa, 0x116, 0xa, 0x46, 0xa, 0x746, 0xa, 0x26, 0xa, 0x12c, 0xa, 0x80, 0xa, 0xa6, 0xa, 0x6, 0xa, 0xb6, 0xa, 0x56, 0xa, 0x86, 0xa, 0x6, 0xa, 0x89c6, 0xa, 0x2a6, 0xa, 0x26, 0xa, 0xc6, 0xa, 0x76, 0xa, 0x196, 0xa, 0x5316, 0xa, 0x586, 0xa, 0xbbc, 0xa, 0x80, 0xa, 0x3c, 0xa, 0x90, 0xa, 0x4e6, 0xa, 0xc104, 0x32]);
immutable unicodeBamum = RleBitSet!ushort.fromRawArray([0xa6a0, 0x58, 0xc108, 0x239]);
immutable unicodeJavanese = RleBitSet!ushort.fromRawArray([0xa980, 0x4e, 0x1, 0xb, 0x4, 0x2]);
immutable unicodeTifinagh = RleBitSet!ushort.fromRawArray([0x2d30, 0x38, 0x7, 0x2, 0xe, 0x1]);
immutable unicodeInHalfwidth_and_Fullwidth_Forms = RleBitSet!ushort.fromRawArray([0xff00, 0xf0]);
immutable unicodeInDevanagari_Extended = RleBitSet!ushort.fromRawArray([0xa8e0, 0x20]);
immutable unicodeInIdeographic_Description_Characters = RleBitSet!ushort.fromRawArray([0x2ff0, 0x10]);
immutable unicodeNl = RleBitSet!ushort.fromRawArray([0x16ee, 0x3, 0xa6f, 0x23, 0x2, 0x4, 0xe7e, 0x1, 0x19, 0x9, 0xe, 0x3, 0x76ab, 0xa, 0x5a50, 0x35, 0x1cc, 0x1, 0x8, 0x1, 0x86, 0x5, 0x202a, 0x63]);
immutable unicodeInHangul_Compatibility_Jamo = RleBitSet!ushort.fromRawArray([0x3130, 0x60]);
immutable unicodeNo = RleBitSet!ushort.fromRawArray([0xb2, 0x2, 0x5, 0x1, 0x2, 0x3, 0x935, 0x6, 0x178, 0x6, 0x78, 0x3, 0x85, 0x7, 0xf1, 0x6, 0x1b4, 0xa, 0x435, 0x14, 0x473, 0xa, 0x1e0, 0x1, 0x695, 0x1, 0x3, 0x6, 0x6, 0xa, 0xc6, 0x10, 0x29, 0x1, 0x2d6, 0x3c, 0x4e, 0x16, 0x276, 0x1e, 0x569, 0x1, 0x494, 0x4, 0x8a, 0xa, 0x1e, 0x8, 0x1, 0xf, 0x20, 0xa, 0x27, 0xf, 0x7570, 0x6, 0x58d1, 0x2d, 0x41, 0x4, 0x11, 0x1, 0x195, 0x4, 0x534, 0x8, 0xb6, 0x6, 0x124, 0x8, 0x35, 0x2, 0xd9, 0x8, 0x18, 0x8, 0x2e0, 0x1f, 0x1d3, 0x14, 0xc2fa, 0x12, 0x1d8e, 0xb]);
immutable unicodeInOriya = RleBitSet!ushort.fromRawArray([0xb00, 0x80]);
immutable unicodeLogical_Order_Exception = RleBitSet!ushort.fromRawArray([0xe40, 0x5, 0x7b, 0x5, 0x9bf0, 0x2, 0x2, 0x1, 0x1, 0x2]);
immutable unicodeCased = RleBitSet!ushort.fromRawArray([0x41, 0x1a, 0x6, 0x1a, 0x2f, 0x1, 0xa, 0x1, 0x4, 0x1, 0x5, 0x17, 0x1, 0x1f, 0x1, 0xc3, 0x1, 0x4, 0x4, 0xd0, 0x1, 0x24, 0x7, 0x2, 0x1e, 0x5, 0x60, 0x1, 0x2a, 0x4, 0x2, 0x2, 0x2, 0x4, 0x8, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x14, 0x1, 0x53, 0x1, 0x8b, 0x8, 0x9e, 0x9, 0x26, 0xa, 0x27, 0xb18, 0x26, 0x1, 0x1, 0x5, 0x1, 0xc32, 0xc0, 0x40, 0x116, 0x2, 0x6, 0x2, 0x26, 0x2, 0x6, 0x2, 0x8, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1f, 0x2, 0x35, 0x1, 0x7, 0x1, 0x1, 0x3, 0x3, 0x1, 0x7, 0x3, 0x4, 0x2, 0x6, 0x4, 0xd, 0x5, 0x3, 0x1, 0x7, 0x74, 0x1, 0xd, 0x1, 0x10, 0xd, 0x65, 0x1, 0x4, 0x1, 0x2, 0xa, 0x1, 0x1, 0x3, 0x5, 0x6, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x1, 0x6, 0x4, 0x1, 0x2, 0x4, 0x5, 0x5, 0x4, 0x1, 0x11, 0x20, 0x3, 0x2, 0x331, 0x34, 0x716, 0x2f, 0x1, 0x2f, 0x1, 0x85, 0x6, 0x4, 0x3, 0x2, 0xc, 0x26, 0x1, 0x1, 0x5, 0x1, 0x7912, 0x2e, 0x12, 0x18, 0x8a, 0x66, 0x3, 0x4, 0x1, 0x4, 0xc, 0xb, 0x4d, 0x3, 0x5305, 0x7, 0xc, 0x5, 0x409, 0x1a, 0x6, 0x1a, 0x4a5, 0x50, 0xcfb0, 0x55, 0x1, 0x47, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0xc, 0x1, 0x1, 0x1, 0x7, 0x1, 0x41, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1, 0x1c, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1, 0x154, 0x2, 0x19, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x8]);
immutable unicodeInscriptional_Parthian = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0xb41, 0x16, 0x2, 0x8]);
immutable unicodeSyloti_Nagri = RleBitSet!ushort.fromRawArray([0xa800, 0x2c]);
immutable unicodeInBengali = RleBitSet!ushort.fromRawArray([0x980, 0x80]);
immutable unicodeInTagalog = RleBitSet!ushort.fromRawArray([0x1700, 0x20]);
immutable unicodeInMyanmar_Extended_A = RleBitSet!ushort.fromRawArray([0xaa60, 0x20]);
immutable unicodePc = RleBitSet!ushort.fromRawArray([0x5f, 0x1, 0x1fdf, 0x2, 0x13, 0x1, 0xddde, 0x2, 0x18, 0x3, 0xef, 0x1]);
immutable unicodeInCyrillic_Extended_A = RleBitSet!ushort.fromRawArray([0x2de0, 0x20]);
immutable unicodePd = RleBitSet!ushort.fromRawArray([0x2d, 0x1, 0x55c, 0x1, 0x33, 0x1, 0xe41, 0x1, 0x405, 0x1, 0x809, 0x6, 0xe01, 0x1, 0x2, 0x1, 0x1f, 0x2, 0x1e0, 0x1, 0x13, 0x1, 0x6f, 0x1, 0xcd90, 0x2, 0x25, 0x1, 0xa, 0x1, 0xa9, 0x1]);
immutable unicodeInCyrillic_Extended_B = RleBitSet!ushort.fromRawArray([0xa640, 0x60]);
immutable unicodePe = RleBitSet!ushort.fromRawArray([0x29, 0x1, 0x33, 0x1, 0x1f, 0x1, 0xebd, 0x1, 0x1, 0x1, 0x75e, 0x1, 0x9a9, 0x1, 0x37, 0x1, 0xf, 0x1, 0x29b, 0x1, 0x43e, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x50, 0x1, 0x20, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x194, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x40, 0x1, 0x1, 0x1, 0x21, 0x1, 0x425, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1df, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0xcd1f, 0x1, 0xd8, 0x1, 0x1d, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x11, 0x1, 0x1, 0x1, 0x1, 0x1, 0xaa, 0x1, 0x33, 0x1, 0x1f, 0x1, 0x2, 0x1, 0x2, 0x1]);
immutable unicodeHanunoo = RleBitSet!ushort.fromRawArray([0x1720, 0x15]);
immutable unicodePf = RleBitSet!ushort.fromRawArray([0xbb, 0x1, 0x1f5d, 0x1, 0x3, 0x1, 0x1c, 0x1, 0xdc8, 0x1, 0x1, 0x1, 0x4, 0x1, 0x2, 0x1, 0xf, 0x1, 0x3, 0x1]);
immutable unicodePi = RleBitSet!ushort.fromRawArray([0xab, 0x1, 0x1f6c, 0x1, 0x2, 0x2, 0x2, 0x1, 0x19, 0x1, 0xdc8, 0x1, 0x1, 0x1, 0x4, 0x1, 0x2, 0x1, 0xf, 0x1, 0x3, 0x1]);
immutable unicodeSinhala = RleBitSet!ushort.fromRawArray([0xd82, 0x2, 0x1, 0x12, 0x3, 0x18, 0x1, 0x9, 0x1, 0x1, 0x2, 0x7, 0x3, 0x1, 0x4, 0x6, 0x1, 0x1, 0x1, 0x8, 0x12, 0x3]);
immutable unicodeInJavanese = RleBitSet!ushort.fromRawArray([0xa980, 0x60]);
immutable unicodeInTifinagh = RleBitSet!ushort.fromRawArray([0x2d30, 0x50]);
immutable unicodeInGeometric_Shapes = RleBitSet!ushort.fromRawArray([0x25a0, 0x60]);
immutable unicodeInArabic_Presentation_Forms_A = RleBitSet!ushort.fromRawArray([0xfb50, 0x2b0]);
immutable unicodeInArabic_Presentation_Forms_B = RleBitSet!ushort.fromRawArray([0xfe70, 0x90]);
immutable unicodePo = RleBitSet!ushort.fromRawArray([0x21, 0x3, 0x1, 0x3, 0x2, 0x1, 0x1, 0x1, 0x1, 0x2, 0xa, 0x2, 0x3, 0x2, 0x1b, 0x1, 0x44, 0x1, 0x5, 0x1, 0xe, 0x2, 0x7, 0x1, 0x2be, 0x1, 0x8, 0x1, 0x1d2, 0x6, 0x29, 0x1, 0x36, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2c, 0x2, 0x14, 0x2, 0x1, 0x2, 0xd, 0x1, 0x2, 0x2, 0x4a, 0x4, 0x66, 0x1, 0x2b, 0xe, 0xe9, 0x3, 0x36, 0xf, 0x1f, 0x1, 0x105, 0x2, 0xa, 0x1, 0x17f, 0x1, 0x303, 0x1, 0x5a, 0x1, 0xa, 0x2, 0xa8, 0xf, 0x1, 0x1, 0x70, 0x1, 0x4a, 0x5, 0x4, 0x2, 0x6f, 0x6, 0xab, 0x1, 0x264, 0x9, 0x304, 0x2, 0x7c, 0x3, 0x47, 0x2, 0x9d, 0x3, 0x1, 0x3, 0x25, 0x6, 0x1, 0x4, 0x139, 0x2, 0xd8, 0x2, 0x80, 0x7, 0x1, 0x6, 0xac, 0x7, 0x9b, 0x4, 0x3b, 0x5, 0x3e, 0x2, 0x40, 0x8, 0xb, 0x1, 0x342, 0x2, 0x8, 0x8, 0x8, 0x9, 0x2, 0x4, 0x2, 0x3, 0x3, 0xb, 0x1, 0x1, 0x1, 0xa, 0xc9a, 0x4, 0x1, 0x2, 0x70, 0x1, 0x8f, 0x2, 0x4, 0x3, 0x2, 0x1, 0x2, 0x9, 0x1, 0x2, 0x1, 0x1, 0x2, 0x2, 0xa, 0x5, 0x1, 0xa, 0x1c7, 0x3, 0x39, 0x1, 0xbd, 0x1, 0x7402, 0x2, 0x10d, 0x3, 0x63, 0x1, 0xa, 0x1, 0x73, 0x6, 0x17c, 0x4, 0x56, 0x2, 0x28, 0x3, 0x33, 0x2, 0x2f, 0x1, 0x61, 0xd, 0x10, 0x2, 0x7c, 0x4, 0x7e, 0x2, 0x10, 0x2, 0xf9, 0x1, 0x5224, 0x7, 0x2, 0x1, 0x16, 0x1, 0x14, 0x2, 0x2, 0x4, 0x3, 0x3, 0x1, 0x4, 0x7, 0x3, 0x6, 0x1, 0x1, 0x2, 0x95, 0x3, 0x1, 0x3, 0x2, 0x1, 0x1, 0x1, 0x1, 0x2, 0xa, 0x2, 0x3, 0x2, 0x1b, 0x1, 0x24, 0x1, 0x2, 0x2, 0x19a, 0x3, 0x29c, 0x1, 0x30, 0x1, 0x486, 0x1, 0xc7, 0x1, 0x1f, 0x1, 0x110, 0x9, 0x26, 0x1, 0xb9, 0x7, 0x507, 0x7, 0x6d, 0x2, 0x1, 0x4, 0x7e, 0x4, 0x81, 0x4, 0x12a7, 0x4]);
immutable unicodeTerminal_Punctuation = RleBitSet!ushort.fromRawArray([0x21, 0x1, 0xa, 0x1, 0x1, 0x1, 0xb, 0x2, 0x3, 0x1, 0x33e, 0x1, 0x8, 0x1, 0x201, 0x1, 0x39, 0x1, 0x48, 0x1, 0xe, 0x1, 0x3, 0x1, 0xb4, 0x1, 0x2b, 0xb, 0x1, 0x1, 0xeb, 0x2, 0x36, 0xf, 0x1f, 0x1, 0x105, 0x2, 0x4f4, 0x2, 0xac, 0x1, 0x4, 0x6, 0x137, 0x2, 0x315, 0x8, 0x304, 0x2, 0x7c, 0x3, 0xe6, 0x3, 0x3, 0x1, 0x27, 0x4, 0x2, 0x2, 0x13a, 0x2, 0x162, 0x4, 0xae, 0x2, 0x1, 0x3, 0xdb, 0x5, 0x3e, 0x2, 0x3bc, 0x2, 0x9, 0x3, 0xde4, 0x1, 0x1d2, 0x2, 0x74fb, 0x2, 0x10d, 0x3, 0xe3, 0x5, 0x17e, 0x2, 0x56, 0x2, 0x5f, 0x1, 0x97, 0x3, 0x93, 0x3, 0x7f, 0x1, 0x10, 0x2, 0xf9, 0x1, 0x5264, 0x3, 0x1, 0x4, 0xa9, 0x1, 0xa, 0x1, 0x1, 0x1, 0xb, 0x2, 0x3, 0x1, 0x41, 0x1, 0x2, 0x1, 0x43a, 0x1, 0x30, 0x1, 0x486, 0x1, 0xc7, 0x1, 0x21a, 0x6, 0x507, 0x7, 0x70, 0x4, 0x7f, 0x3, 0x81, 0x2, 0x12a9, 0x4]);
immutable unicodePs = RleBitSet!ushort.fromRawArray([0x28, 0x1, 0x32, 0x1, 0x1f, 0x1, 0xebe, 0x1, 0x1, 0x1, 0x75e, 0x1, 0x97e, 0x1, 0x3, 0x1, 0x26, 0x1, 0x37, 0x1, 0xf, 0x1, 0x29b, 0x1, 0x43e, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x50, 0x1, 0x20, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x194, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x40, 0x1, 0x1, 0x1, 0x21, 0x1, 0x425, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1df, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0xcd20, 0x1, 0xd8, 0x1, 0x1d, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x11, 0x1, 0x1, 0x1, 0x1, 0x1, 0xaa, 0x1, 0x32, 0x1, 0x1f, 0x1, 0x3, 0x1, 0x2, 0x1]);
immutable unicodeInSpacing_Modifier_Letters = RleBitSet!ushort.fromRawArray([0x2b0, 0x50]);
immutable unicodeOther_Alphabetic = RleBitSet!ushort.fromRawArray([0x345, 0x1, 0x26a, 0xe, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x48, 0xb, 0x30, 0xd, 0x1, 0x7, 0x10, 0x1, 0x65, 0x7, 0x4, 0x4, 0x2, 0x2, 0x4, 0x1, 0x23, 0x1, 0x1e, 0x10, 0x66, 0xb, 0x65, 0x2, 0x3, 0x9, 0x1, 0x3, 0x1, 0x4, 0xb7, 0x6, 0x6, 0xf, 0x1, 0x4, 0x36, 0x2, 0x2, 0xf, 0x1, 0x2, 0x5, 0x3, 0xa, 0x2, 0x1d, 0x3, 0x3a, 0x7, 0x2, 0x2, 0x2, 0x2, 0xa, 0x1, 0xa, 0x2, 0x1d, 0x3, 0x3a, 0x5, 0x4, 0x2, 0x2, 0x2, 0x4, 0x1, 0x1e, 0x2, 0x3, 0x1, 0xb, 0x3, 0x3a, 0x8, 0x1, 0x3, 0x1, 0x2, 0x15, 0x2, 0x1d, 0x3, 0x3a, 0x7, 0x2, 0x2, 0x2, 0x2, 0x9, 0x2, 0xa, 0x2, 0x1e, 0x1, 0x3b, 0x5, 0x3, 0x3, 0x1, 0x3, 0xa, 0x1, 0x29, 0x3, 0x3a, 0x7, 0x1, 0x3, 0x1, 0x3, 0x8, 0x2, 0xb, 0x2, 0x1e, 0x2, 0x3a, 0x7, 0x1, 0x3, 0x1, 0x3, 0x8, 0x2, 0xb, 0x2, 0x1e, 0x2, 0x3a, 0x7, 0x1, 0x3, 0x1, 0x3, 0xa, 0x1, 0xa, 0x2, 0x1e, 0x2, 0x4b, 0x6, 0x1, 0x1, 0x1, 0x8, 0x12, 0x2, 0x3d, 0x1, 0x2, 0x7, 0x12, 0x1, 0x63, 0x1, 0x2, 0x6, 0x1, 0x2, 0x10, 0x1, 0xa3, 0x11, 0xb, 0xb, 0x1, 0x24, 0x6e, 0xc, 0x1, 0x1, 0x2, 0x4, 0x17, 0x4, 0x4, 0x3, 0x1, 0x1, 0x4, 0x2, 0x8, 0x4, 0xd, 0x5, 0x15, 0x2, 0x2c1, 0x1, 0x3b2, 0x2, 0x1e, 0x2, 0x1e, 0x2, 0x1e, 0x2, 0x42, 0x13, 0xe0, 0x1, 0x76, 0xc, 0x4, 0x9, 0x77, 0x11, 0x7, 0x2, 0x4d, 0x5, 0x39, 0xa, 0x2, 0x14, 0x8b, 0x5, 0x30, 0xf, 0x3c, 0x3, 0x1e, 0x9, 0x2, 0x2, 0x39, 0xb, 0x32, 0x12, 0xbc, 0x2, 0x7c2, 0x34, 0x8f6, 0x20, 0x7874, 0x8, 0x23, 0x1, 0x183, 0x5, 0x58, 0x2, 0x32, 0x10, 0x62, 0x5, 0x1c, 0xc, 0x2d, 0x4, 0x30, 0xc, 0x69, 0xe, 0xc, 0x1, 0x8, 0x2, 0x62, 0x1, 0x1, 0x3, 0x2, 0x2, 0x5, 0x1, 0x2c, 0x5, 0x5, 0x1, 0xed, 0x8, 0x4f33, 0x1, 0xee2, 0x3, 0x1, 0x2, 0x5, 0x4, 0x5f0, 0x3, 0x35, 0xe, 0x3c, 0x1, 0x2d, 0x9, 0x47, 0x3, 0x24, 0xc, 0x4d, 0x3, 0x30, 0xd, 0x4eb, 0xb, 0x589b, 0x2e]);
immutable unicodeLepcha = RleBitSet!ushort.fromRawArray([0x1c00, 0x38, 0x3, 0xf, 0x3, 0x3]);
immutable unicodeKayah_Li = RleBitSet!ushort.fromRawArray([0xa900, 0x30]);
immutable unicodeNko = RleBitSet!ushort.fromRawArray([0x7c0, 0x3b]);
immutable unicodeInLao = RleBitSet!ushort.fromRawArray([0xe80, 0x80]);
immutable unicodeInNKo = RleBitSet!ushort.fromRawArray([0x7c0, 0x40]);
immutable unicodeInGreek_and_Coptic = RleBitSet!ushort.fromRawArray([0x370, 0x90]);
immutable unicodePhags_Pa = RleBitSet!ushort.fromRawArray([0xa840, 0x38]);
immutable unicodeCypriot = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x801, 0x6, 0x2, 0x1, 0x1, 0x2c, 0x1, 0x2, 0x3, 0x1, 0x2, 0x1]);
immutable unicodeInModifier_Tone_Letters = RleBitSet!ushort.fromRawArray([0xa700, 0x20]);
immutable unicodeMyanmar = RleBitSet!ushort.fromRawArray([0x1000, 0xa0, 0x99c0, 0x1c]);
immutable unicodeSc = RleBitSet!ushort.fromRawArray([0x24, 0x1, 0x7d, 0x4, 0x4e9, 0x1, 0x7b, 0x1, 0x3e6, 0x2, 0x7, 0x1, 0xf5, 0x1, 0x107, 0x1, 0x245, 0x1, 0x99b, 0x1, 0x8c4, 0x1b, 0x877d, 0x1, 0x55c3, 0x1, 0x6c, 0x1, 0x9a, 0x1, 0xdb, 0x2, 0x3, 0x2]);
immutable unicodeInPrivate_Use_Area = RleBitSet!ushort.fromRawArray([0xe000, 0x1900]);
immutable unicodeInPhonetic_Extensions = RleBitSet!ushort.fromRawArray([0x1d00, 0x80]);
immutable unicodeInCombining_Diacritical_Marks = RleBitSet!ushort.fromRawArray([0x300, 0x70]);
immutable unicodeCham = RleBitSet!ushort.fromRawArray([0xaa00, 0x37, 0x9, 0xe, 0x2, 0xa, 0x2, 0x4]);
immutable unicodeInArabic_Supplement = RleBitSet!ushort.fromRawArray([0x750, 0x30]);
immutable unicodeSk = RleBitSet!ushort.fromRawArray([0x5e, 0x1, 0x1, 0x1, 0x47, 0x1, 0x6, 0x1, 0x4, 0x1, 0x3, 0x1, 0x209, 0x4, 0xc, 0xe, 0x5, 0x7, 0x1, 0x1, 0x1, 0x11, 0x75, 0x1, 0xe, 0x2, 0x1c37, 0x1, 0x1, 0x3, 0xb, 0x3, 0xd, 0x3, 0xd, 0x3, 0xd, 0x2, 0x109c, 0x2, 0x7663, 0x17, 0x9, 0x2, 0x67, 0x2, 0x5427, 0x10, 0x37c, 0x1, 0x1, 0x1, 0xa2, 0x1]);
immutable unicodeImperial_Aramaic = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x841, 0x16, 0x1, 0x9]);
immutable unicodeSm = RleBitSet!ushort.fromRawArray([0x2b, 0x1, 0x10, 0x3, 0x3d, 0x1, 0x1, 0x1, 0x2d, 0x1, 0x4, 0x1, 0x25, 0x1, 0x1f, 0x1, 0x2fe, 0x1, 0x20f, 0x3, 0x1a3b, 0x1, 0xd, 0x1, 0x27, 0x3, 0xd, 0x3, 0x8b, 0x1, 0x27, 0x5, 0x6, 0x1, 0x44, 0x5, 0x5, 0x2, 0x4, 0x1, 0x2, 0x1, 0x2, 0x1, 0x7, 0x1, 0x1f, 0x2, 0x2, 0x1, 0x1, 0x1, 0x1f, 0x10c, 0x8, 0x4, 0x14, 0x2, 0x5a, 0x1, 0x1e, 0x19, 0x28, 0x6, 0x1d5, 0x1, 0x9, 0x1, 0x36, 0x8, 0x6f, 0x1, 0x150, 0x5, 0x2, 0x1f, 0xa, 0x10, 0x100, 0x83, 0x16, 0x3f, 0x4, 0x20, 0x2, 0x102, 0x30, 0x15, 0x2, 0x6, 0xcfdc, 0x1, 0x338, 0x1, 0x1, 0x3, 0xa4, 0x1, 0x10, 0x3, 0x3d, 0x1, 0x1, 0x1, 0x83, 0x1, 0x6, 0x4, 0xd6d4, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x172c, 0x2]);
immutable unicodeKharoshthi = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0xa01, 0x4, 0x1, 0x2, 0x5, 0x8, 0x1, 0x3, 0x1, 0x1b, 0x4, 0x3, 0x4, 0x9, 0x8, 0x9]);
immutable unicodeInCombining_Half_Marks = RleBitSet!ushort.fromRawArray([0xfe20, 0x10]);
immutable unicodeSo = RleBitSet!ushort.fromRawArray([0xa6, 0x1, 0x2, 0x1, 0x4, 0x1, 0x1, 0x1, 0x3d1, 0x1, 0x18b, 0x2, 0xce, 0x1, 0xa, 0x1, 0x13, 0x2, 0xf7, 0x1, 0x203, 0x1, 0x175, 0x1, 0x82, 0x6, 0x1, 0x1, 0x84, 0x1, 0xf9, 0x1, 0x187, 0x3, 0xf, 0x1, 0x1, 0x3, 0x2, 0x6, 0x14, 0x1, 0x1, 0x1, 0x1, 0x1, 0x85, 0x8, 0x1, 0x6, 0x1, 0x2, 0x5, 0x4, 0xc5, 0x2, 0x2f0, 0xa, 0x5a6, 0x1, 0x9d, 0x22, 0x161, 0xa, 0x9, 0x9, 0x583, 0x2, 0x1, 0x4, 0x1, 0x2, 0xa, 0x1, 0x1, 0x2, 0x6, 0x6, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x1, 0xb, 0x2, 0xe, 0x1, 0x1, 0x2, 0x1, 0x1, 0x45, 0x5, 0x2, 0x4, 0x1, 0x2, 0x1, 0x2, 0x1, 0x7, 0x1, 0x1f, 0x2, 0x2, 0x1, 0x1, 0x1, 0x1f, 0x10c, 0x8, 0x4, 0x14, 0x2, 0x7, 0x2, 0x51, 0x1, 0x1e, 0x19, 0x28, 0x6, 0x12, 0xc, 0x27, 0x19, 0xb, 0x51, 0x4e, 0x16, 0xb7, 0x1, 0x9, 0x1, 0x36, 0x8, 0x6f, 0x1, 0x90, 0x1, 0x67, 0x2c, 0x2c, 0x40, 0x100, 0x200, 0x30, 0x15, 0x2, 0x9, 0xa, 0x18b, 0x6, 0x195, 0x1a, 0x1, 0x59, 0xc, 0xd6, 0x1a, 0xc, 0x8, 0x1, 0xd, 0x2, 0xc, 0x1, 0x15, 0x2, 0x6, 0x2, 0x150, 0x2, 0x4, 0xa, 0x20, 0x24, 0x1c, 0x1f, 0xb, 0x1e, 0x8, 0x1, 0xf, 0x20, 0xa, 0x27, 0xf, 0x3f, 0x1, 0x100, 0x19c0, 0x40, 0x5690, 0x37, 0x361, 0x4, 0xa, 0x2, 0x1, 0x1, 0x23d, 0x3, 0x5383, 0x1, 0x1e6, 0x1, 0x3, 0x1, 0x4, 0x2, 0xd, 0x2, 0x139, 0x9, 0x39, 0x11, 0x6, 0xc, 0x34, 0x2d, 0xce03, 0xf6, 0xa, 0x27, 0x2, 0x3c, 0x5, 0x3, 0x16, 0x2, 0x7, 0x1e, 0x4, 0x30, 0x22, 0x42, 0x3, 0x1, 0xba, 0x57, 0x1ca9, 0x2c, 0x4, 0x64, 0xc, 0xf, 0x2, 0xe, 0x2, 0xf, 0x1, 0xf, 0x30, 0x1f, 0x1, 0x3c, 0x4, 0x2b, 0x4b, 0x1d, 0xd, 0x2b, 0x5, 0x9, 0x7, 0x2, 0xae, 0x21, 0xf, 0x6, 0x1, 0x46, 0x3, 0x14, 0xc, 0x25, 0x1, 0x5, 0x15, 0x11, 0xf, 0x3f, 0x1, 0x1, 0x1, 0xb6, 0x1, 0x4, 0x3, 0x3e, 0x2, 0x4, 0xc, 0x18, 0x93, 0x46, 0x4, 0xb, 0x30, 0x46, 0x3a, 0x74]);
immutable unicodeInTai_Le = RleBitSet!ushort.fromRawArray([0x1950, 0x30]);
immutable unicodeInMandaic = RleBitSet!ushort.fromRawArray([0x840, 0x20]);
immutable unicodeCase_Ignorable = RleBitSet!ushort.fromRawArray([0x27, 0x1, 0x6, 0x1, 0xb, 0x1, 0x23, 0x1, 0x1, 0x1, 0x47, 0x1, 0x4, 0x1, 0x1, 0x1, 0x4, 0x1, 0x2, 0x2, 0x1f7, 0xc0, 0x4, 0x2, 0x4, 0x1, 0x9, 0x2, 0x1, 0x1, 0xfb, 0x7, 0xcf, 0x1, 0x37, 0x2d, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x2c, 0x1, 0xb, 0x5, 0xb, 0xb, 0x25, 0x1, 0xa, 0x15, 0x10, 0x1, 0x65, 0x8, 0x1, 0xa, 0x1, 0x4, 0x21, 0x1, 0x1, 0x1, 0x1e, 0x1b, 0x5b, 0xb, 0x3a, 0xb, 0x4, 0x1, 0x1b, 0x18, 0x2b, 0x3, 0x88, 0x1b, 0x1, 0x3, 0x37, 0x1, 0x1, 0x1, 0x4, 0x8, 0x4, 0x1, 0x3, 0x7, 0xa, 0x2, 0xd, 0x1, 0xf, 0x1, 0x3a, 0x1, 0x4, 0x4, 0x8, 0x1, 0x14, 0x2, 0x1d, 0x2, 0x39, 0x1, 0x4, 0x2, 0x4, 0x2, 0x2, 0x3, 0x3, 0x1, 0x1e, 0x2, 0x3, 0x1, 0xb, 0x2, 0x39, 0x1, 0x4, 0x5, 0x1, 0x2, 0x4, 0x1, 0x14, 0x2, 0x1d, 0x1, 0x3a, 0x1, 0x2, 0x1, 0x1, 0x4, 0x8, 0x1, 0x8, 0x1, 0xb, 0x2, 0x1e, 0x1, 0x3d, 0x1, 0xc, 0x1, 0x70, 0x3, 0x5, 0x3, 0x1, 0x4, 0x7, 0x2, 0xb, 0x2, 0x58, 0x1, 0x2, 0x1, 0x6, 0x1, 0x5, 0x2, 0x14, 0x2, 0x5d, 0x4, 0x8, 0x1, 0x14, 0x2, 0x66, 0x1, 0x7, 0x3, 0x1, 0x1, 0x5a, 0x1, 0x2, 0x7, 0xb, 0x9, 0x62, 0x1, 0x2, 0x6, 0x1, 0x2, 0x9, 0x1, 0x1, 0x6, 0x4a, 0x2, 0x1b, 0x1, 0x1, 0x1, 0x1, 0x1, 0x37, 0xe, 0x1, 0x5, 0x1, 0x2, 0x5, 0xb, 0x1, 0x24, 0x9, 0x1, 0x66, 0x4, 0x1, 0x6, 0x1, 0x2, 0x2, 0x2, 0x19, 0x2, 0x4, 0x3, 0x10, 0x4, 0xd, 0x1, 0x2, 0x2, 0x6, 0x1, 0xf, 0x1, 0x5e, 0x1, 0x260, 0x3, 0x3b2, 0x3, 0x1d, 0x3, 0x1d, 0x2, 0x1e, 0x2, 0x40, 0x2, 0x1, 0x7, 0x8, 0x1, 0x2, 0xb, 0x3, 0x1, 0x5, 0x1, 0x2d, 0x3, 0x35, 0x1, 0x65, 0x1, 0x76, 0x3, 0x4, 0x2, 0x9, 0x1, 0x6, 0x3, 0xdb, 0x2, 0x3d, 0x1, 0x1, 0x7, 0x1, 0x1, 0x1, 0x1, 0x2, 0x8, 0x6, 0xa, 0x2, 0x1, 0x27, 0x1, 0x58, 0x4, 0x30, 0x1, 0x1, 0x5, 0x1, 0x1, 0x5, 0x1, 0x28, 0x9, 0xc, 0x2, 0x20, 0x4, 0x2, 0x2, 0x1, 0x1, 0x3a, 0x1, 0x1, 0x2, 0x3, 0x1, 0x1, 0x3, 0x3a, 0x8, 0x2, 0x2, 0x40, 0x6, 0x52, 0x3, 0x1, 0xd, 0x1, 0x7, 0x4, 0x1, 0x6, 0x1, 0x37, 0x3f, 0xd, 0x1, 0x22, 0x4c, 0x15, 0x4, 0x1bd, 0x1, 0x1, 0x3, 0xb, 0x3, 0xd, 0x3, 0xd, 0x3, 0xd, 0x2, 0xc, 0x5, 0x8, 0x2, 0xa, 0x1, 0x2, 0x1, 0x2, 0x5, 0x31, 0x5, 0x5, 0x6, 0x1, 0x1, 0xd, 0x1, 0x10, 0xd, 0x33, 0x21, 0xb8b, 0x2, 0x71, 0x3, 0x7d, 0x1, 0xf, 0x1, 0x60, 0x20, 0x2f, 0x1, 0x1d5, 0x1, 0x24, 0x4, 0x3, 0x5, 0x5, 0x1, 0x5d, 0x6, 0x5d, 0x3, 0x6f16, 0x1, 0x4e2, 0x6, 0x10e, 0x1, 0x62, 0x4, 0x1, 0xa, 0x1, 0x1, 0x1f, 0x1, 0x50, 0x2, 0xe, 0x22, 0x4e, 0x1, 0x17, 0x3, 0x6d, 0x2, 0x8, 0x1, 0x3, 0x1, 0x4, 0x1, 0x19, 0x2, 0x9d, 0x1, 0x1b, 0x12, 0x34, 0x8, 0x19, 0xb, 0x2e, 0x3, 0x30, 0x1, 0x2, 0x4, 0x2, 0x1, 0x12, 0x1, 0x59, 0x6, 0x2, 0x2, 0x2, 0x2, 0xc, 0x1, 0x8, 0x1, 0x23, 0x1, 0x3f, 0x1, 0x1, 0x3, 0x2, 0x2, 0x5, 0x2, 0x1, 0x1, 0x1b, 0x1, 0xe, 0x2, 0x5, 0x2, 0x1, 0x1, 0xee, 0x1, 0x2, 0x1, 0x4, 0x1, 0x4f30, 0x1, 0x93, 0x10, 0x23e, 0x10, 0x3, 0x1, 0xc, 0x7, 0x2b, 0x1, 0x2, 0x1, 0xa9, 0x1, 0x7, 0x1, 0x6, 0x1, 0xb, 0x1, 0x23, 0x1, 0x1, 0x1, 0x2f, 0x1, 0x2d, 0x2, 0x43, 0x1, 0x15, 0x3, 0x201, 0x1, 0x803, 0x3, 0x1, 0x2, 0x5, 0x4, 0x28, 0x3, 0x4, 0x1, 0x5c1, 0x1, 0x36, 0xf, 0x39, 0x2, 0x31, 0x4, 0x2, 0x2, 0x2, 0x1, 0x42, 0x3, 0x24, 0x5, 0x1, 0x8, 0x4b, 0x2, 0x34, 0x9, 0x4ec, 0x1, 0x1, 0x1, 0x2, 0x6, 0x1, 0x1, 0x58d7, 0x11, 0x61c7, 0x3, 0x9, 0x10, 0x2, 0x7, 0x1e, 0x4, 0x94, 0x3, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0x2dc8, 0x1, 0x1e, 0x60, 0x80, 0xf0]);
immutable unicodeInLepcha = RleBitSet!ushort.fromRawArray([0x1c00, 0x50]);
immutable unicodeCanadian_Aboriginal = RleBitSet!ushort.fromRawArray([0x1400, 0x280, 0x230, 0x46]);
immutable unicodeInGreek_Extended = RleBitSet!ushort.fromRawArray([0x1f00, 0x100]);
immutable unicodeInCJK_Unified_Ideographs = RleBitSet!ushort.fromRawArray([0x4e00, 0x5200]);
immutable unicodeIDS_Trinary_Operator = RleBitSet!ushort.fromRawArray([0x2ff2, 0x2]);
immutable unicodeInMiscellaneous_Symbols = RleBitSet!ushort.fromRawArray([0x2600, 0x100]);
immutable unicodeInLatin_Extended_Additional = RleBitSet!ushort.fromRawArray([0x1e00, 0x100]);
immutable unicodeChakma = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x1101, 0x35, 0x1, 0xe]);
immutable unicodeRadical = RleBitSet!ushort.fromRawArray([0x2e80, 0x1a, 0x1, 0x59, 0xc, 0xd6]);
immutable unicodeMongolian = RleBitSet!ushort.fromRawArray([0x1800, 0x2, 0x2, 0x1, 0x1, 0x9, 0x1, 0xa, 0x6, 0x58, 0x8, 0x2b]);
immutable unicodeInVai = RleBitSet!ushort.fromRawArray([0xa500, 0x140]);
immutable unicodeLatin = RleBitSet!ushort.fromRawArray([0x41, 0x1a, 0x6, 0x1a, 0x2f, 0x1, 0xf, 0x1, 0x5, 0x17, 0x1, 0x1f, 0x1, 0x1c1, 0x27, 0x5, 0x1a1b, 0x26, 0x6, 0x31, 0x5, 0x4, 0x5, 0xd, 0x1, 0x46, 0x41, 0x100, 0x171, 0x1, 0xd, 0x1, 0x10, 0xd, 0x8d, 0x2, 0x6, 0x1, 0x1b, 0x1, 0x11, 0x29, 0xad7, 0x20, 0x7aa2, 0x66, 0x3, 0x4, 0x1, 0x4, 0xc, 0xb, 0x4d, 0x8, 0x5300, 0x7, 0x41a, 0x1a, 0x6, 0x1a]);
immutable unicodeTagalog = RleBitSet!ushort.fromRawArray([0x1700, 0xd, 0x1, 0x7]);
immutable unicodeRejang = RleBitSet!ushort.fromRawArray([0xa930, 0x24, 0xb, 0x1]);
immutable unicodeInCombining_Diacritical_Marks_for_Symbols = RleBitSet!ushort.fromRawArray([0x20d0, 0x30]);
immutable unicodeInSupplemental_Mathematical_Operators = RleBitSet!ushort.fromRawArray([0x2a00, 0x100]);
immutable unicodeInCham = RleBitSet!ushort.fromRawArray([0xaa00, 0x60]);
immutable unicodeAvestan = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0xb01, 0x36, 0x3, 0x7]);
immutable unicodeInMiscellaneous_Mathematical_Symbols_A = RleBitSet!ushort.fromRawArray([0x27c0, 0x30]);
immutable unicodeInMiscellaneous_Mathematical_Symbols_B = RleBitSet!ushort.fromRawArray([0x2980, 0x80]);
immutable unicodeInTelugu = RleBitSet!ushort.fromRawArray([0xc00, 0x80]);
immutable unicodeLimbu = RleBitSet!ushort.fromRawArray([0x1900, 0x1d, 0x3, 0xc, 0x4, 0xc, 0x4, 0x1, 0x3, 0xc]);
immutable unicodeInGeneral_Punctuation = RleBitSet!ushort.fromRawArray([0x2000, 0x70]);
immutable unicodeUnified_Ideograph = RleBitSet!ushort.fromRawArray([0x3400, 0x19b6, 0x4a, 0x51cd, 0x5a41, 0x2, 0x1, 0x1, 0x1, 0x2, 0xa, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x3, 0xffff, 0x0, 0x5d7, 0xa6d7, 0x29, 0x1035, 0xb, 0xde]);
immutable unicodeInBuhid = RleBitSet!ushort.fromRawArray([0x1740, 0x20]);
immutable unicodeKhmer = RleBitSet!ushort.fromRawArray([0x1780, 0x5e, 0x2, 0xa, 0x6, 0xa, 0x1e6, 0x20]);
immutable unicodeXID_Continue = RleBitSet!ushort.fromRawArray([0x30, 0xa, 0x7, 0x1a, 0x4, 0x1, 0x1, 0x1a, 0x2f, 0x1, 0xa, 0x1, 0x1, 0x1, 0x2, 0x1, 0x5, 0x17, 0x1, 0x1f, 0x1, 0x1ca, 0x4, 0xc, 0xe, 0x5, 0x7, 0x1, 0x1, 0x1, 0x11, 0x75, 0x1, 0x2, 0x3, 0x3, 0x8, 0x5, 0x1, 0x1, 0x1, 0x14, 0x1, 0x53, 0x1, 0x8b, 0x1, 0x5, 0x2, 0x9e, 0x9, 0x26, 0x2, 0x1, 0x7, 0x27, 0x9, 0x2d, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x8, 0x1b, 0x5, 0x3, 0x1d, 0xb, 0x5, 0x4a, 0x4, 0x66, 0x1, 0x8, 0x2, 0xa, 0x1, 0x13, 0x2, 0x1, 0x10, 0x3b, 0x2, 0x65, 0xe, 0x36, 0x4, 0x1, 0x5, 0x2e, 0x12, 0x1c, 0x44, 0x1, 0x1, 0xb, 0x37, 0x1b, 0x1, 0x64, 0x2, 0xa, 0x1, 0x7, 0x1, 0x7, 0x1, 0x3, 0x1, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x1, 0x3, 0x4, 0x2, 0x9, 0x2, 0x2, 0x2, 0x4, 0x8, 0x1, 0x4, 0x2, 0x1, 0x5, 0x2, 0xc, 0xf, 0x3, 0x1, 0x6, 0x4, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x2, 0x1, 0x1, 0x5, 0x4, 0x2, 0x2, 0x3, 0x3, 0x1, 0x7, 0x4, 0x1, 0x1, 0x7, 0x10, 0xb, 0x3, 0x1, 0x9, 0x1, 0x3, 0x1, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x2, 0xa, 0x1, 0x3, 0x1, 0x3, 0x2, 0x1, 0xf, 0x4, 0x2, 0xa, 0x11, 0x3, 0x1, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x2, 0x9, 0x2, 0x2, 0x2, 0x3, 0x8, 0x2, 0x4, 0x2, 0x1, 0x5, 0x2, 0xa, 0x1, 0x1, 0x10, 0x2, 0x1, 0x6, 0x3, 0x3, 0x1, 0x4, 0x3, 0x2, 0x1, 0x1, 0x1, 0x2, 0x3, 0x2, 0x3, 0x3, 0x3, 0xc, 0x4, 0x5, 0x3, 0x3, 0x1, 0x4, 0x2, 0x1, 0x6, 0x1, 0xe, 0xa, 0x11, 0x3, 0x1, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x8, 0x1, 0x3, 0x1, 0x4, 0x7, 0x2, 0x1, 0x2, 0x6, 0x4, 0x2, 0xa, 0x12, 0x2, 0x1, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x2, 0x9, 0x1, 0x3, 0x1, 0x4, 0x7, 0x2, 0x7, 0x1, 0x1, 0x4, 0x2, 0xa, 0x1, 0x2, 0xf, 0x2, 0x1, 0x8, 0x1, 0x3, 0x1, 0x29, 0x2, 0x8, 0x1, 0x3, 0x1, 0x5, 0x8, 0x1, 0x8, 0x4, 0x2, 0xa, 0xa, 0x6, 0x2, 0x2, 0x1, 0x12, 0x3, 0x18, 0x1, 0x9, 0x1, 0x1, 0x2, 0x7, 0x3, 0x1, 0x4, 0x6, 0x1, 0x1, 0x1, 0x8, 0x12, 0x2, 0xd, 0x3a, 0x5, 0xf, 0x1, 0xa, 0x27, 0x2, 0x1, 0x1, 0x2, 0x2, 0x1, 0x1, 0x2, 0x1, 0x6, 0x4, 0x1, 0x7, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x1, 0xd, 0x1, 0x3, 0x2, 0x5, 0x1, 0x1, 0x1, 0x6, 0x2, 0xa, 0x2, 0x4, 0x20, 0x1, 0x17, 0x2, 0x6, 0xa, 0xb, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0xa, 0x1, 0x24, 0x4, 0x14, 0x1, 0x12, 0x1, 0x24, 0x9, 0x1, 0x39, 0x4a, 0x6, 0x4e, 0x2, 0x26, 0x1, 0x1, 0x5, 0x1, 0x2, 0x2b, 0x1, 0x14d, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0x29, 0x1, 0x4, 0x2, 0x21, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0xf, 0x1, 0x39, 0x1, 0x4, 0x2, 0x43, 0x2, 0x3, 0x9, 0x9, 0xe, 0x10, 0x10, 0x55, 0xc, 0x26c, 0x2, 0x11, 0x1, 0x1a, 0x5, 0x4b, 0x3, 0x3, 0xf, 0xd, 0x1, 0x7, 0xb, 0x15, 0xb, 0x14, 0xc, 0xd, 0x1, 0x3, 0x1, 0x2, 0xc, 0x54, 0x3, 0x1, 0x4, 0x2, 0x2, 0xa, 0x21, 0x3, 0x2, 0xa, 0x6, 0x58, 0x8, 0x2b, 0x5, 0x46, 0xa, 0x1d, 0x3, 0xc, 0x4, 0xc, 0xa, 0x28, 0x2, 0x5, 0xb, 0x2c, 0x4, 0x1a, 0x6, 0xb, 0x25, 0x1c, 0x4, 0x3f, 0x1, 0x1d, 0x2, 0xb, 0x6, 0xa, 0xd, 0x1, 0x58, 0x4c, 0x4, 0xa, 0x11, 0x9, 0xc, 0x74, 0xc, 0x38, 0x8, 0xa, 0x3, 0x31, 0x52, 0x3, 0x1, 0x23, 0x9, 0xe7, 0x15, 0x11a, 0x2, 0x6, 0x2, 0x26, 0x2, 0x6, 0x2, 0x8, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1f, 0x2, 0x35, 0x1, 0x7, 0x1, 0x1, 0x3, 0x3, 0x1, 0x7, 0x3, 0x4, 0x2, 0x6, 0x4, 0xd, 0x5, 0x3, 0x1, 0x7, 0x42, 0x2, 0x13, 0x1, 0x1c, 0x1, 0xd, 0x1, 0x10, 0xd, 0x33, 0xd, 0x4, 0x1, 0x3, 0xc, 0x11, 0x1, 0x4, 0x1, 0x2, 0xa, 0x1, 0x1, 0x2, 0x6, 0x6, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x10, 0x2, 0x4, 0x5, 0x5, 0x4, 0x1, 0x11, 0x29, 0xa77, 0x2f, 0x1, 0x2f, 0x1, 0x85, 0x6, 0x9, 0xc, 0x26, 0x1, 0x1, 0x5, 0x1, 0x2, 0x38, 0x7, 0x1, 0xf, 0x18, 0x9, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x20, 0x205, 0x3, 0x19, 0xf, 0x1, 0x5, 0x2, 0x5, 0x4, 0x56, 0x2, 0x2, 0x2, 0x3, 0x1, 0x5a, 0x1, 0x4, 0x5, 0x29, 0x3, 0x5e, 0x11, 0x1b, 0x35, 0x10, 0x200, 0x19b6, 0x4a, 0x51cd, 0x33, 0x48d, 0x43, 0x2e, 0x2, 0x10d, 0x3, 0x1c, 0x14, 0x30, 0x4, 0xa, 0x1, 0x19, 0x7, 0x53, 0x25, 0x9, 0x2, 0x67, 0x2, 0x4, 0x1, 0x4, 0xc, 0xb, 0x4d, 0x30, 0x18, 0x34, 0xc, 0x45, 0xb, 0xa, 0x6, 0x18, 0x3, 0x1, 0x4, 0x2e, 0x2, 0x24, 0xc, 0x1d, 0x3, 0x41, 0xe, 0xb, 0x26, 0x37, 0x9, 0xe, 0x2, 0xa, 0x6, 0x17, 0x3, 0x2, 0x4, 0x43, 0x18, 0x3, 0x2, 0x10, 0x2, 0x5, 0xa, 0x6, 0x2, 0x6, 0x2, 0x6, 0x9, 0x7, 0x1, 0x7, 0x91, 0x2b, 0x1, 0x2, 0x2, 0xa, 0x6, 0x2ba4, 0xc, 0x17, 0x4, 0x31, 0x2104, 0x16e, 0x2, 0x6a, 0x26, 0x7, 0xc, 0x5, 0x5, 0xc, 0x1, 0xd, 0x1, 0x5, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x6c, 0x21, 0x8b, 0x6, 0xda, 0x12, 0x40, 0x2, 0x36, 0x28, 0xa, 0x6, 0x10, 0x10, 0x7, 0xc, 0x2, 0x18, 0x3, 0x21, 0x1, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x7e, 0x13, 0xa, 0x7, 0x1a, 0x4, 0x1, 0x1, 0x1a, 0xb, 0x59, 0x3, 0x6, 0x2, 0x6, 0x2, 0x6, 0x2, 0x3, 0x23, 0xc, 0x1, 0x1a, 0x1, 0x13, 0x1, 0x2, 0x1, 0xf, 0x2, 0xe, 0x22, 0x7b, 0x45, 0x35, 0x88, 0x1, 0x82, 0x1d, 0x3, 0x31, 0x2f, 0x1f, 0x11, 0x1b, 0x35, 0x1e, 0x2, 0x24, 0x4, 0x8, 0x1, 0x5, 0x2a, 0x9e, 0x2, 0xa, 0x356, 0x6, 0x2, 0x1, 0x1, 0x2c, 0x1, 0x2, 0x3, 0x1, 0x2, 0x17, 0xaa, 0x16, 0xa, 0x1a, 0x46, 0x38, 0x6, 0x2, 0x40, 0x4, 0x1, 0x2, 0x5, 0x8, 0x1, 0x3, 0x1, 0x1b, 0x4, 0x3, 0x4, 0x1, 0x20, 0x1d, 0x83, 0x36, 0xa, 0x16, 0xa, 0x13, 0x8d, 0x49, 0x3b7, 0x47, 0x1f, 0xa, 0x10, 0x3b, 0x15, 0x19, 0x7, 0xa, 0x6, 0x35, 0x1, 0xa, 0x40, 0x45, 0xb, 0xa, 0x4a6, 0x38, 0x8, 0xa, 0x936, 0x36f, 0x91, 0x63, 0xb9d, 0x42f, 0x33d1, 0x239, 0x4c7, 0x45, 0xb, 0x2f, 0x10, 0x11, 0x4060, 0x2, 0x2163, 0x5, 0x3, 0x6, 0x8, 0x8, 0x2, 0x7, 0x1e, 0x4, 0x94, 0x3, 0x1bb, 0x55, 0x1, 0x47, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0xc, 0x1, 0x1, 0x1, 0x7, 0x1, 0x41, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1, 0x1c, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1, 0x154, 0x2, 0x19, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x8, 0x2, 0x32, 0x1600, 0x4, 0x1, 0x1b, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0xa, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x6, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x4, 0x1, 0x7, 0x1, 0x4, 0x1, 0x4, 0x1, 0x1, 0x1, 0xa, 0x1, 0x11, 0x5, 0x3, 0x1, 0x5, 0x1, 0x11, 0x1144, 0xa6d7, 0x29, 0x1035, 0xb, 0xde, 0x3fe2, 0x21e, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0x6ed, 0xf0]);
immutable unicodeInLatin_Extended_A = RleBitSet!ushort.fromRawArray([0x100, 0x80]);
immutable unicodeInLatin_Extended_B = RleBitSet!ushort.fromRawArray([0x180, 0xd0]);
immutable unicodeInLatin_Extended_C = RleBitSet!ushort.fromRawArray([0x2c60, 0x20]);
immutable unicodeInLatin_Extended_D = RleBitSet!ushort.fromRawArray([0xa720, 0xe0]);
immutable unicodeInCJK_Compatibility = RleBitSet!ushort.fromRawArray([0x3300, 0x100]);
immutable unicodeBuginese = RleBitSet!ushort.fromRawArray([0x1a00, 0x1c, 0x2, 0x2]);
immutable unicodeInGeorgian_Supplement = RleBitSet!ushort.fromRawArray([0x2d00, 0x30]);
immutable unicodeDefault_Ignorable_Code_Point = RleBitSet!ushort.fromRawArray([0xad, 0x1, 0x2a1, 0x1, 0xe0f, 0x2, 0x653, 0x2, 0x55, 0x3, 0x7fd, 0x5, 0x1a, 0x5, 0x31, 0x10, 0x10f4, 0x1, 0xcc9b, 0x10, 0xef, 0x1, 0xa0, 0x1, 0x4f, 0x9, 0xd17a, 0x8, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0x2e91, 0x1000]);
immutable unicodeInCJK_Strokes = RleBitSet!ushort.fromRawArray([0x31c0, 0x30]);
immutable unicodeVai = RleBitSet!ushort.fromRawArray([0xa500, 0x12c]);
immutable unicodeHangul = RleBitSet!ushort.fromRawArray([0x1100, 0x100, 0x1e2e, 0x2, 0x101, 0x5e, 0x71, 0x1f, 0x41, 0x1f, 0x76e1, 0x1d, 0x283, 0x2ba4, 0xc, 0x17, 0x4, 0x31, 0x27a4, 0x1f, 0x3, 0x6, 0x2, 0x6, 0x2, 0x6, 0x2, 0x3]);
immutable unicodeInRejang = RleBitSet!ushort.fromRawArray([0xa930, 0x30]);
immutable unicodeInMiscellaneous_Technical = RleBitSet!ushort.fromRawArray([0x2300, 0x100]);
immutable unicodeHyphen = RleBitSet!ushort.fromRawArray([0x2d, 0x1, 0x7f, 0x1, 0x4dc, 0x1, 0x127b, 0x1, 0x809, 0x2, 0xe05, 0x1, 0x2e3, 0x1, 0xcd67, 0x1, 0xa9, 0x1, 0x57, 0x1]);
immutable unicodeThai = RleBitSet!ushort.fromRawArray([0xe01, 0x3a, 0x5, 0x1c]);
immutable unicodeSundanese = RleBitSet!ushort.fromRawArray([0x1b80, 0x40, 0x100, 0x8]);
immutable unicodeInRunic = RleBitSet!ushort.fromRawArray([0x16a0, 0x60]);
immutable unicodeDiacritic = RleBitSet!ushort.fromRawArray([0x5e, 0x1, 0x1, 0x1, 0x47, 0x1, 0x6, 0x1, 0x4, 0x1, 0x2, 0x2, 0x1f7, 0x9f, 0x1, 0x8, 0x5, 0x6, 0x11, 0x2, 0x4, 0x1, 0x9, 0x2, 0xfd, 0x5, 0xd1, 0x1, 0x37, 0x11, 0x1, 0x1b, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x86, 0x8, 0x4, 0x2, 0x86, 0x2, 0x4, 0x2, 0x3, 0x3, 0x43, 0x1b, 0x5b, 0xb, 0x3a, 0xb, 0x22, 0x2, 0xca, 0x1b, 0x3d, 0x1, 0x10, 0x1, 0x3, 0x4, 0x1c, 0x1, 0x4a, 0x1, 0x10, 0x1, 0x6e, 0x1, 0x10, 0x1, 0x6e, 0x1, 0x10, 0x1, 0x6e, 0x1, 0x10, 0x1, 0x7f, 0x1, 0x7f, 0x1, 0x6e, 0x1, 0x10, 0x1, 0x7f, 0x1, 0x7c, 0x1, 0x7c, 0x6, 0x1, 0x1, 0x79, 0x5, 0x4b, 0x2, 0x1b, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x2, 0x42, 0x3, 0x1, 0x2, 0x3e, 0x1, 0x70, 0x1, 0x1, 0x2, 0x4c, 0x7, 0x1, 0x1, 0xa, 0x2, 0x72d, 0xb, 0x9, 0x1, 0x15b, 0x3, 0x139, 0x8, 0x2, 0x1, 0xb4, 0x1, 0xf, 0x1, 0x26, 0x9, 0x36, 0x2, 0x8a, 0x2, 0x40, 0x6, 0x52, 0x19, 0x4, 0x1, 0x6, 0x1, 0x37, 0x3f, 0x59, 0xc, 0x2d, 0x3, 0x1bd, 0x1, 0x1, 0x3, 0xb, 0x3, 0xd, 0x3, 0xd, 0x3, 0xd, 0x2, 0xcf0, 0x3, 0x13d, 0x1, 0x1fa, 0x6, 0x69, 0x4, 0x5f, 0x1, 0x7572, 0x1, 0xc, 0x2, 0x1, 0x1, 0x70, 0x2, 0x25, 0xb, 0x66, 0x1, 0x6f, 0x2, 0xca, 0x1, 0x1b, 0x12, 0x39, 0x4, 0x24, 0x1, 0x5f, 0x1, 0xc, 0x1, 0xba, 0x1, 0x43, 0x4, 0x33, 0x1, 0xf5, 0x2, 0x4f30, 0x1, 0x301, 0x7, 0x117, 0x1, 0x1, 0x1, 0x2f, 0x1, 0x2d, 0x2, 0x43, 0x1, 0x10d5, 0x2, 0x78, 0x2, 0x8b, 0x1, 0x4f5, 0x2, 0x58d7, 0x11, 0x61c7, 0x3, 0x3, 0x6, 0x8, 0x8, 0x2, 0x7, 0x1e, 0x4]);
immutable unicodeYi = RleBitSet!ushort.fromRawArray([0xa000, 0x48d, 0x3, 0x37]);
immutable unicodeInAlphabetic_Presentation_Forms = RleBitSet!ushort.fromRawArray([0xfb00, 0x50]);
immutable unicodeExtender = RleBitSet!ushort.fromRawArray([0xb7, 0x1, 0x218, 0x2, 0x36e, 0x1, 0x1b9, 0x1, 0x64b, 0x1, 0x7f, 0x1, 0x943, 0x1, 0x38, 0x1, 0x263, 0x1, 0x18e, 0x1, 0x44, 0x1, 0x1389, 0x1, 0x2b, 0x5, 0x67, 0x2, 0x5d, 0x3, 0x6f16, 0x1, 0x5f6, 0x1, 0x3c2, 0x1, 0xa0, 0x1, 0x6c, 0x1, 0x15, 0x2, 0x547b, 0x1]);
immutable unicodeGlagolitic = RleBitSet!ushort.fromRawArray([0x2c00, 0x2f, 0x1, 0x2f]);
immutable unicodeInSuperscripts_and_Subscripts = RleBitSet!ushort.fromRawArray([0x2070, 0x30]);
immutable unicodeInMalayalam = RleBitSet!ushort.fromRawArray([0xd00, 0x80]);
immutable unicodeJoin_Control = RleBitSet!ushort.fromRawArray([0x200c, 0x2]);
immutable unicodeInBatak = RleBitSet!ushort.fromRawArray([0x1bc0, 0x40]);
immutable unicodeThaana = RleBitSet!ushort.fromRawArray([0x780, 0x32]);
immutable unicodeSoft_Dotted = RleBitSet!ushort.fromRawArray([0x69, 0x2, 0xc4, 0x1, 0x119, 0x1, 0x1e, 0x1, 0x34, 0x1, 0x14, 0x1, 0x140, 0x1, 0x62, 0x1, 0x1, 0x1, 0x1909, 0x1, 0x33, 0x1, 0xd, 0x1, 0x3, 0x1, 0x84, 0x1, 0x9d, 0x1, 0x1a5, 0x1, 0xd6, 0x2, 0xb32, 0x1, 0xffff, 0x0, 0xa7a6, 0x2, 0x32, 0x2, 0x32, 0x2, 0x32, 0x2, 0x32, 0x2, 0x32, 0x2, 0x32, 0x2, 0x32, 0x2, 0x32, 0x2, 0x32, 0x2, 0x32, 0x2, 0x32, 0x2, 0x32, 0x2]);
immutable unicodeBraille = RleBitSet!ushort.fromRawArray([0x2800, 0x100]);
immutable unicodeInGurmukhi = RleBitSet!ushort.fromRawArray([0xa00, 0x80]);
immutable unicodeMandaic = RleBitSet!ushort.fromRawArray([0x840, 0x1c, 0x2, 0x1]);
immutable unicodeInUnified_Canadian_Aboriginal_Syllabics = RleBitSet!ushort.fromRawArray([0x1400, 0x280]);
immutable unicodeInDingbats = RleBitSet!ushort.fromRawArray([0x2700, 0xc0]);
immutable unicodeZl = RleBitSet!ushort.fromRawArray([0x2028, 0x1]);
immutable unicodeInBuginese = RleBitSet!ushort.fromRawArray([0x1a00, 0x20]);
immutable unicodeInSaurashtra = RleBitSet!ushort.fromRawArray([0xa880, 0x60]);
immutable unicodeInCJK_Symbols_and_Punctuation = RleBitSet!ushort.fromRawArray([0x3000, 0x40]);
immutable unicodeInKangxi_Radicals = RleBitSet!ushort.fromRawArray([0x2f00, 0xe0]);
immutable unicodeZp = RleBitSet!ushort.fromRawArray([0x2029, 0x1]);
immutable unicodeHex_Digit = RleBitSet!ushort.fromRawArray([0x30, 0xa, 0x7, 0x6, 0x1a, 0x6, 0xfea9, 0xa, 0x7, 0x6, 0x1a, 0x6]);
immutable unicodeZs = RleBitSet!ushort.fromRawArray([0x20, 0x1, 0x7f, 0x1, 0x15df, 0x1, 0x18d, 0x1, 0x7f1, 0xb, 0x24, 0x1, 0x2f, 0x1, 0xfa0, 0x1]);
immutable unicodeInThai = RleBitSet!ushort.fromRawArray([0xe00, 0x80]);
immutable unicodeDevanagari = RleBitSet!ushort.fromRawArray([0x900, 0x51, 0x2, 0x11, 0x2, 0x12, 0x1, 0x7, 0x9f60, 0x1c]);
immutable unicodeInArrows = RleBitSet!ushort.fromRawArray([0x2190, 0x70]);
immutable unicodeEthiopic = RleBitSet!ushort.fromRawArray([0x1200, 0x49, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0x29, 0x1, 0x4, 0x2, 0x21, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0xf, 0x1, 0x39, 0x1, 0x4, 0x2, 0x43, 0x2, 0x20, 0x3, 0x1a, 0x19e6, 0x17, 0x9, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x7d22, 0x6, 0x2, 0x6, 0x2, 0x6, 0x9, 0x7, 0x1, 0x7]);
immutable unicodeInCurrency_Symbols = RleBitSet!ushort.fromRawArray([0x20a0, 0x30]);
immutable unicodeGreek = RleBitSet!ushort.fromRawArray([0x370, 0x4, 0x1, 0x3, 0x2, 0x4, 0x6, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x14, 0x1, 0x3f, 0xe, 0x10, 0x1926, 0x5, 0x32, 0x5, 0x4, 0x5, 0x54, 0x1, 0x140, 0x16, 0x2, 0x6, 0x2, 0x26, 0x2, 0x6, 0x2, 0x8, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1f, 0x2, 0x35, 0x1, 0xf, 0x1, 0xe, 0x2, 0x6, 0x1, 0x13, 0x2, 0x3, 0x1, 0x9, 0x127, 0x1, 0xe019, 0x4b, 0xd075, 0x46]);
immutable unicodeOl_Chiki = RleBitSet!ushort.fromRawArray([0x1c50, 0x30]);
immutable unicodeID_Start = RleBitSet!ushort.fromRawArray([0x41, 0x1a, 0x6, 0x1a, 0x2f, 0x1, 0xa, 0x1, 0x4, 0x1, 0x5, 0x17, 0x1, 0x1f, 0x1, 0x1ca, 0x4, 0xc, 0xe, 0x5, 0x7, 0x1, 0x1, 0x1, 0x81, 0x5, 0x1, 0x2, 0x2, 0x4, 0x8, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x14, 0x1, 0x53, 0x1, 0x8b, 0x8, 0x9e, 0x9, 0x26, 0x2, 0x1, 0x7, 0x27, 0x48, 0x1b, 0x5, 0x3, 0x2d, 0x2b, 0x23, 0x2, 0x1, 0x63, 0x1, 0x1, 0xf, 0x2, 0x7, 0x2, 0xa, 0x3, 0x2, 0x1, 0x10, 0x1, 0x1, 0x1e, 0x1d, 0x59, 0xb, 0x1, 0x18, 0x21, 0x9, 0x2, 0x4, 0x1, 0x5, 0x16, 0x4, 0x1, 0x9, 0x1, 0x3, 0x1, 0x17, 0x19, 0x47, 0x1, 0x1, 0xb, 0x57, 0x36, 0x3, 0x1, 0x12, 0x1, 0x7, 0xa, 0xf, 0x7, 0x1, 0x7, 0x5, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x1, 0x3, 0x4, 0x3, 0x1, 0x10, 0x1, 0xd, 0x2, 0x1, 0x3, 0xe, 0x2, 0x13, 0x6, 0x4, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1f, 0x4, 0x1, 0x1, 0x13, 0x3, 0x10, 0x9, 0x1, 0x3, 0x1, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x3, 0x1, 0x12, 0x1, 0xf, 0x2, 0x23, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x3, 0x1, 0x1e, 0x2, 0x1, 0x3, 0xf, 0x1, 0x11, 0x1, 0x1, 0x6, 0x3, 0x3, 0x1, 0x4, 0x3, 0x2, 0x1, 0x1, 0x1, 0x2, 0x3, 0x2, 0x3, 0x3, 0x3, 0xc, 0x16, 0x1, 0x34, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x1, 0x1a, 0x2, 0x6, 0x2, 0x23, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x1, 0x20, 0x1, 0x1, 0x2, 0xf, 0x2, 0x12, 0x8, 0x1, 0x3, 0x1, 0x29, 0x2, 0x1, 0x10, 0x1, 0x11, 0x2, 0x18, 0x6, 0x5, 0x12, 0x3, 0x18, 0x1, 0x9, 0x1, 0x1, 0x2, 0x7, 0x3a, 0x30, 0x1, 0x2, 0xc, 0x7, 0x3a, 0x2, 0x1, 0x1, 0x2, 0x2, 0x1, 0x1, 0x2, 0x1, 0x6, 0x4, 0x1, 0x7, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x1, 0x4, 0x1, 0x2, 0x9, 0x1, 0x2, 0x5, 0x1, 0x1, 0x15, 0x4, 0x20, 0x1, 0x3f, 0x8, 0x1, 0x24, 0x1b, 0x5, 0x73, 0x2b, 0x14, 0x1, 0x10, 0x6, 0x4, 0x4, 0x3, 0x1, 0x3, 0x2, 0x7, 0x3, 0x4, 0xd, 0xc, 0x1, 0x11, 0x26, 0x1, 0x1, 0x5, 0x1, 0x2, 0x2b, 0x1, 0x14d, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0x29, 0x1, 0x4, 0x2, 0x21, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0xf, 0x1, 0x39, 0x1, 0x4, 0x2, 0x43, 0x25, 0x10, 0x10, 0x55, 0xc, 0x26c, 0x2, 0x11, 0x1, 0x1a, 0x5, 0x4b, 0x3, 0x3, 0xf, 0xd, 0x1, 0x4, 0xe, 0x12, 0xe, 0x12, 0xe, 0xd, 0x1, 0x3, 0xf, 0x34, 0x23, 0x1, 0x4, 0x1, 0x43, 0x58, 0x8, 0x29, 0x1, 0x1, 0x5, 0x46, 0xa, 0x1d, 0x33, 0x1e, 0x2, 0x5, 0xb, 0x2c, 0x15, 0x7, 0x38, 0x17, 0x9, 0x35, 0x52, 0x1, 0x5d, 0x2f, 0x11, 0x7, 0x37, 0x1e, 0xd, 0x2, 0xa, 0x2c, 0x1a, 0x24, 0x29, 0x3, 0xa, 0x24, 0x6b, 0x4, 0x1, 0x4, 0x3, 0x2, 0x9, 0xc0, 0x40, 0x116, 0x2, 0x6, 0x2, 0x26, 0x2, 0x6, 0x2, 0x8, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1f, 0x2, 0x35, 0x1, 0x7, 0x1, 0x1, 0x3, 0x3, 0x1, 0x7, 0x3, 0x4, 0x2, 0x6, 0x4, 0xd, 0x5, 0x3, 0x1, 0x7, 0x74, 0x1, 0xd, 0x1, 0x10, 0xd, 0x65, 0x1, 0x4, 0x1, 0x2, 0xa, 0x1, 0x1, 0x2, 0x6, 0x6, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x10, 0x2, 0x4, 0x5, 0x5, 0x4, 0x1, 0x11, 0x29, 0xa77, 0x2f, 0x1, 0x2f, 0x1, 0x85, 0x6, 0x4, 0x3, 0x2, 0xc, 0x26, 0x1, 0x1, 0x5, 0x1, 0x2, 0x38, 0x7, 0x1, 0x10, 0x17, 0x9, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x226, 0x3, 0x19, 0x9, 0x7, 0x5, 0x2, 0x5, 0x4, 0x56, 0x4, 0x5, 0x1, 0x5a, 0x1, 0x4, 0x5, 0x29, 0x3, 0x5e, 0x11, 0x1b, 0x35, 0x10, 0x200, 0x19b6, 0x4a, 0x51cd, 0x33, 0x48d, 0x43, 0x2e, 0x2, 0x10d, 0x3, 0x10, 0xa, 0x2, 0x14, 0x2f, 0x10, 0x19, 0x8, 0x50, 0x27, 0x9, 0x2, 0x67, 0x2, 0x4, 0x1, 0x4, 0xc, 0xb, 0x4d, 0xa, 0x1, 0x3, 0x1, 0x4, 0x1, 0x17, 0x1d, 0x34, 0xe, 0x32, 0x3e, 0x6, 0x3, 0x1, 0xe, 0x1c, 0xa, 0x17, 0x19, 0x1d, 0x7, 0x2f, 0x1c, 0x1, 0x30, 0x29, 0x17, 0x3, 0x1, 0x8, 0x14, 0x17, 0x3, 0x1, 0x5, 0x30, 0x1, 0x1, 0x3, 0x2, 0x2, 0x5, 0x2, 0x1, 0x1, 0x1, 0x18, 0x3, 0x2, 0xb, 0x7, 0x3, 0xc, 0x6, 0x2, 0x6, 0x2, 0x6, 0x9, 0x7, 0x1, 0x7, 0x91, 0x23, 0x1d, 0x2ba4, 0xc, 0x17, 0x4, 0x31, 0x2104, 0x16e, 0x2, 0x6a, 0x26, 0x7, 0xc, 0x5, 0x5, 0x1, 0x1, 0xa, 0x1, 0xd, 0x1, 0x5, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x6c, 0x21, 0x16b, 0x12, 0x40, 0x2, 0x36, 0x28, 0xc, 0x74, 0x5, 0x1, 0x87, 0x24, 0x1a, 0x6, 0x1a, 0xb, 0x59, 0x3, 0x6, 0x2, 0x6, 0x2, 0x6, 0x2, 0x3, 0x23, 0xc, 0x1, 0x1a, 0x1, 0x13, 0x1, 0x2, 0x1, 0xf, 0x2, 0xe, 0x22, 0x7b, 0x45, 0x35, 0x10b, 0x1d, 0x3, 0x31, 0x2f, 0x1f, 0x11, 0x1b, 0x35, 0x1e, 0x2, 0x24, 0x4, 0x8, 0x1, 0x5, 0x2a, 0x9e, 0x362, 0x6, 0x2, 0x1, 0x1, 0x2c, 0x1, 0x2, 0x3, 0x1, 0x2, 0x17, 0xaa, 0x16, 0xa, 0x1a, 0x46, 0x38, 0x6, 0x2, 0x40, 0x1, 0xf, 0x4, 0x1, 0x3, 0x1, 0x1b, 0x2c, 0x1d, 0x83, 0x36, 0xa, 0x16, 0xa, 0x13, 0x8d, 0x49, 0x3ba, 0x35, 0x4b, 0x2d, 0x20, 0x19, 0x1a, 0x24, 0x5c, 0x30, 0xe, 0x4, 0x4bb, 0x2b, 0x955, 0x36f, 0x91, 0x63, 0xb9d, 0x42f, 0x33d1, 0x239, 0x4c7, 0x45, 0xb, 0x1, 0x42, 0xd, 0x4060, 0x2, 0x23fe, 0x55, 0x1, 0x47, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0xc, 0x1, 0x1, 0x1, 0x7, 0x1, 0x41, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1, 0x1c, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1, 0x154, 0x2, 0x19, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x8, 0x1634, 0x4, 0x1, 0x1b, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0xa, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x6, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x4, 0x1, 0x7, 0x1, 0x4, 0x1, 0x4, 0x1, 0x1, 0x1, 0xa, 0x1, 0x11, 0x5, 0x3, 0x1, 0x5, 0x1, 0x11, 0x1144, 0xa6d7, 0x29, 0x1035, 0xb, 0xde, 0x3fe2, 0x21e]);
immutable unicodeID_Continue = RleBitSet!ushort.fromRawArray([0x30, 0xa, 0x7, 0x1a, 0x4, 0x1, 0x1, 0x1a, 0x2f, 0x1, 0xa, 0x1, 0x1, 0x1, 0x2, 0x1, 0x5, 0x17, 0x1, 0x1f, 0x1, 0x1ca, 0x4, 0xc, 0xe, 0x5, 0x7, 0x1, 0x1, 0x1, 0x11, 0x75, 0x1, 0x2, 0x2, 0x4, 0x8, 0x5, 0x1, 0x1, 0x1, 0x14, 0x1, 0x53, 0x1, 0x8b, 0x1, 0x5, 0x2, 0x9e, 0x9, 0x26, 0x2, 0x1, 0x7, 0x27, 0x9, 0x2d, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x8, 0x1b, 0x5, 0x3, 0x1d, 0xb, 0x5, 0x4a, 0x4, 0x66, 0x1, 0x8, 0x2, 0xa, 0x1, 0x13, 0x2, 0x1, 0x10, 0x3b, 0x2, 0x65, 0xe, 0x36, 0x4, 0x1, 0x5, 0x2e, 0x12, 0x1c, 0x44, 0x1, 0x1, 0xb, 0x37, 0x1b, 0x1, 0x64, 0x2, 0xa, 0x1, 0x7, 0x1, 0x7, 0x1, 0x3, 0x1, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x1, 0x3, 0x4, 0x2, 0x9, 0x2, 0x2, 0x2, 0x4, 0x8, 0x1, 0x4, 0x2, 0x1, 0x5, 0x2, 0xc, 0xf, 0x3, 0x1, 0x6, 0x4, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x2, 0x1, 0x1, 0x5, 0x4, 0x2, 0x2, 0x3, 0x3, 0x1, 0x7, 0x4, 0x1, 0x1, 0x7, 0x10, 0xb, 0x3, 0x1, 0x9, 0x1, 0x3, 0x1, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x2, 0xa, 0x1, 0x3, 0x1, 0x3, 0x2, 0x1, 0xf, 0x4, 0x2, 0xa, 0x11, 0x3, 0x1, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x2, 0x9, 0x2, 0x2, 0x2, 0x3, 0x8, 0x2, 0x4, 0x2, 0x1, 0x5, 0x2, 0xa, 0x1, 0x1, 0x10, 0x2, 0x1, 0x6, 0x3, 0x3, 0x1, 0x4, 0x3, 0x2, 0x1, 0x1, 0x1, 0x2, 0x3, 0x2, 0x3, 0x3, 0x3, 0xc, 0x4, 0x5, 0x3, 0x3, 0x1, 0x4, 0x2, 0x1, 0x6, 0x1, 0xe, 0xa, 0x11, 0x3, 0x1, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x8, 0x1, 0x3, 0x1, 0x4, 0x7, 0x2, 0x1, 0x2, 0x6, 0x4, 0x2, 0xa, 0x12, 0x2, 0x1, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x2, 0x9, 0x1, 0x3, 0x1, 0x4, 0x7, 0x2, 0x7, 0x1, 0x1, 0x4, 0x2, 0xa, 0x1, 0x2, 0xf, 0x2, 0x1, 0x8, 0x1, 0x3, 0x1, 0x29, 0x2, 0x8, 0x1, 0x3, 0x1, 0x5, 0x8, 0x1, 0x8, 0x4, 0x2, 0xa, 0xa, 0x6, 0x2, 0x2, 0x1, 0x12, 0x3, 0x18, 0x1, 0x9, 0x1, 0x1, 0x2, 0x7, 0x3, 0x1, 0x4, 0x6, 0x1, 0x1, 0x1, 0x8, 0x12, 0x2, 0xd, 0x3a, 0x5, 0xf, 0x1, 0xa, 0x27, 0x2, 0x1, 0x1, 0x2, 0x2, 0x1, 0x1, 0x2, 0x1, 0x6, 0x4, 0x1, 0x7, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x1, 0xd, 0x1, 0x3, 0x2, 0x5, 0x1, 0x1, 0x1, 0x6, 0x2, 0xa, 0x2, 0x4, 0x20, 0x1, 0x17, 0x2, 0x6, 0xa, 0xb, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0xa, 0x1, 0x24, 0x4, 0x14, 0x1, 0x12, 0x1, 0x24, 0x9, 0x1, 0x39, 0x4a, 0x6, 0x4e, 0x2, 0x26, 0x1, 0x1, 0x5, 0x1, 0x2, 0x2b, 0x1, 0x14d, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0x29, 0x1, 0x4, 0x2, 0x21, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0xf, 0x1, 0x39, 0x1, 0x4, 0x2, 0x43, 0x2, 0x3, 0x9, 0x9, 0xe, 0x10, 0x10, 0x55, 0xc, 0x26c, 0x2, 0x11, 0x1, 0x1a, 0x5, 0x4b, 0x3, 0x3, 0xf, 0xd, 0x1, 0x7, 0xb, 0x15, 0xb, 0x14, 0xc, 0xd, 0x1, 0x3, 0x1, 0x2, 0xc, 0x54, 0x3, 0x1, 0x4, 0x2, 0x2, 0xa, 0x21, 0x3, 0x2, 0xa, 0x6, 0x58, 0x8, 0x2b, 0x5, 0x46, 0xa, 0x1d, 0x3, 0xc, 0x4, 0xc, 0xa, 0x28, 0x2, 0x5, 0xb, 0x2c, 0x4, 0x1a, 0x6, 0xb, 0x25, 0x1c, 0x4, 0x3f, 0x1, 0x1d, 0x2, 0xb, 0x6, 0xa, 0xd, 0x1, 0x58, 0x4c, 0x4, 0xa, 0x11, 0x9, 0xc, 0x74, 0xc, 0x38, 0x8, 0xa, 0x3, 0x31, 0x52, 0x3, 0x1, 0x23, 0x9, 0xe7, 0x15, 0x11a, 0x2, 0x6, 0x2, 0x26, 0x2, 0x6, 0x2, 0x8, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1f, 0x2, 0x35, 0x1, 0x7, 0x1, 0x1, 0x3, 0x3, 0x1, 0x7, 0x3, 0x4, 0x2, 0x6, 0x4, 0xd, 0x5, 0x3, 0x1, 0x7, 0x42, 0x2, 0x13, 0x1, 0x1c, 0x1, 0xd, 0x1, 0x10, 0xd, 0x33, 0xd, 0x4, 0x1, 0x3, 0xc, 0x11, 0x1, 0x4, 0x1, 0x2, 0xa, 0x1, 0x1, 0x2, 0x6, 0x6, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x10, 0x2, 0x4, 0x5, 0x5, 0x4, 0x1, 0x11, 0x29, 0xa77, 0x2f, 0x1, 0x2f, 0x1, 0x85, 0x6, 0x9, 0xc, 0x26, 0x1, 0x1, 0x5, 0x1, 0x2, 0x38, 0x7, 0x1, 0xf, 0x18, 0x9, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x20, 0x205, 0x3, 0x19, 0xf, 0x1, 0x5, 0x2, 0x5, 0x4, 0x56, 0x2, 0x7, 0x1, 0x5a, 0x1, 0x4, 0x5, 0x29, 0x3, 0x5e, 0x11, 0x1b, 0x35, 0x10, 0x200, 0x19b6, 0x4a, 0x51cd, 0x33, 0x48d, 0x43, 0x2e, 0x2, 0x10d, 0x3, 0x1c, 0x14, 0x30, 0x4, 0xa, 0x1, 0x19, 0x7, 0x53, 0x25, 0x9, 0x2, 0x67, 0x2, 0x4, 0x1, 0x4, 0xc, 0xb, 0x4d, 0x30, 0x18, 0x34, 0xc, 0x45, 0xb, 0xa, 0x6, 0x18, 0x3, 0x1, 0x4, 0x2e, 0x2, 0x24, 0xc, 0x1d, 0x3, 0x41, 0xe, 0xb, 0x26, 0x37, 0x9, 0xe, 0x2, 0xa, 0x6, 0x17, 0x3, 0x2, 0x4, 0x43, 0x18, 0x3, 0x2, 0x10, 0x2, 0x5, 0xa, 0x6, 0x2, 0x6, 0x2, 0x6, 0x9, 0x7, 0x1, 0x7, 0x91, 0x2b, 0x1, 0x2, 0x2, 0xa, 0x6, 0x2ba4, 0xc, 0x17, 0x4, 0x31, 0x2104, 0x16e, 0x2, 0x6a, 0x26, 0x7, 0xc, 0x5, 0x5, 0xc, 0x1, 0xd, 0x1, 0x5, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x6c, 0x21, 0x16b, 0x12, 0x40, 0x2, 0x36, 0x28, 0xc, 0x4, 0x10, 0x10, 0x7, 0xc, 0x2, 0x18, 0x3, 0x20, 0x5, 0x1, 0x87, 0x13, 0xa, 0x7, 0x1a, 0x4, 0x1, 0x1, 0x1a, 0xb, 0x59, 0x3, 0x6, 0x2, 0x6, 0x2, 0x6, 0x2, 0x3, 0x23, 0xc, 0x1, 0x1a, 0x1, 0x13, 0x1, 0x2, 0x1, 0xf, 0x2, 0xe, 0x22, 0x7b, 0x45, 0x35, 0x88, 0x1, 0x82, 0x1d, 0x3, 0x31, 0x2f, 0x1f, 0x11, 0x1b, 0x35, 0x1e, 0x2, 0x24, 0x4, 0x8, 0x1, 0x5, 0x2a, 0x9e, 0x2, 0xa, 0x356, 0x6, 0x2, 0x1, 0x1, 0x2c, 0x1, 0x2, 0x3, 0x1, 0x2, 0x17, 0xaa, 0x16, 0xa, 0x1a, 0x46, 0x38, 0x6, 0x2, 0x40, 0x4, 0x1, 0x2, 0x5, 0x8, 0x1, 0x3, 0x1, 0x1b, 0x4, 0x3, 0x4, 0x1, 0x20, 0x1d, 0x83, 0x36, 0xa, 0x16, 0xa, 0x13, 0x8d, 0x49, 0x3b7, 0x47, 0x1f, 0xa, 0x10, 0x3b, 0x15, 0x19, 0x7, 0xa, 0x6, 0x35, 0x1, 0xa, 0x40, 0x45, 0xb, 0xa, 0x4a6, 0x38, 0x8, 0xa, 0x936, 0x36f, 0x91, 0x63, 0xb9d, 0x42f, 0x33d1, 0x239, 0x4c7, 0x45, 0xb, 0x2f, 0x10, 0x11, 0x4060, 0x2, 0x2163, 0x5, 0x3, 0x6, 0x8, 0x8, 0x2, 0x7, 0x1e, 0x4, 0x94, 0x3, 0x1bb, 0x55, 0x1, 0x47, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0xc, 0x1, 0x1, 0x1, 0x7, 0x1, 0x41, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1, 0x1c, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1, 0x154, 0x2, 0x19, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x8, 0x2, 0x32, 0x1600, 0x4, 0x1, 0x1b, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0xa, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x6, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x4, 0x1, 0x7, 0x1, 0x4, 0x1, 0x4, 0x1, 0x1, 0x1, 0xa, 0x1, 0x11, 0x5, 0x3, 0x1, 0x5, 0x1, 0x11, 0x1144, 0xa6d7, 0x29, 0x1035, 0xb, 0xde, 0x3fe2, 0x21e, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0x6ed, 0xf0]);
immutable unicodeTagbanwa = RleBitSet!ushort.fromRawArray([0x1760, 0xd, 0x1, 0x3, 0x1, 0x2]);
immutable unicodeOther_Uppercase = RleBitSet!ushort.fromRawArray([0x2160, 0x10, 0x346, 0x1a]);
immutable unicodeInOgham = RleBitSet!ushort.fromRawArray([0x1680, 0x20]);
immutable unicodeInThaana = RleBitSet!ushort.fromRawArray([0x780, 0x40]);
immutable unicodeInKhmer_Symbols = RleBitSet!ushort.fromRawArray([0x19e0, 0x20]);
immutable unicodeCommon = RleBitSet!ushort.fromRawArray([0x0, 0x41, 0x1a, 0x6, 0x1a, 0x2f, 0x1, 0xf, 0x1, 0x5, 0x17, 0x1, 0x1f, 0x1, 0x1c1, 0x27, 0x5, 0x5, 0x2, 0x14, 0x74, 0x1, 0x9, 0x1, 0x6, 0x1, 0x1, 0x1, 0x201, 0x1, 0x82, 0x1, 0xe, 0x1, 0x3, 0x1, 0x20, 0x1, 0x1f, 0xa, 0x73, 0x1, 0x286, 0x2, 0x4d9, 0x1, 0x195, 0x4, 0x122, 0x1, 0x5ef, 0x3, 0x47, 0x2, 0xcb, 0x2, 0x1, 0x1, 0x4cd, 0x1, 0xd, 0x1, 0x7, 0x4, 0x1, 0x6, 0x1, 0x2, 0x309, 0xc, 0x2, 0x57, 0x5, 0x7, 0x3, 0xb, 0x1, 0xf, 0x11, 0x1a, 0x46, 0x26, 0x1, 0x3, 0x2, 0x6, 0x1, 0x1b, 0x1, 0x11, 0x29, 0x1, 0x6, 0x264, 0xc, 0x27, 0x19, 0xb, 0x15, 0x2a0, 0x1, 0xff, 0x100, 0x24d, 0x3, 0xa, 0x2a6, 0x3c, 0x1b4, 0xc, 0x4, 0x5, 0x1, 0x1, 0x1, 0x19, 0xf, 0x8, 0x4, 0x4, 0x5b, 0x2, 0x3, 0x1, 0x5a, 0x2, 0x93, 0x10, 0x20, 0x24, 0x3c, 0x40, 0x1f, 0x51, 0x88, 0xa8, 0x19c0, 0x40, 0x5900, 0x22, 0x66, 0x3, 0xa5, 0xa, 0x5504, 0x2, 0xbd, 0x1, 0x12, 0xa, 0x16, 0x23, 0x1, 0x13, 0x1, 0x4, 0x93, 0x1, 0x1, 0x20, 0x1a, 0x6, 0x1a, 0xb, 0xa, 0x1, 0x2d, 0x2, 0x40, 0x7, 0x1, 0x7, 0xa, 0x5, 0x102, 0x3, 0x4, 0x2d, 0x3, 0x9, 0x50, 0xc, 0x34, 0x2d, 0xce03, 0xf6, 0xa, 0x27, 0x2, 0x3e, 0x3, 0x11, 0x8, 0x2, 0x7, 0x1e, 0x4, 0x30, 0x122, 0x57, 0x9, 0x12, 0x8e, 0x55, 0x1, 0x47, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0xc, 0x1, 0x1, 0x1, 0x7, 0x1, 0x41, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1, 0x1c, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1, 0x154, 0x2, 0x124, 0x2, 0x32, 0x1800, 0x2c, 0x4, 0x64, 0xc, 0xf, 0x2, 0xe, 0x2, 0xf, 0x1, 0xf, 0x20, 0xb, 0x5, 0x1f, 0x1, 0x3c, 0x4, 0x2b, 0x4b, 0x1a, 0x1, 0x2, 0xd, 0x2b, 0x5, 0x9, 0x7, 0x2, 0xae, 0x21, 0xf, 0x6, 0x1, 0x46, 0x3, 0x14, 0xc, 0x25, 0x1, 0x5, 0x15, 0x11, 0xf, 0x3f, 0x1, 0x1, 0x1, 0xb6, 0x1, 0x4, 0x3, 0x3e, 0x2, 0x4, 0xc, 0x18, 0x93, 0x46, 0x4, 0xb, 0x30, 0x46, 0x3a, 0x74, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0x899, 0x1, 0x1e, 0x60]);
immutable unicodeInCommon_Indic_Number_Forms = RleBitSet!ushort.fromRawArray([0xa830, 0x10]);
immutable unicodeInSmall_Form_Variants = RleBitSet!ushort.fromRawArray([0xfe50, 0x20]);
immutable unicodeIdeographic = RleBitSet!ushort.fromRawArray([0x3006, 0x2, 0x19, 0x9, 0xe, 0x3, 0x3c5, 0x19b6, 0x4a, 0x51cd, 0x5933, 0x16e, 0x2, 0x6a, 0xffff, 0x0, 0x527, 0xa6d7, 0x29, 0x1035, 0xb, 0xde, 0x3fe2, 0x21e]);
immutable unicodeGrapheme_Link = RleBitSet!ushort.fromRawArray([0x94d, 0x1, 0x7f, 0x1, 0x7f, 0x1, 0x7f, 0x1, 0x7f, 0x1, 0x7f, 0x1, 0x7f, 0x1, 0x7f, 0x1, 0x7f, 0x1, 0x7c, 0x1, 0x6f, 0x1, 0x149, 0x1, 0xb4, 0x2, 0x6d9, 0x1, 0x1f, 0x1, 0x9d, 0x1, 0x28d, 0x1, 0xe3, 0x1, 0x65, 0x2, 0x46, 0x2, 0x118b, 0x1, 0x7a86, 0x1, 0xbd, 0x1, 0x8e, 0x1, 0x6c, 0x1, 0x135, 0x1, 0xf6, 0x1, 0x5e51, 0x1, 0x606, 0x1, 0x72, 0x1, 0x79, 0x2, 0x8b, 0x1, 0x4f5, 0x1]);
immutable unicodeGeorgian = RleBitSet!ushort.fromRawArray([0x10a0, 0x26, 0x1, 0x1, 0x5, 0x1, 0x2, 0x2b, 0x1, 0x4, 0x1c00, 0x26, 0x1, 0x1, 0x5, 0x1]);
immutable unicodeOsmanya = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x481, 0x1e, 0x2, 0xa]);
immutable unicodeInEthiopic = RleBitSet!ushort.fromRawArray([0x1200, 0x180]);
immutable unicodeInEnclosed_Alphanumerics = RleBitSet!ushort.fromRawArray([0x2460, 0xa0]);
immutable unicodeCuneiform = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x2001, 0x36f, 0x91, 0x63, 0xd, 0x4]);
immutable unicodeSyriac = RleBitSet!ushort.fromRawArray([0x700, 0xe, 0x1, 0x3c, 0x2, 0x3]);
immutable unicodeInVertical_Forms = RleBitSet!ushort.fromRawArray([0xfe10, 0x10]);
immutable unicodeNoncharacter_Code_Point = RleBitSet!ushort.fromRawArray([0xfdd0, 0x20, 0x20e, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2, 0xfffe, 0x2]);
immutable unicodeInMiscellaneous_Symbols_and_Arrows = RleBitSet!ushort.fromRawArray([0x2b00, 0x100]);
immutable unicodeInMeetei_Mayek_Extensions = RleBitSet!ushort.fromRawArray([0xaae0, 0x20]);
immutable unicodeMeetei_Mayek = RleBitSet!ushort.fromRawArray([0xaae0, 0x17, 0xc9, 0x2e, 0x2, 0xa]);
immutable unicodeOther_Grapheme_Extend = RleBitSet!ushort.fromRawArray([0x9be, 0x1, 0x18, 0x1, 0x166, 0x1, 0x18, 0x1, 0x66, 0x1, 0x18, 0x1, 0xea, 0x1, 0x12, 0x2, 0x67, 0x1, 0x18, 0x1, 0x77, 0x1, 0xf, 0x1, 0x122c, 0x2, 0x1020, 0x2, 0xcf6e, 0x2, 0xd1c5, 0x1, 0x8, 0x5]);
immutable unicodeOther_Math = RleBitSet!ushort.fromRawArray([0x5e, 0x1, 0x371, 0x3, 0x2, 0x1, 0x1a, 0x2, 0x2, 0x2, 0x1c20, 0x1, 0x1b, 0x3, 0xb, 0x1, 0x20, 0x4, 0x18, 0x2, 0xe, 0x2, 0x41, 0xd, 0x4, 0x1, 0x3, 0x2, 0x4, 0x5, 0x12, 0x1, 0x4, 0x1, 0x2, 0xa, 0x1, 0x1, 0x3, 0x5, 0x6, 0x1, 0x3, 0x2, 0x2, 0x2, 0x1, 0x3, 0x1, 0x6, 0x3, 0x4, 0x5, 0x5, 0x4b, 0x5, 0x2, 0x4, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x1, 0x5, 0x2, 0x2, 0x4, 0x2, 0x4, 0x12, 0x2, 0x2, 0x1, 0x1, 0x1, 0x7, 0x1, 0x1, 0x6, 0x2, 0x1ce, 0x2, 0x1, 0x1, 0x18, 0x1, 0x11, 0x1, 0x1bd, 0x2, 0xc, 0x9, 0x5, 0x5, 0x5, 0x2, 0x2, 0x2, 0x3, 0x5, 0xe, 0x1, 0x1, 0x1, 0x2, 0x6, 0x18, 0x2, 0x39, 0x1, 0x1, 0x1, 0x1d, 0x4, 0x9, 0x2, 0x156, 0x2, 0x1f, 0xa, 0x193, 0x16, 0x3f, 0x4, 0x20, 0x2, 0xd463, 0x1, 0x1, 0x1, 0x4, 0x1, 0xd3, 0x1, 0x1, 0x1, 0xd4c1, 0x55, 0x1, 0x47, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0xc, 0x1, 0x1, 0x1, 0x7, 0x1, 0x41, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1, 0x1c, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1, 0x154, 0x2, 0x19, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x8, 0x2, 0x32, 0x1600, 0x4, 0x1, 0x1b, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0xa, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x6, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x4, 0x1, 0x7, 0x1, 0x4, 0x1, 0x4, 0x1, 0x1, 0x1, 0xa, 0x1, 0x11, 0x5, 0x3, 0x1, 0x5, 0x1, 0x11]);
immutable unicodeInBox_Drawing = RleBitSet!ushort.fromRawArray([0x2500, 0x80]);
immutable unicodeInTagbanwa = RleBitSet!ushort.fromRawArray([0x1760, 0x20]);
immutable unicodeInHangul_Syllables = RleBitSet!ushort.fromRawArray([0xac00, 0x2bb0]);
immutable unicodeLydian = RleBitSet!ushort.fromRawArray([0xffff, 0x0, 0x921, 0x1a, 0x5, 0x1]);
immutable unicodeInKatakana_Phonetic_Extensions = RleBitSet!ushort.fromRawArray([0x31f0, 0x10]);
immutable unicodeInTai_Tham = RleBitSet!ushort.fromRawArray([0x1a20, 0x90]);
immutable unicodeInNumber_Forms = RleBitSet!ushort.fromRawArray([0x2150, 0x40]);
immutable unicodeInBopomofo_Extended = RleBitSet!ushort.fromRawArray([0x31a0, 0x20]);
immutable unicodeInherited = RleBitSet!ushort.fromRawArray([0x300, 0x70, 0x115, 0x2, 0x1c4, 0xb, 0x9, 0x1, 0x10, 0x1, 0x2e0, 0x2, 0x137d, 0x3, 0x1, 0xd, 0x1, 0x7, 0x4, 0x1, 0x6, 0x1, 0xcb, 0x27, 0x15, 0x4, 0x20c, 0x2, 0xc2, 0x21, 0xf39, 0x4, 0x6b, 0x2, 0xcd65, 0x10, 0x10, 0x7, 0x3d6, 0x1, 0xcf69, 0x3, 0x11, 0x8, 0x2, 0x7, 0x1e, 0x4, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0xffff, 0x0, 0x2f5e, 0xf0]);
immutable unicodeInLetterlike_Symbols = RleBitSet!ushort.fromRawArray([0x2100, 0x50]);
immutable unicodeBuhid = RleBitSet!ushort.fromRawArray([0x1740, 0x14]);
immutable unicodeInArabic_Extended_A = RleBitSet!ushort.fromRawArray([0x8a0, 0x60]);
immutable unicodeInSyloti_Nagri = RleBitSet!ushort.fromRawArray([0xa800, 0x30]);
immutable unicodeInSamaritan = RleBitSet!ushort.fromRawArray([0x800, 0x40]);
immutable unicodeInGeorgian = RleBitSet!ushort.fromRawArray([0x10a0, 0x60]);
immutable unicodeAlphabetic = RleBitSet!ushort.fromRawArray([0x41, 0x1a, 0x6, 0x1a, 0x2f, 0x1, 0xa, 0x1, 0x4, 0x1, 0x5, 0x17, 0x1, 0x1f, 0x1, 0x1ca, 0x4, 0xc, 0xe, 0x5, 0x7, 0x1, 0x1, 0x1, 0x56, 0x1, 0x2a, 0x5, 0x1, 0x2, 0x2, 0x4, 0x8, 0x1, 0x1, 0x3, 0x1, 0x1, 0x1, 0x14, 0x1, 0x53, 0x1, 0x8b, 0x8, 0x9e, 0x9, 0x26, 0x2, 0x1, 0x7, 0x27, 0x28, 0xe, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x8, 0x1b, 0x5, 0x3, 0x1d, 0xb, 0x5, 0x38, 0x1, 0x7, 0xe, 0x66, 0x1, 0x8, 0x4, 0x8, 0x4, 0x3, 0xa, 0x3, 0x2, 0x1, 0x10, 0x30, 0xd, 0x65, 0x18, 0x21, 0x9, 0x2, 0x4, 0x1, 0x5, 0x18, 0x2, 0x13, 0x13, 0x19, 0x47, 0x1, 0x1, 0xb, 0x37, 0x6, 0x6, 0xf, 0x1, 0x3c, 0x1, 0x10, 0x1, 0x3, 0x4, 0xf, 0xd, 0x7, 0x1, 0x7, 0x1, 0x3, 0x1, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x1, 0x3, 0x4, 0x3, 0x8, 0x2, 0x2, 0x2, 0x2, 0x1, 0x1, 0x8, 0x1, 0x4, 0x2, 0x1, 0x5, 0xc, 0x2, 0xf, 0x3, 0x1, 0x6, 0x4, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x4, 0x5, 0x4, 0x2, 0x2, 0x2, 0x4, 0x1, 0x7, 0x4, 0x1, 0x1, 0x11, 0x6, 0xb, 0x3, 0x1, 0x9, 0x1, 0x3, 0x1, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x3, 0x9, 0x1, 0x3, 0x1, 0x2, 0x3, 0x1, 0xf, 0x4, 0x1d, 0x3, 0x1, 0x8, 0x2, 0x2, 0x2, 0x16, 0x1, 0x7, 0x1, 0x2, 0x1, 0x5, 0x3, 0x8, 0x2, 0x2, 0x2, 0x2, 0x9, 0x2, 0x4, 0x2, 0x1, 0x5, 0xd, 0x1, 0x10, 0x2, 0x1, 0x6, 0x3, 0x3, 0x1, 0x4, 0x3, 0x2, 0x1, 0x1, 0x1, 0x2, 0x3, 0x2, 0x3, 0x3, 0x3, 0xc, 0x4, 0x5, 0x3, 0x3, 0x1, 0x3, 0x3, 0x1, 0x6, 0x1, 0x29, 0x3, 0x1, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x8, 0x1, 0x3, 0x1, 0x3, 0x8, 0x2, 0x1, 0x2, 0x6, 0x4, 0x1e, 0x2, 0x1, 0x8, 0x1, 0x3, 0x1, 0x17, 0x1, 0xa, 0x1, 0x5, 0x3, 0x8, 0x1, 0x3, 0x1, 0x3, 0x8, 0x2, 0x7, 0x1, 0x1, 0x4, 0xd, 0x2, 0xf, 0x2, 0x1, 0x8, 0x1, 0x3, 0x1, 0x29, 0x2, 0x8, 0x1, 0x3, 0x1, 0x3, 0x1, 0x1, 0x8, 0x1, 0x8, 0x4, 0x16, 0x6, 0x2, 0x2, 0x1, 0x12, 0x3, 0x18, 0x1, 0x9, 0x1, 0x1, 0x2, 0x7, 0x8, 0x6, 0x1, 0x1, 0x1, 0x8, 0x12, 0x2, 0xd, 0x3a, 0x5, 0x7, 0x6, 0x1, 0x33, 0x2, 0x1, 0x1, 0x2, 0x2, 0x1, 0x1, 0x2, 0x1, 0x6, 0x4, 0x1, 0x7, 0x1, 0x3, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x1, 0xd, 0x1, 0x3, 0x2, 0x5, 0x1, 0x1, 0x6, 0x1, 0xe, 0x4, 0x20, 0x1, 0x3f, 0x8, 0x1, 0x24, 0x4, 0x11, 0x6, 0x10, 0x1, 0x24, 0x43, 0x37, 0x1, 0x1, 0x2, 0x5, 0x10, 0x13, 0x2, 0x4, 0x5, 0x19, 0x7, 0x1, 0xd, 0x2, 0x2, 0x26, 0x1, 0x1, 0x5, 0x1, 0x2, 0x2b, 0x1, 0x14d, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0x29, 0x1, 0x4, 0x2, 0x21, 0x1, 0x4, 0x2, 0x7, 0x1, 0x1, 0x1, 0x4, 0x2, 0xf, 0x1, 0x39, 0x1, 0x4, 0x2, 0x43, 0x4, 0x1, 0x20, 0x10, 0x10, 0x55, 0xc, 0x26c, 0x2, 0x11, 0x1, 0x1a, 0x5, 0x4b, 0x3, 0x3, 0xf, 0xd, 0x1, 0x6, 0xc, 0x14, 0xc, 0x14, 0xc, 0xd, 0x1, 0x3, 0x1, 0x2, 0xc, 0x34, 0x2, 0x13, 0xe, 0x1, 0x4, 0x1, 0x43, 0x58, 0x8, 0x2b, 0x5, 0x46, 0xa, 0x1d, 0x3, 0xc, 0x4, 0x9, 0x17, 0x1e, 0x2, 0x5, 0xb, 0x2c, 0x4, 0x1a, 0x36, 0x1c, 0x4, 0x3f, 0x2, 0x14, 0x32, 0x1, 0x58, 0x34, 0x1, 0xf, 0x1, 0x7, 0x34, 0x2a, 0x2, 0x4, 0xa, 0x2c, 0x1, 0xb, 0xe, 0x36, 0x17, 0x3, 0xa, 0x24, 0x6b, 0x4, 0x1, 0x6, 0x1, 0x2, 0x9, 0xc0, 0x40, 0x116, 0x2, 0x6, 0x2, 0x26, 0x2, 0x6, 0x2, 0x8, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1f, 0x2, 0x35, 0x1, 0x7, 0x1, 0x1, 0x3, 0x3, 0x1, 0x7, 0x3, 0x4, 0x2, 0x6, 0x4, 0xd, 0x5, 0x3, 0x1, 0x7, 0x74, 0x1, 0xd, 0x1, 0x10, 0xd, 0x65, 0x1, 0x4, 0x1, 0x2, 0xa, 0x1, 0x1, 0x3, 0x5, 0x6, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x1, 0xb, 0x2, 0x4, 0x5, 0x5, 0x4, 0x1, 0x11, 0x29, 0x32d, 0x34, 0x716, 0x2f, 0x1, 0x2f, 0x1, 0x85, 0x6, 0x4, 0x3, 0x2, 0xc, 0x26, 0x1, 0x1, 0x5, 0x1, 0x2, 0x38, 0x7, 0x1, 0x10, 0x17, 0x9, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x20, 0x2f, 0x1, 0x1d5, 0x3, 0x19, 0x9, 0x7, 0x5, 0x2, 0x5, 0x4, 0x56, 0x6, 0x3, 0x1, 0x5a, 0x1, 0x4, 0x5, 0x29, 0x3, 0x5e, 0x11, 0x1b, 0x35, 0x10, 0x200, 0x19b6, 0x4a, 0x51cd, 0x33, 0x48d, 0x43, 0x2e, 0x2, 0x10d, 0x3, 0x10, 0xa, 0x2, 0x14, 0x2f, 0x5, 0x8, 0x3, 0x19, 0x7, 0x51, 0x27, 0x9, 0x2, 0x67, 0x2, 0x4, 0x1, 0x4, 0xc, 0xb, 0x4d, 0xa, 0x1, 0x3, 0x1, 0x4, 0x1, 0x1c, 0x18, 0x34, 0xc, 0x44, 0x2e, 0x6, 0x3, 0x1, 0xe, 0x21, 0x5, 0x23, 0xd, 0x1d, 0x3, 0x33, 0x1, 0xc, 0xf, 0x1, 0x30, 0x37, 0x9, 0xe, 0x12, 0x17, 0x3, 0x1, 0x5, 0x3f, 0x1, 0x1, 0x1, 0x1, 0x18, 0x3, 0x2, 0x10, 0x2, 0x4, 0xb, 0x6, 0x2, 0x6, 0x2, 0x6, 0x9, 0x7, 0x1, 0x7, 0x91, 0x2b, 0x15, 0x2ba4, 0xc, 0x17, 0x4, 0x31, 0x2104, 0x16e, 0x2, 0x6a, 0x26, 0x7, 0xc, 0x5, 0x5, 0xc, 0x1, 0xd, 0x1, 0x5, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x6c, 0x21, 0x16b, 0x12, 0x40, 0x2, 0x36, 0x28, 0xc, 0x74, 0x5, 0x1, 0x87, 0x24, 0x1a, 0x6, 0x1a, 0xb, 0x59, 0x3, 0x6, 0x2, 0x6, 0x2, 0x6, 0x2, 0x3, 0x23, 0xc, 0x1, 0x1a, 0x1, 0x13, 0x1, 0x2, 0x1, 0xf, 0x2, 0xe, 0x22, 0x7b, 0x45, 0x35, 0x10b, 0x1d, 0x3, 0x31, 0x2f, 0x1f, 0x11, 0x1b, 0x35, 0x1e, 0x2, 0x24, 0x4, 0x8, 0x1, 0x5, 0x2a, 0x9e, 0x362, 0x6, 0x2, 0x1, 0x1, 0x2c, 0x1, 0x2, 0x3, 0x1, 0x2, 0x17, 0xaa, 0x16, 0xa, 0x1a, 0x46, 0x38, 0x6, 0x2, 0x40, 0x4, 0x1, 0x2, 0x5, 0x8, 0x1, 0x3, 0x1, 0x1b, 0x2c, 0x1d, 0x83, 0x36, 0xa, 0x16, 0xa, 0x13, 0x8d, 0x49, 0x3b7, 0x46, 0x3c, 0x37, 0x17, 0x19, 0x17, 0x33, 0x4d, 0x40, 0x1, 0x4, 0x4bb, 0x36, 0x94a, 0x36f, 0x91, 0x63, 0xb9d, 0x42f, 0x33d1, 0x239, 0x4c7, 0x45, 0xb, 0x2f, 0x14, 0xd, 0x4060, 0x2, 0x23fe, 0x55, 0x1, 0x47, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0xc, 0x1, 0x1, 0x1, 0x7, 0x1, 0x41, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1, 0x1c, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1, 0x154, 0x2, 0x19, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x1f, 0x1, 0x19, 0x1, 0x8, 0x1634, 0x4, 0x1, 0x1b, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0xa, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x6, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x4, 0x1, 0x7, 0x1, 0x4, 0x1, 0x4, 0x1, 0x1, 0x1, 0xa, 0x1, 0x11, 0x5, 0x3, 0x1, 0x5, 0x1, 0x11, 0x1144, 0xa6d7, 0x29, 0x1035, 0xb, 0xde, 0x3fe2, 0x21e]);
immutable unicodeBalinese = RleBitSet!ushort.fromRawArray([0x1b00, 0x4c, 0x4, 0x2d]);
immutable unicodeInLydian = RleBitSet!uint.fromRawArray([0x10920, 0x20]);
immutable unicodeInKana_Supplement = RleBitSet!uint.fromRawArray([0x1b000, 0x100]);
immutable unicodeInOld_Italic = RleBitSet!uint.fromRawArray([0x10300, 0x30]);
immutable unicodeInUgaritic = RleBitSet!uint.fromRawArray([0x10380, 0x20]);
immutable unicodeInLinear_B_Syllabary = RleBitSet!uint.fromRawArray([0x10000, 0x80]);
immutable unicodeInEgyptian_Hieroglyphs = RleBitSet!uint.fromRawArray([0x13000, 0x430]);
immutable unicodeInLycian = RleBitSet!uint.fromRawArray([0x10280, 0x20]);
immutable unicodeOld_South_Arabian = RleBitSet!uint.fromRawArray([0x10a60, 0x20]);
immutable unicodeInBamum_Supplement = RleBitSet!uint.fromRawArray([0x16800, 0x240]);
immutable unicodeInEmoticons = RleBitSet!uint.fromRawArray([0x1f600, 0x50]);
immutable unicodeInDeseret = RleBitSet!uint.fromRawArray([0x10400, 0x50]);
immutable unicodeInByzantine_Musical_Symbols = RleBitSet!uint.fromRawArray([0x1d000, 0x100]);
immutable unicodeInTransport_And_Map_Symbols = RleBitSet!uint.fromRawArray([0x1f680, 0x80]);
immutable unicodeInTai_Xuan_Jing_Symbols = RleBitSet!uint.fromRawArray([0x1d300, 0x60]);
immutable unicodeEgyptian_Hieroglyphs = RleBitSet!uint.fromRawArray([0x13000, 0x42f]);
immutable unicodeInChakma = RleBitSet!uint.fromRawArray([0x11100, 0x50]);
immutable unicodeInOld_Persian = RleBitSet!uint.fromRawArray([0x103a0, 0x40]);
immutable unicodeInCypriot_Syllabary = RleBitSet!uint.fromRawArray([0x10800, 0x40]);
immutable unicodeInSupplementary_Private_Use_Area_A = RleBitSet!uint.fromRawArray([0xf0000, 0x10000]);
immutable unicodeShavian = RleBitSet!uint.fromRawArray([0x10450, 0x30]);
immutable unicodeInRumi_Numeral_Symbols = RleBitSet!uint.fromRawArray([0x10e60, 0x20]);
immutable unicodeInSharada = RleBitSet!uint.fromRawArray([0x11180, 0x60]);
immutable unicodeInSupplementary_Private_Use_Area_B = RleBitSet!uint.fromRawArray([0x100000, 0x10000]);
immutable unicodeInCuneiform = RleBitSet!uint.fromRawArray([0x12000, 0x400]);
immutable unicodeInAvestan = RleBitSet!uint.fromRawArray([0x10b00, 0x40]);
immutable unicodeInCJK_Compatibility_Ideographs_Supplement = RleBitSet!uint.fromRawArray([0x2f800, 0x220]);
immutable unicodeLycian = RleBitSet!uint.fromRawArray([0x10280, 0x1d]);
immutable unicodeInPhaistos_Disc = RleBitSet!uint.fromRawArray([0x101d0, 0x30]);
immutable unicodeInOld_South_Arabian = RleBitSet!uint.fromRawArray([0x10a60, 0x20]);
immutable unicodeInPhoenician = RleBitSet!uint.fromRawArray([0x10900, 0x20]);
immutable unicodeInTakri = RleBitSet!uint.fromRawArray([0x11680, 0x50]);
immutable unicodeCo = RleBitSet!uint.fromRawArray([0xe000, 0x1900, 0xe0700, 0xfffe, 0x2, 0xfffe]);
immutable unicodeInInscriptional_Pahlavi = RleBitSet!uint.fromRawArray([0x10b60, 0x20]);
immutable unicodeInCarian = RleBitSet!uint.fromRawArray([0x102a0, 0x40]);
immutable unicodeInMiscellaneous_Symbols_And_Pictographs = RleBitSet!uint.fromRawArray([0x1f300, 0x300]);
immutable unicodeInBrahmi = RleBitSet!uint.fromRawArray([0x11000, 0x80]);
immutable unicodeInOld_Turkic = RleBitSet!uint.fromRawArray([0x10c00, 0x50]);
immutable unicodeDeprecated = RleBitSet!uint.fromRawArray([0x149, 0x1, 0x529, 0x1, 0x903, 0x1, 0x1, 0x1, 0x829, 0x2, 0x8c5, 0x6, 0x2b9, 0x2, 0xddcd6, 0x1, 0x1e, 0x60]);
immutable unicodeInImperial_Aramaic = RleBitSet!uint.fromRawArray([0x10840, 0x20]);
immutable unicodeInVariation_Selectors_Supplement = RleBitSet!uint.fromRawArray([0xe0100, 0xf0]);
immutable unicodeInCJK_Unified_Ideographs_Extension_B = RleBitSet!uint.fromRawArray([0x20000, 0xa6e0]);
immutable unicodeInMahjong_Tiles = RleBitSet!uint.fromRawArray([0x1f000, 0x30]);
immutable unicodeInTags = RleBitSet!uint.fromRawArray([0xe0000, 0x80]);
immutable unicodeInShavian = RleBitSet!uint.fromRawArray([0x10450, 0x30]);
immutable unicodeInCJK_Unified_Ideographs_Extension_C = RleBitSet!uint.fromRawArray([0x2a700, 0x1040]);
immutable unicodeInCounting_Rod_Numerals = RleBitSet!uint.fromRawArray([0x1d360, 0x20]);
immutable unicodeInCuneiform_Numbers_and_Punctuation = RleBitSet!uint.fromRawArray([0x12400, 0x80]);
immutable unicodeInCJK_Unified_Ideographs_Extension_D = RleBitSet!uint.fromRawArray([0x2b740, 0xe0]);
immutable unicodeCarian = RleBitSet!uint.fromRawArray([0x102a0, 0x31]);
immutable unicodeInSora_Sompeng = RleBitSet!uint.fromRawArray([0x110d0, 0x30]);
immutable unicodeInOsmanya = RleBitSet!uint.fromRawArray([0x10480, 0x30]);
immutable unicodeOld_Turkic = RleBitSet!uint.fromRawArray([0x10c00, 0x49]);
immutable unicodeInLinear_B_Ideograms = RleBitSet!uint.fromRawArray([0x10080, 0x80]);
immutable unicodeVariation_Selector = RleBitSet!uint.fromRawArray([0x180b, 0x3, 0xe5f2, 0x10, 0xd02f0, 0xf0]);
immutable unicodeInAegean_Numbers = RleBitSet!uint.fromRawArray([0x10100, 0x40]);
immutable unicodeInGothic = RleBitSet!uint.fromRawArray([0x10330, 0x20]);
immutable unicodeInMeroitic_Cursive = RleBitSet!uint.fromRawArray([0x109a0, 0x60]);
immutable unicodeInAncient_Greek_Numbers = RleBitSet!uint.fromRawArray([0x10140, 0x50]);
immutable unicodeDeseret = RleBitSet!uint.fromRawArray([0x10400, 0x50]);
immutable unicodeInEnclosed_Alphanumeric_Supplement = RleBitSet!uint.fromRawArray([0x1f100, 0x100]);
immutable unicodeInMathematical_Alphanumeric_Symbols = RleBitSet!uint.fromRawArray([0x1d400, 0x400]);
immutable unicodeInPlaying_Cards = RleBitSet!uint.fromRawArray([0x1f0a0, 0x60]);
immutable unicodeInKaithi = RleBitSet!uint.fromRawArray([0x11080, 0x50]);
immutable unicodeInMusical_Symbols = RleBitSet!uint.fromRawArray([0x1d100, 0x100]);
immutable unicodeInAncient_Symbols = RleBitSet!uint.fromRawArray([0x10190, 0x40]);
immutable unicodeInDomino_Tiles = RleBitSet!uint.fromRawArray([0x1f030, 0x70]);
immutable unicodeInKharoshthi = RleBitSet!uint.fromRawArray([0x10a00, 0x60]);
immutable unicodeGothic = RleBitSet!uint.fromRawArray([0x10330, 0x1b]);
immutable unicodeInAncient_Greek_Musical_Notation = RleBitSet!uint.fromRawArray([0x1d200, 0x50]);
immutable unicodeInInscriptional_Parthian = RleBitSet!uint.fromRawArray([0x10b40, 0x20]);
immutable unicodeInArabic_Mathematical_Alphabetic_Symbols = RleBitSet!uint.fromRawArray([0x1ee00, 0x100]);
immutable unicodeOther_Default_Ignorable_Code_Point = RleBitSet!uint.fromRawArray([0x34f, 0x1, 0xe0f, 0x2, 0x653, 0x2, 0x8af, 0x5, 0x10fa, 0x1, 0xce3b, 0x1, 0x4f, 0x9, 0xd0007, 0x1, 0x1, 0x1e, 0x60, 0x80, 0xf0, 0xe10]);
immutable unicodeMeroitic_Hieroglyphs = RleBitSet!uint.fromRawArray([0x10980, 0x20]);
immutable unicodeInMiao = RleBitSet!uint.fromRawArray([0x16f00, 0xa0]);
immutable unicodeInAlchemical_Symbols = RleBitSet!uint.fromRawArray([0x1f700, 0x80]);
immutable unicodeInMeroitic_Hieroglyphs = RleBitSet!uint.fromRawArray([0x10980, 0x20]);
immutable unicodeKaithi = RleBitSet!uint.fromRawArray([0x11080, 0x42]);
immutable unicodeInEnclosed_Ideographic_Supplement = RleBitSet!uint.fromRawArray([0x1f200, 0x100]);

immutable immutable(UnicodeProperty!ubyte)[] tinyUnicodeProps = [
immutable(UnicodeProperty!ubyte)("ASCII_Hex_Digit", unicodeASCII_Hex_Digit),
immutable(UnicodeProperty!ubyte)("Bengali", unicodeBengali),
immutable(UnicodeProperty!ubyte)("Cc", unicodeCc),
immutable(UnicodeProperty!ubyte)("Control", unicodeCc),
immutable(UnicodeProperty!ubyte)("Gujarati", unicodeGujarati),
immutable(UnicodeProperty!ubyte)("Gurmukhi", unicodeGurmukhi),
immutable(UnicodeProperty!ubyte)("InBasic Latin", unicodeInBasic_Latin),
immutable(UnicodeProperty!ubyte)("InLatin-1 Supplement", unicodeInLatin_1_Supplement),
immutable(UnicodeProperty!ubyte)("Kannada", unicodeKannada),
immutable(UnicodeProperty!ubyte)("Lao", unicodeLao),
immutable(UnicodeProperty!ubyte)("Ll", unicodeLl),
immutable(UnicodeProperty!ubyte)("Lowercase", unicodeLowercase),
immutable(UnicodeProperty!ubyte)("Lowercase_Letter", unicodeLl),
immutable(UnicodeProperty!ubyte)("Lu", unicodeLu),
immutable(UnicodeProperty!ubyte)("LV", unicodeLV),
immutable(UnicodeProperty!ubyte)("LV_Syllable", unicodeLV),
immutable(UnicodeProperty!ubyte)("LVT", unicodeLVT),
immutable(UnicodeProperty!ubyte)("LVT_Syllable", unicodeLVT),
immutable(UnicodeProperty!ubyte)("Oriya", unicodeOriya),
immutable(UnicodeProperty!ubyte)("Tamil", unicodeTamil),
immutable(UnicodeProperty!ubyte)("Telugu", unicodeTelugu),
immutable(UnicodeProperty!ubyte)("Uppercase", unicodeUppercase),
immutable(UnicodeProperty!ubyte)("Uppercase_Letter", unicodeLu),
];

immutable immutable(UnicodeProperty!ushort)[] smallUnicodeProps = [
immutable(UnicodeProperty!ushort)("Alphabetic", unicodeAlphabetic),
immutable(UnicodeProperty!ushort)("Arabic", unicodeArabic),
immutable(UnicodeProperty!ushort)("Armenian", unicodeArmenian),
immutable(UnicodeProperty!ushort)("Avestan", unicodeAvestan),
immutable(UnicodeProperty!ushort)("Balinese", unicodeBalinese),
immutable(UnicodeProperty!ushort)("Bamum", unicodeBamum),
immutable(UnicodeProperty!ushort)("Batak", unicodeBatak),
immutable(UnicodeProperty!ushort)("Bidi_Control", unicodeBidi_Control),
immutable(UnicodeProperty!ushort)("Bopomofo", unicodeBopomofo),
immutable(UnicodeProperty!ushort)("Brahmi", unicodeBrahmi),
immutable(UnicodeProperty!ushort)("Braille", unicodeBraille),
immutable(UnicodeProperty!ushort)("Buginese", unicodeBuginese),
immutable(UnicodeProperty!ushort)("Buhid", unicodeBuhid),
immutable(UnicodeProperty!ushort)("Canadian_Aboriginal", unicodeCanadian_Aboriginal),
immutable(UnicodeProperty!ushort)("Cased", unicodeCased),
immutable(UnicodeProperty!ushort)("Case_Ignorable", unicodeCase_Ignorable),
immutable(UnicodeProperty!ushort)("Cf", unicodeCf),
immutable(UnicodeProperty!ushort)("Chakma", unicodeChakma),
immutable(UnicodeProperty!ushort)("Cham", unicodeCham),
immutable(UnicodeProperty!ushort)("Cherokee", unicodeCherokee),
immutable(UnicodeProperty!ushort)("Close_Punctuation", unicodePe),
immutable(UnicodeProperty!ushort)("Cn", unicodeCn),
immutable(UnicodeProperty!ushort)("Common", unicodeCommon),
immutable(UnicodeProperty!ushort)("Connector_Punctuation", unicodePc),
immutable(UnicodeProperty!ushort)("Coptic", unicodeCoptic),
immutable(UnicodeProperty!ushort)("Cs", unicodeCs),
immutable(UnicodeProperty!ushort)("Cuneiform", unicodeCuneiform),
immutable(UnicodeProperty!ushort)("Currency_Symbol", unicodeSc),
immutable(UnicodeProperty!ushort)("Cypriot", unicodeCypriot),
immutable(UnicodeProperty!ushort)("Cyrillic", unicodeCyrillic),
immutable(UnicodeProperty!ushort)("Dash", unicodeDash),
immutable(UnicodeProperty!ushort)("Dash_Punctuation", unicodePd),
immutable(UnicodeProperty!ushort)("Decimal_Number", unicodeNd),
immutable(UnicodeProperty!ushort)("Default_Ignorable_Code_Point", unicodeDefault_Ignorable_Code_Point),
immutable(UnicodeProperty!ushort)("Devanagari", unicodeDevanagari),
immutable(UnicodeProperty!ushort)("Diacritic", unicodeDiacritic),
immutable(UnicodeProperty!ushort)("Enclosing_Mark", unicodeMe),
immutable(UnicodeProperty!ushort)("Ethiopic", unicodeEthiopic),
immutable(UnicodeProperty!ushort)("Extender", unicodeExtender),
immutable(UnicodeProperty!ushort)("Final_Punctuation", unicodePf),
immutable(UnicodeProperty!ushort)("Format", unicodeCf),
immutable(UnicodeProperty!ushort)("Georgian", unicodeGeorgian),
immutable(UnicodeProperty!ushort)("Glagolitic", unicodeGlagolitic),
immutable(UnicodeProperty!ushort)("Grapheme_Base", unicodeGrapheme_Base),
immutable(UnicodeProperty!ushort)("Grapheme_Extend", unicodeGrapheme_Extend),
immutable(UnicodeProperty!ushort)("Grapheme_Link", unicodeGrapheme_Link),
immutable(UnicodeProperty!ushort)("Greek", unicodeGreek),
immutable(UnicodeProperty!ushort)("Han", unicodeHan),
immutable(UnicodeProperty!ushort)("Hangul", unicodeHangul),
immutable(UnicodeProperty!ushort)("Hanunoo", unicodeHanunoo),
immutable(UnicodeProperty!ushort)("Hebrew", unicodeHebrew),
immutable(UnicodeProperty!ushort)("Hex_Digit", unicodeHex_Digit),
immutable(UnicodeProperty!ushort)("Hiragana", unicodeHiragana),
immutable(UnicodeProperty!ushort)("Hyphen", unicodeHyphen),
immutable(UnicodeProperty!ushort)("ID_Continue", unicodeID_Continue),
immutable(UnicodeProperty!ushort)("Ideographic", unicodeIdeographic),
immutable(UnicodeProperty!ushort)("IDS_Binary_Operator", unicodeIDS_Binary_Operator),
immutable(UnicodeProperty!ushort)("ID_Start", unicodeID_Start),
immutable(UnicodeProperty!ushort)("IDS_Trinary_Operator", unicodeIDS_Trinary_Operator),
immutable(UnicodeProperty!ushort)("Imperial_Aramaic", unicodeImperial_Aramaic),
immutable(UnicodeProperty!ushort)("InAlphabetic Presentation Forms", unicodeInAlphabetic_Presentation_Forms),
immutable(UnicodeProperty!ushort)("InArabic", unicodeInArabic),
immutable(UnicodeProperty!ushort)("InArabic Extended-A", unicodeInArabic_Extended_A),
immutable(UnicodeProperty!ushort)("InArabic Presentation Forms-A", unicodeInArabic_Presentation_Forms_A),
immutable(UnicodeProperty!ushort)("InArabic Presentation Forms-B", unicodeInArabic_Presentation_Forms_B),
immutable(UnicodeProperty!ushort)("InArabic Supplement", unicodeInArabic_Supplement),
immutable(UnicodeProperty!ushort)("InArmenian", unicodeInArmenian),
immutable(UnicodeProperty!ushort)("InArrows", unicodeInArrows),
immutable(UnicodeProperty!ushort)("InBalinese", unicodeInBalinese),
immutable(UnicodeProperty!ushort)("InBamum", unicodeInBamum),
immutable(UnicodeProperty!ushort)("InBatak", unicodeInBatak),
immutable(UnicodeProperty!ushort)("InBengali", unicodeInBengali),
immutable(UnicodeProperty!ushort)("InBlock Elements", unicodeInBlock_Elements),
immutable(UnicodeProperty!ushort)("InBopomofo", unicodeInBopomofo),
immutable(UnicodeProperty!ushort)("InBopomofo Extended", unicodeInBopomofo_Extended),
immutable(UnicodeProperty!ushort)("InBox Drawing", unicodeInBox_Drawing),
immutable(UnicodeProperty!ushort)("InBraille Patterns", unicodeInBraille_Patterns),
immutable(UnicodeProperty!ushort)("InBuginese", unicodeInBuginese),
immutable(UnicodeProperty!ushort)("InBuhid", unicodeInBuhid),
immutable(UnicodeProperty!ushort)("InCham", unicodeInCham),
immutable(UnicodeProperty!ushort)("InCherokee", unicodeInCherokee),
immutable(UnicodeProperty!ushort)("InCJK Compatibility", unicodeInCJK_Compatibility),
immutable(UnicodeProperty!ushort)("InCJK Compatibility Forms", unicodeInCJK_Compatibility_Forms),
immutable(UnicodeProperty!ushort)("InCJK Compatibility Ideographs", unicodeInCJK_Compatibility_Ideographs),
immutable(UnicodeProperty!ushort)("InCJK Radicals Supplement", unicodeInCJK_Radicals_Supplement),
immutable(UnicodeProperty!ushort)("InCJK Strokes", unicodeInCJK_Strokes),
immutable(UnicodeProperty!ushort)("InCJK Symbols and Punctuation", unicodeInCJK_Symbols_and_Punctuation),
immutable(UnicodeProperty!ushort)("InCJK Unified Ideographs", unicodeInCJK_Unified_Ideographs),
immutable(UnicodeProperty!ushort)("InCJK Unified Ideographs Extension A", unicodeInCJK_Unified_Ideographs_Extension_A),
immutable(UnicodeProperty!ushort)("InCombining Diacritical Marks", unicodeInCombining_Diacritical_Marks),
immutable(UnicodeProperty!ushort)("InCombining Diacritical Marks for Symbols", unicodeInCombining_Diacritical_Marks_for_Symbols),
immutable(UnicodeProperty!ushort)("InCombining Diacritical Marks Supplement", unicodeInCombining_Diacritical_Marks_Supplement),
immutable(UnicodeProperty!ushort)("InCombining Half Marks", unicodeInCombining_Half_Marks),
immutable(UnicodeProperty!ushort)("InCommon Indic Number Forms", unicodeInCommon_Indic_Number_Forms),
immutable(UnicodeProperty!ushort)("InControl Pictures", unicodeInControl_Pictures),
immutable(UnicodeProperty!ushort)("InCoptic", unicodeInCoptic),
immutable(UnicodeProperty!ushort)("InCurrency Symbols", unicodeInCurrency_Symbols),
immutable(UnicodeProperty!ushort)("InCyrillic", unicodeInCyrillic),
immutable(UnicodeProperty!ushort)("InCyrillic Extended-A", unicodeInCyrillic_Extended_A),
immutable(UnicodeProperty!ushort)("InCyrillic Extended-B", unicodeInCyrillic_Extended_B),
immutable(UnicodeProperty!ushort)("InCyrillic Supplement", unicodeInCyrillic_Supplement),
immutable(UnicodeProperty!ushort)("InDevanagari", unicodeInDevanagari),
immutable(UnicodeProperty!ushort)("InDevanagari Extended", unicodeInDevanagari_Extended),
immutable(UnicodeProperty!ushort)("InDingbats", unicodeInDingbats),
immutable(UnicodeProperty!ushort)("InEnclosed Alphanumerics", unicodeInEnclosed_Alphanumerics),
immutable(UnicodeProperty!ushort)("InEnclosed CJK Letters and Months", unicodeInEnclosed_CJK_Letters_and_Months),
immutable(UnicodeProperty!ushort)("InEthiopic", unicodeInEthiopic),
immutable(UnicodeProperty!ushort)("InEthiopic Extended", unicodeInEthiopic_Extended),
immutable(UnicodeProperty!ushort)("InEthiopic Extended-A", unicodeInEthiopic_Extended_A),
immutable(UnicodeProperty!ushort)("InEthiopic Supplement", unicodeInEthiopic_Supplement),
immutable(UnicodeProperty!ushort)("InGeneral Punctuation", unicodeInGeneral_Punctuation),
immutable(UnicodeProperty!ushort)("InGeometric Shapes", unicodeInGeometric_Shapes),
immutable(UnicodeProperty!ushort)("InGeorgian", unicodeInGeorgian),
immutable(UnicodeProperty!ushort)("InGeorgian Supplement", unicodeInGeorgian_Supplement),
immutable(UnicodeProperty!ushort)("InGlagolitic", unicodeInGlagolitic),
immutable(UnicodeProperty!ushort)("InGreek and Coptic", unicodeInGreek_and_Coptic),
immutable(UnicodeProperty!ushort)("InGreek Extended", unicodeInGreek_Extended),
immutable(UnicodeProperty!ushort)("InGujarati", unicodeInGujarati),
immutable(UnicodeProperty!ushort)("InGurmukhi", unicodeInGurmukhi),
immutable(UnicodeProperty!ushort)("InHalfwidth and Fullwidth Forms", unicodeInHalfwidth_and_Fullwidth_Forms),
immutable(UnicodeProperty!ushort)("InHangul Compatibility Jamo", unicodeInHangul_Compatibility_Jamo),
immutable(UnicodeProperty!ushort)("InHangul Jamo", unicodeInHangul_Jamo),
immutable(UnicodeProperty!ushort)("InHangul Jamo Extended-A", unicodeInHangul_Jamo_Extended_A),
immutable(UnicodeProperty!ushort)("InHangul Jamo Extended-B", unicodeInHangul_Jamo_Extended_B),
immutable(UnicodeProperty!ushort)("InHangul Syllables", unicodeInHangul_Syllables),
immutable(UnicodeProperty!ushort)("InHanunoo", unicodeInHanunoo),
immutable(UnicodeProperty!ushort)("InHebrew", unicodeInHebrew),
immutable(UnicodeProperty!ushort)("Inherited", unicodeInherited),
immutable(UnicodeProperty!ushort)("InHigh Private Use Surrogates", unicodeInHigh_Private_Use_Surrogates),
immutable(UnicodeProperty!ushort)("InHigh Surrogates", unicodeInHigh_Surrogates),
immutable(UnicodeProperty!ushort)("InHiragana", unicodeInHiragana),
immutable(UnicodeProperty!ushort)("InIdeographic Description Characters", unicodeInIdeographic_Description_Characters),
immutable(UnicodeProperty!ushort)("InIPA Extensions", unicodeInIPA_Extensions),
immutable(UnicodeProperty!ushort)("Initial_Punctuation", unicodePi),
immutable(UnicodeProperty!ushort)("InJavanese", unicodeInJavanese),
immutable(UnicodeProperty!ushort)("InKanbun", unicodeInKanbun),
immutable(UnicodeProperty!ushort)("InKangxi Radicals", unicodeInKangxi_Radicals),
immutable(UnicodeProperty!ushort)("InKannada", unicodeInKannada),
immutable(UnicodeProperty!ushort)("InKatakana", unicodeInKatakana),
immutable(UnicodeProperty!ushort)("InKatakana Phonetic Extensions", unicodeInKatakana_Phonetic_Extensions),
immutable(UnicodeProperty!ushort)("InKayah Li", unicodeInKayah_Li),
immutable(UnicodeProperty!ushort)("InKhmer", unicodeInKhmer),
immutable(UnicodeProperty!ushort)("InKhmer Symbols", unicodeInKhmer_Symbols),
immutable(UnicodeProperty!ushort)("InLao", unicodeInLao),
immutable(UnicodeProperty!ushort)("InLatin Extended-A", unicodeInLatin_Extended_A),
immutable(UnicodeProperty!ushort)("InLatin Extended Additional", unicodeInLatin_Extended_Additional),
immutable(UnicodeProperty!ushort)("InLatin Extended-B", unicodeInLatin_Extended_B),
immutable(UnicodeProperty!ushort)("InLatin Extended-C", unicodeInLatin_Extended_C),
immutable(UnicodeProperty!ushort)("InLatin Extended-D", unicodeInLatin_Extended_D),
immutable(UnicodeProperty!ushort)("InLepcha", unicodeInLepcha),
immutable(UnicodeProperty!ushort)("InLetterlike Symbols", unicodeInLetterlike_Symbols),
immutable(UnicodeProperty!ushort)("InLimbu", unicodeInLimbu),
immutable(UnicodeProperty!ushort)("InLisu", unicodeInLisu),
immutable(UnicodeProperty!ushort)("InLow Surrogates", unicodeInLow_Surrogates),
immutable(UnicodeProperty!ushort)("InMalayalam", unicodeInMalayalam),
immutable(UnicodeProperty!ushort)("InMandaic", unicodeInMandaic),
immutable(UnicodeProperty!ushort)("InMathematical Operators", unicodeInMathematical_Operators),
immutable(UnicodeProperty!ushort)("InMeetei Mayek", unicodeInMeetei_Mayek),
immutable(UnicodeProperty!ushort)("InMeetei Mayek Extensions", unicodeInMeetei_Mayek_Extensions),
immutable(UnicodeProperty!ushort)("InMiscellaneous Mathematical Symbols-A", unicodeInMiscellaneous_Mathematical_Symbols_A),
immutable(UnicodeProperty!ushort)("InMiscellaneous Mathematical Symbols-B", unicodeInMiscellaneous_Mathematical_Symbols_B),
immutable(UnicodeProperty!ushort)("InMiscellaneous Symbols", unicodeInMiscellaneous_Symbols),
immutable(UnicodeProperty!ushort)("InMiscellaneous Symbols and Arrows", unicodeInMiscellaneous_Symbols_and_Arrows),
immutable(UnicodeProperty!ushort)("InMiscellaneous Technical", unicodeInMiscellaneous_Technical),
immutable(UnicodeProperty!ushort)("InModifier Tone Letters", unicodeInModifier_Tone_Letters),
immutable(UnicodeProperty!ushort)("InMongolian", unicodeInMongolian),
immutable(UnicodeProperty!ushort)("InMyanmar", unicodeInMyanmar),
immutable(UnicodeProperty!ushort)("InMyanmar Extended-A", unicodeInMyanmar_Extended_A),
immutable(UnicodeProperty!ushort)("InNew Tai Lue", unicodeInNew_Tai_Lue),
immutable(UnicodeProperty!ushort)("InNKo", unicodeInNKo),
immutable(UnicodeProperty!ushort)("InNumber Forms", unicodeInNumber_Forms),
immutable(UnicodeProperty!ushort)("InOgham", unicodeInOgham),
immutable(UnicodeProperty!ushort)("InOl Chiki", unicodeInOl_Chiki),
immutable(UnicodeProperty!ushort)("InOptical Character Recognition", unicodeInOptical_Character_Recognition),
immutable(UnicodeProperty!ushort)("InOriya", unicodeInOriya),
immutable(UnicodeProperty!ushort)("InPhags-pa", unicodeInPhags_pa),
immutable(UnicodeProperty!ushort)("InPhonetic Extensions", unicodeInPhonetic_Extensions),
immutable(UnicodeProperty!ushort)("InPhonetic Extensions Supplement", unicodeInPhonetic_Extensions_Supplement),
immutable(UnicodeProperty!ushort)("InPrivate Use Area", unicodeInPrivate_Use_Area),
immutable(UnicodeProperty!ushort)("InRejang", unicodeInRejang),
immutable(UnicodeProperty!ushort)("InRunic", unicodeInRunic),
immutable(UnicodeProperty!ushort)("InSamaritan", unicodeInSamaritan),
immutable(UnicodeProperty!ushort)("InSaurashtra", unicodeInSaurashtra),
immutable(UnicodeProperty!ushort)("Inscriptional_Pahlavi", unicodeInscriptional_Pahlavi),
immutable(UnicodeProperty!ushort)("Inscriptional_Parthian", unicodeInscriptional_Parthian),
immutable(UnicodeProperty!ushort)("InSinhala", unicodeInSinhala),
immutable(UnicodeProperty!ushort)("InSmall Form Variants", unicodeInSmall_Form_Variants),
immutable(UnicodeProperty!ushort)("InSpacing Modifier Letters", unicodeInSpacing_Modifier_Letters),
immutable(UnicodeProperty!ushort)("InSpecials", unicodeInSpecials),
immutable(UnicodeProperty!ushort)("InSundanese", unicodeInSundanese),
immutable(UnicodeProperty!ushort)("InSundanese Supplement", unicodeInSundanese_Supplement),
immutable(UnicodeProperty!ushort)("InSuperscripts and Subscripts", unicodeInSuperscripts_and_Subscripts),
immutable(UnicodeProperty!ushort)("InSupplemental Arrows-A", unicodeInSupplemental_Arrows_A),
immutable(UnicodeProperty!ushort)("InSupplemental Arrows-B", unicodeInSupplemental_Arrows_B),
immutable(UnicodeProperty!ushort)("InSupplemental Mathematical Operators", unicodeInSupplemental_Mathematical_Operators),
immutable(UnicodeProperty!ushort)("InSupplemental Punctuation", unicodeInSupplemental_Punctuation),
immutable(UnicodeProperty!ushort)("InSyloti Nagri", unicodeInSyloti_Nagri),
immutable(UnicodeProperty!ushort)("InSyriac", unicodeInSyriac),
immutable(UnicodeProperty!ushort)("InTagalog", unicodeInTagalog),
immutable(UnicodeProperty!ushort)("InTagbanwa", unicodeInTagbanwa),
immutable(UnicodeProperty!ushort)("InTai Le", unicodeInTai_Le),
immutable(UnicodeProperty!ushort)("InTai Tham", unicodeInTai_Tham),
immutable(UnicodeProperty!ushort)("InTai Viet", unicodeInTai_Viet),
immutable(UnicodeProperty!ushort)("InTamil", unicodeInTamil),
immutable(UnicodeProperty!ushort)("InTelugu", unicodeInTelugu),
immutable(UnicodeProperty!ushort)("InThaana", unicodeInThaana),
immutable(UnicodeProperty!ushort)("InThai", unicodeInThai),
immutable(UnicodeProperty!ushort)("InTibetan", unicodeInTibetan),
immutable(UnicodeProperty!ushort)("InTifinagh", unicodeInTifinagh),
immutable(UnicodeProperty!ushort)("InUnified Canadian Aboriginal Syllabics", unicodeInUnified_Canadian_Aboriginal_Syllabics),
immutable(UnicodeProperty!ushort)("InUnified Canadian Aboriginal Syllabics Extended", unicodeInUnified_Canadian_Aboriginal_Syllabics_Extended),
immutable(UnicodeProperty!ushort)("InVai", unicodeInVai),
immutable(UnicodeProperty!ushort)("InVariation Selectors", unicodeInVariation_Selectors),
immutable(UnicodeProperty!ushort)("InVedic Extensions", unicodeInVedic_Extensions),
immutable(UnicodeProperty!ushort)("InVertical Forms", unicodeInVertical_Forms),
immutable(UnicodeProperty!ushort)("InYijing Hexagram Symbols", unicodeInYijing_Hexagram_Symbols),
immutable(UnicodeProperty!ushort)("InYi Radicals", unicodeInYi_Radicals),
immutable(UnicodeProperty!ushort)("InYi Syllables", unicodeInYi_Syllables),
immutable(UnicodeProperty!ushort)("Javanese", unicodeJavanese),
immutable(UnicodeProperty!ushort)("Join_Control", unicodeJoin_Control),
immutable(UnicodeProperty!ushort)("Katakana", unicodeKatakana),
immutable(UnicodeProperty!ushort)("Kayah_Li", unicodeKayah_Li),
immutable(UnicodeProperty!ushort)("Kharoshthi", unicodeKharoshthi),
immutable(UnicodeProperty!ushort)("Khmer", unicodeKhmer),
immutable(UnicodeProperty!ushort)("L", unicodeL),
immutable(UnicodeProperty!ushort)("Latin", unicodeLatin),
immutable(UnicodeProperty!ushort)("Leading_Jamo", unicodeL),
immutable(UnicodeProperty!ushort)("Lepcha", unicodeLepcha),
immutable(UnicodeProperty!ushort)("Letter_Number", unicodeNl),
immutable(UnicodeProperty!ushort)("Limbu", unicodeLimbu),
immutable(UnicodeProperty!ushort)("Linear_B", unicodeLinear_B),
immutable(UnicodeProperty!ushort)("Line_Separator", unicodeZl),
immutable(UnicodeProperty!ushort)("Lisu", unicodeLisu),
immutable(UnicodeProperty!ushort)("Lm", unicodeLm),
immutable(UnicodeProperty!ushort)("Lo", unicodeLo),
immutable(UnicodeProperty!ushort)("Logical_Order_Exception", unicodeLogical_Order_Exception),
immutable(UnicodeProperty!ushort)("Lt", unicodeLt),
immutable(UnicodeProperty!ushort)("Lydian", unicodeLydian),
immutable(UnicodeProperty!ushort)("Malayalam", unicodeMalayalam),
immutable(UnicodeProperty!ushort)("Mandaic", unicodeMandaic),
immutable(UnicodeProperty!ushort)("Math", unicodeMath),
immutable(UnicodeProperty!ushort)("Math_Symbol", unicodeSm),
immutable(UnicodeProperty!ushort)("Mc", unicodeMc),
immutable(UnicodeProperty!ushort)("Me", unicodeMe),
immutable(UnicodeProperty!ushort)("Meetei_Mayek", unicodeMeetei_Mayek),
immutable(UnicodeProperty!ushort)("Meroitic_Cursive", unicodeMeroitic_Cursive),
immutable(UnicodeProperty!ushort)("Miao", unicodeMiao),
immutable(UnicodeProperty!ushort)("Mn", unicodeMn),
immutable(UnicodeProperty!ushort)("Modifier_Letter", unicodeLm),
immutable(UnicodeProperty!ushort)("Modifier_Symbol", unicodeSk),
immutable(UnicodeProperty!ushort)("Mongolian", unicodeMongolian),
immutable(UnicodeProperty!ushort)("Myanmar", unicodeMyanmar),
immutable(UnicodeProperty!ushort)("Nd", unicodeNd),
immutable(UnicodeProperty!ushort)("New_Tai_Lue", unicodeNew_Tai_Lue),
immutable(UnicodeProperty!ushort)("Nko", unicodeNko),
immutable(UnicodeProperty!ushort)("Nl", unicodeNl),
immutable(UnicodeProperty!ushort)("No", unicodeNo),
immutable(UnicodeProperty!ushort)("Noncharacter_Code_Point", unicodeNoncharacter_Code_Point),
immutable(UnicodeProperty!ushort)("Nonspacing_Mark", unicodeMn),
immutable(UnicodeProperty!ushort)("Ogham", unicodeOgham),
immutable(UnicodeProperty!ushort)("Ol_Chiki", unicodeOl_Chiki),
immutable(UnicodeProperty!ushort)("Old_Italic", unicodeOld_Italic),
immutable(UnicodeProperty!ushort)("Old_Persian", unicodeOld_Persian),
immutable(UnicodeProperty!ushort)("Open_Punctuation", unicodePs),
immutable(UnicodeProperty!ushort)("Osmanya", unicodeOsmanya),
immutable(UnicodeProperty!ushort)("Other_Alphabetic", unicodeOther_Alphabetic),
immutable(UnicodeProperty!ushort)("Other_Grapheme_Extend", unicodeOther_Grapheme_Extend),
immutable(UnicodeProperty!ushort)("Other_ID_Continue", unicodeOther_ID_Continue),
immutable(UnicodeProperty!ushort)("Other_ID_Start", unicodeOther_ID_Start),
immutable(UnicodeProperty!ushort)("Other_Letter", unicodeLo),
immutable(UnicodeProperty!ushort)("Other_Lowercase", unicodeOther_Lowercase),
immutable(UnicodeProperty!ushort)("Other_Math", unicodeOther_Math),
immutable(UnicodeProperty!ushort)("Other_Number", unicodeNo),
immutable(UnicodeProperty!ushort)("Other_Punctuation", unicodePo),
immutable(UnicodeProperty!ushort)("Other_Symbol", unicodeSo),
immutable(UnicodeProperty!ushort)("Other_Uppercase", unicodeOther_Uppercase),
immutable(UnicodeProperty!ushort)("Paragraph_Separator", unicodeZp),
immutable(UnicodeProperty!ushort)("Pattern_Syntax", unicodePattern_Syntax),
immutable(UnicodeProperty!ushort)("Pattern_White_Space", unicodePattern_White_Space),
immutable(UnicodeProperty!ushort)("Pc", unicodePc),
immutable(UnicodeProperty!ushort)("Pd", unicodePd),
immutable(UnicodeProperty!ushort)("Pe", unicodePe),
immutable(UnicodeProperty!ushort)("Pf", unicodePf),
immutable(UnicodeProperty!ushort)("Phags_Pa", unicodePhags_Pa),
immutable(UnicodeProperty!ushort)("Phoenician", unicodePhoenician),
immutable(UnicodeProperty!ushort)("Pi", unicodePi),
immutable(UnicodeProperty!ushort)("Po", unicodePo),
immutable(UnicodeProperty!ushort)("Ps", unicodePs),
immutable(UnicodeProperty!ushort)("Quotation_Mark", unicodeQuotation_Mark),
immutable(UnicodeProperty!ushort)("Radical", unicodeRadical),
immutable(UnicodeProperty!ushort)("Rejang", unicodeRejang),
immutable(UnicodeProperty!ushort)("Runic", unicodeRunic),
immutable(UnicodeProperty!ushort)("Samaritan", unicodeSamaritan),
immutable(UnicodeProperty!ushort)("Saurashtra", unicodeSaurashtra),
immutable(UnicodeProperty!ushort)("Sc", unicodeSc),
immutable(UnicodeProperty!ushort)("Sharada", unicodeSharada),
immutable(UnicodeProperty!ushort)("Sinhala", unicodeSinhala),
immutable(UnicodeProperty!ushort)("Sk", unicodeSk),
immutable(UnicodeProperty!ushort)("Sm", unicodeSm),
immutable(UnicodeProperty!ushort)("So", unicodeSo),
immutable(UnicodeProperty!ushort)("Soft_Dotted", unicodeSoft_Dotted),
immutable(UnicodeProperty!ushort)("Sora_Sompeng", unicodeSora_Sompeng),
immutable(UnicodeProperty!ushort)("Space_Separator", unicodeZs),
immutable(UnicodeProperty!ushort)("Spacing_Mark", unicodeMc),
immutable(UnicodeProperty!ushort)("STerm", unicodeSTerm),
immutable(UnicodeProperty!ushort)("Sundanese", unicodeSundanese),
immutable(UnicodeProperty!ushort)("Surrogate", unicodeCs),
immutable(UnicodeProperty!ushort)("Syloti_Nagri", unicodeSyloti_Nagri),
immutable(UnicodeProperty!ushort)("Syriac", unicodeSyriac),
immutable(UnicodeProperty!ushort)("T", unicodeT),
immutable(UnicodeProperty!ushort)("Tagalog", unicodeTagalog),
immutable(UnicodeProperty!ushort)("Tagbanwa", unicodeTagbanwa),
immutable(UnicodeProperty!ushort)("Tai_Le", unicodeTai_Le),
immutable(UnicodeProperty!ushort)("Tai_Tham", unicodeTai_Tham),
immutable(UnicodeProperty!ushort)("Tai_Viet", unicodeTai_Viet),
immutable(UnicodeProperty!ushort)("Takri", unicodeTakri),
immutable(UnicodeProperty!ushort)("Terminal_Punctuation", unicodeTerminal_Punctuation),
immutable(UnicodeProperty!ushort)("Thaana", unicodeThaana),
immutable(UnicodeProperty!ushort)("Thai", unicodeThai),
immutable(UnicodeProperty!ushort)("Tibetan", unicodeTibetan),
immutable(UnicodeProperty!ushort)("Tifinagh", unicodeTifinagh),
immutable(UnicodeProperty!ushort)("Titlecase_Letter", unicodeLt),
immutable(UnicodeProperty!ushort)("Trailing_Jamo", unicodeT),
immutable(UnicodeProperty!ushort)("Ugaritic", unicodeUgaritic),
immutable(UnicodeProperty!ushort)("Unassigned", unicodeCn),
immutable(UnicodeProperty!ushort)("Unified_Ideograph", unicodeUnified_Ideograph),
immutable(UnicodeProperty!ushort)("V", unicodeV),
immutable(UnicodeProperty!ushort)("Vai", unicodeVai),
immutable(UnicodeProperty!ushort)("Vowel_Jamo", unicodeV),
immutable(UnicodeProperty!ushort)("White_Space", unicodeWhite_Space),
immutable(UnicodeProperty!ushort)("XID_Continue", unicodeXID_Continue),
immutable(UnicodeProperty!ushort)("XID_Start", unicodeXID_Start),
immutable(UnicodeProperty!ushort)("Yi", unicodeYi),
immutable(UnicodeProperty!ushort)("Zl", unicodeZl),
immutable(UnicodeProperty!ushort)("Zp", unicodeZp),
immutable(UnicodeProperty!ushort)("Zs", unicodeZs),
];

immutable immutable(UnicodeProperty!uint)[] fullUnicodeProps = [
immutable(UnicodeProperty!uint)("Carian", unicodeCarian),
immutable(UnicodeProperty!uint)("Co", unicodeCo),
immutable(UnicodeProperty!uint)("Deprecated", unicodeDeprecated),
immutable(UnicodeProperty!uint)("Deseret", unicodeDeseret),
immutable(UnicodeProperty!uint)("Egyptian_Hieroglyphs", unicodeEgyptian_Hieroglyphs),
immutable(UnicodeProperty!uint)("Gothic", unicodeGothic),
immutable(UnicodeProperty!uint)("InAegean Numbers", unicodeInAegean_Numbers),
immutable(UnicodeProperty!uint)("InAlchemical Symbols", unicodeInAlchemical_Symbols),
immutable(UnicodeProperty!uint)("InAncient Greek Musical Notation", unicodeInAncient_Greek_Musical_Notation),
immutable(UnicodeProperty!uint)("InAncient Greek Numbers", unicodeInAncient_Greek_Numbers),
immutable(UnicodeProperty!uint)("InAncient Symbols", unicodeInAncient_Symbols),
immutable(UnicodeProperty!uint)("InArabic Mathematical Alphabetic Symbols", unicodeInArabic_Mathematical_Alphabetic_Symbols),
immutable(UnicodeProperty!uint)("InAvestan", unicodeInAvestan),
immutable(UnicodeProperty!uint)("InBamum Supplement", unicodeInBamum_Supplement),
immutable(UnicodeProperty!uint)("InBrahmi", unicodeInBrahmi),
immutable(UnicodeProperty!uint)("InByzantine Musical Symbols", unicodeInByzantine_Musical_Symbols),
immutable(UnicodeProperty!uint)("InCarian", unicodeInCarian),
immutable(UnicodeProperty!uint)("InChakma", unicodeInChakma),
immutable(UnicodeProperty!uint)("InCJK Compatibility Ideographs Supplement", unicodeInCJK_Compatibility_Ideographs_Supplement),
immutable(UnicodeProperty!uint)("InCJK Unified Ideographs Extension B", unicodeInCJK_Unified_Ideographs_Extension_B),
immutable(UnicodeProperty!uint)("InCJK Unified Ideographs Extension C", unicodeInCJK_Unified_Ideographs_Extension_C),
immutable(UnicodeProperty!uint)("InCJK Unified Ideographs Extension D", unicodeInCJK_Unified_Ideographs_Extension_D),
immutable(UnicodeProperty!uint)("InCounting Rod Numerals", unicodeInCounting_Rod_Numerals),
immutable(UnicodeProperty!uint)("InCuneiform", unicodeInCuneiform),
immutable(UnicodeProperty!uint)("InCuneiform Numbers and Punctuation", unicodeInCuneiform_Numbers_and_Punctuation),
immutable(UnicodeProperty!uint)("InCypriot Syllabary", unicodeInCypriot_Syllabary),
immutable(UnicodeProperty!uint)("InDeseret", unicodeInDeseret),
immutable(UnicodeProperty!uint)("InDomino Tiles", unicodeInDomino_Tiles),
immutable(UnicodeProperty!uint)("InEgyptian Hieroglyphs", unicodeInEgyptian_Hieroglyphs),
immutable(UnicodeProperty!uint)("InEmoticons", unicodeInEmoticons),
immutable(UnicodeProperty!uint)("InEnclosed Alphanumeric Supplement", unicodeInEnclosed_Alphanumeric_Supplement),
immutable(UnicodeProperty!uint)("InEnclosed Ideographic Supplement", unicodeInEnclosed_Ideographic_Supplement),
immutable(UnicodeProperty!uint)("InGothic", unicodeInGothic),
immutable(UnicodeProperty!uint)("InImperial Aramaic", unicodeInImperial_Aramaic),
immutable(UnicodeProperty!uint)("InInscriptional Pahlavi", unicodeInInscriptional_Pahlavi),
immutable(UnicodeProperty!uint)("InInscriptional Parthian", unicodeInInscriptional_Parthian),
immutable(UnicodeProperty!uint)("InKaithi", unicodeInKaithi),
immutable(UnicodeProperty!uint)("InKana Supplement", unicodeInKana_Supplement),
immutable(UnicodeProperty!uint)("InKharoshthi", unicodeInKharoshthi),
immutable(UnicodeProperty!uint)("InLinear B Ideograms", unicodeInLinear_B_Ideograms),
immutable(UnicodeProperty!uint)("InLinear B Syllabary", unicodeInLinear_B_Syllabary),
immutable(UnicodeProperty!uint)("InLycian", unicodeInLycian),
immutable(UnicodeProperty!uint)("InLydian", unicodeInLydian),
immutable(UnicodeProperty!uint)("InMahjong Tiles", unicodeInMahjong_Tiles),
immutable(UnicodeProperty!uint)("InMathematical Alphanumeric Symbols", unicodeInMathematical_Alphanumeric_Symbols),
immutable(UnicodeProperty!uint)("InMeroitic Cursive", unicodeInMeroitic_Cursive),
immutable(UnicodeProperty!uint)("InMeroitic Hieroglyphs", unicodeInMeroitic_Hieroglyphs),
immutable(UnicodeProperty!uint)("InMiao", unicodeInMiao),
immutable(UnicodeProperty!uint)("InMiscellaneous Symbols And Pictographs", unicodeInMiscellaneous_Symbols_And_Pictographs),
immutable(UnicodeProperty!uint)("InMusical Symbols", unicodeInMusical_Symbols),
immutable(UnicodeProperty!uint)("InOld Italic", unicodeInOld_Italic),
immutable(UnicodeProperty!uint)("InOld Persian", unicodeInOld_Persian),
immutable(UnicodeProperty!uint)("InOld South Arabian", unicodeInOld_South_Arabian),
immutable(UnicodeProperty!uint)("InOld Turkic", unicodeInOld_Turkic),
immutable(UnicodeProperty!uint)("InOsmanya", unicodeInOsmanya),
immutable(UnicodeProperty!uint)("InPhaistos Disc", unicodeInPhaistos_Disc),
immutable(UnicodeProperty!uint)("InPhoenician", unicodeInPhoenician),
immutable(UnicodeProperty!uint)("InPlaying Cards", unicodeInPlaying_Cards),
immutable(UnicodeProperty!uint)("InRumi Numeral Symbols", unicodeInRumi_Numeral_Symbols),
immutable(UnicodeProperty!uint)("InSharada", unicodeInSharada),
immutable(UnicodeProperty!uint)("InShavian", unicodeInShavian),
immutable(UnicodeProperty!uint)("InSora Sompeng", unicodeInSora_Sompeng),
immutable(UnicodeProperty!uint)("InSupplementary Private Use Area-A", unicodeInSupplementary_Private_Use_Area_A),
immutable(UnicodeProperty!uint)("InSupplementary Private Use Area-B", unicodeInSupplementary_Private_Use_Area_B),
immutable(UnicodeProperty!uint)("InTags", unicodeInTags),
immutable(UnicodeProperty!uint)("InTai Xuan Jing Symbols", unicodeInTai_Xuan_Jing_Symbols),
immutable(UnicodeProperty!uint)("InTakri", unicodeInTakri),
immutable(UnicodeProperty!uint)("InTransport And Map Symbols", unicodeInTransport_And_Map_Symbols),
immutable(UnicodeProperty!uint)("InUgaritic", unicodeInUgaritic),
immutable(UnicodeProperty!uint)("InVariation Selectors Supplement", unicodeInVariation_Selectors_Supplement),
immutable(UnicodeProperty!uint)("Kaithi", unicodeKaithi),
immutable(UnicodeProperty!uint)("Lycian", unicodeLycian),
immutable(UnicodeProperty!uint)("Meroitic_Hieroglyphs", unicodeMeroitic_Hieroglyphs),
immutable(UnicodeProperty!uint)("Old_South_Arabian", unicodeOld_South_Arabian),
immutable(UnicodeProperty!uint)("Old_Turkic", unicodeOld_Turkic),
immutable(UnicodeProperty!uint)("Other_Default_Ignorable_Code_Point", unicodeOther_Default_Ignorable_Code_Point),
immutable(UnicodeProperty!uint)("Private_Use", unicodeCo),
immutable(UnicodeProperty!uint)("Shavian", unicodeShavian),
immutable(UnicodeProperty!uint)("Variation_Selector", unicodeVariation_Selector),
];
immutable NFC_QCN = RleBitSet!uint.fromRawArray([0x340, 0x2, 0x1, 0x2, 0x2f, 0x1, 0x9, 0x1, 0x8, 0x1, 0x5d0, 0x8, 0x7c, 0x2, 0x1, 0x1, 0x53, 0x1, 0x2, 0x1, 0x22, 0x3, 0x2, 0x1, 0xfd, 0x2, 0x3e5, 0x1, 0x9, 0x1, 0x4, 0x1, 0x4, 0x1, 0x4, 0x1, 0xc, 0x1, 0x9, 0x1, 0x1, 0x2, 0x1, 0x1, 0x8, 0x1, 0x11, 0x1, 0x9, 0x1, 0x4, 0x1, 0x4, 0x1, 0x4, 0x1, 0xc, 0x1, 0xfb7, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3d, 0x1, 0x2, 0x1, 0xa, 0x1, 0x1, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x7, 0x1, 0x2, 0x2, 0x9, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x124, 0x1, 0x3, 0x2, 0x1fd, 0x2, 0x7b1, 0x1, 0xce23, 0x10e, 0x2, 0x1, 0x1, 0x1, 0x2, 0xa, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x3, 0x44, 0x2, 0x6a, 0x43, 0x1, 0x1, 0x1, 0xa, 0xd, 0x1, 0x5, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x9, 0xd60f, 0x7, 0x56, 0x6, 0x1263f, 0x21e]);
immutable NFKC_QCM = RleBitSet!uint.fromRawArray([0x300, 0x5, 0x1, 0x7, 0x2, 0x1, 0x1, 0x1, 0x1, 0x2, 0x6, 0x1, 0x7, 0x6, 0x4, 0x2, 0x1, 0x2, 0x6, 0x1, 0x9, 0x1, 0x2, 0x1, 0x30d, 0x3, 0x2e6, 0x1, 0x81, 0x1, 0x18, 0x1, 0x166, 0x1, 0x17, 0x2, 0x66, 0x1, 0x18, 0x1, 0x7e, 0x1, 0x6b, 0x1, 0x12, 0x2, 0x67, 0x1, 0x18, 0x1, 0x72, 0x1, 0x4, 0x1, 0xf, 0x1, 0x24e, 0x1, 0x132, 0x15, 0x32, 0x1b, 0x972, 0x1, 0x1563, 0x2, 0xe01f, 0x1, 0x6c, 0x1]);
immutable NFD_QCN = RleBitSet!uint.fromRawArray([0xc0, 0x6, 0x1, 0x9, 0x1, 0x6, 0x2, 0x5, 0x2, 0x6, 0x1, 0x9, 0x1, 0x6, 0x2, 0x5, 0x1, 0x11, 0x2, 0x14, 0x2, 0x9, 0x3, 0x4, 0x1, 0x6, 0x4, 0x6, 0x3, 0x6, 0x2, 0x12, 0x2, 0x17, 0x21, 0x2, 0xd, 0x2, 0x1c, 0x10, 0x1, 0x6, 0x2, 0xb, 0x3, 0x2, 0x2, 0x24, 0x2, 0x2, 0x6, 0xe, 0x10c, 0x2, 0x1, 0x2, 0x2f, 0x1, 0x9, 0x1, 0x6, 0x6, 0x1, 0x1, 0x1, 0x3, 0x19, 0x7, 0x19, 0x5, 0x4, 0x2, 0x2b, 0x2, 0x1, 0x1, 0x3, 0x1, 0x4, 0x3, 0xa, 0x1, 0x1f, 0x1, 0x16, 0x2, 0x1, 0x1, 0x3, 0x1, 0x4, 0x3, 0x17, 0x2, 0x49, 0x2, 0xd, 0x4, 0x2, 0x2, 0x2, 0x6, 0x2, 0x6, 0x2, 0xc, 0x2, 0x2, 0x128, 0x5, 0x99, 0x1, 0x1, 0x1, 0x10, 0x1, 0x255, 0x1, 0x7, 0x1, 0x2, 0x1, 0x23, 0x8, 0x6b, 0x2, 0xf, 0x2, 0x1, 0x1, 0x53, 0x1, 0x2, 0x1, 0x22, 0x3, 0x2, 0x1, 0xe9, 0x1, 0x2, 0x2, 0xf, 0x2, 0x36, 0x1, 0x35, 0x3, 0x7b, 0x1, 0x77, 0x1, 0x6, 0x2, 0x1, 0x2, 0x7e, 0x3, 0x8d, 0x1, 0x1, 0x3, 0x164, 0x1, 0x9, 0x1, 0x4, 0x1, 0x4, 0x1, 0x4, 0x1, 0xc, 0x1, 0x9, 0x1, 0x1, 0x2, 0x1, 0x1, 0x8, 0x1, 0x11, 0x1, 0x9, 0x1, 0x4, 0x1, 0x4, 0x1, 0x4, 0x1, 0xc, 0x1, 0x6c, 0x1, 0xadf, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x28, 0x1, 0x1, 0x1, 0x2, 0x2, 0x1, 0x1, 0x2bc, 0x9a, 0x1, 0x1, 0x4, 0x5a, 0x6, 0x16, 0x2, 0x6, 0x2, 0x26, 0x2, 0x6, 0x2, 0x8, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1f, 0x2, 0x35, 0x1, 0x7, 0x1, 0x1, 0x2, 0x4, 0x1, 0xe, 0x2, 0x6, 0x1, 0x13, 0x2, 0x3, 0x1, 0x8, 0x2, 0x2, 0x124, 0x1, 0x3, 0x2, 0x6e, 0x2, 0x12, 0x1, 0x1e, 0x3, 0x34, 0x1, 0x4, 0x1, 0x2, 0x1, 0x17, 0x1, 0x1, 0x1, 0x1a, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x1, 0x16, 0x1, 0x1, 0x1, 0xa, 0x5, 0x2, 0x2, 0x2, 0x2, 0x6, 0x2, 0x2, 0x2, 0x2, 0x2, 0x22, 0x4, 0x30, 0x4, 0x6, 0x4, 0x3b, 0x2, 0x7b1, 0x1, 0x56f, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x6, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x16, 0x1, 0x9, 0x1, 0xd, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x6, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x16, 0x1, 0x2, 0x4, 0x3, 0x1, 0x7b01, 0x2ba4, 0x215c, 0x10e, 0x2, 0x1, 0x1, 0x1, 0x2, 0xa, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x3, 0x44, 0x2, 0x6a, 0x43, 0x1, 0x1, 0x1, 0xa, 0xd, 0x1, 0x5, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x9, 0x154b, 0x1, 0x1, 0x1, 0xe, 0x1, 0x82, 0x2, 0xc02e, 0x7, 0x56, 0x6, 0x1263f, 0x21e]);
immutable NFKC_QCN = RleBitSet!uint.fromRawArray([0xa0, 0x1, 0x7, 0x1, 0x1, 0x1, 0x4, 0x1, 0x2, 0x4, 0x2, 0x3, 0x1, 0x3, 0x73, 0x2, 0xb, 0x2, 0x8, 0x1, 0x35, 0x1, 0x44, 0x9, 0x24, 0x3, 0xbc, 0x9, 0x1f, 0x6, 0x2, 0x5, 0x5b, 0x2, 0x1, 0x2, 0x2f, 0x1, 0x5, 0x1, 0x3, 0x1, 0x5, 0x2, 0x1, 0x1, 0x48, 0x7, 0x19, 0x3, 0x1, 0x2, 0x3, 0x1, 0x18d, 0x1, 0xed, 0x4, 0x2df, 0x8, 0x7c, 0x2, 0x1, 0x1, 0x53, 0x1, 0x2, 0x1, 0x22, 0x3, 0x2, 0x1, 0xfd, 0x2, 0x2d5, 0x1, 0x7f, 0x1, 0x28, 0x2, 0x2e, 0x1, 0x36, 0x1, 0x9, 0x1, 0x4, 0x1, 0x4, 0x1, 0x4, 0x1, 0xc, 0x1, 0x9, 0x1, 0x1, 0x5, 0x7, 0x1, 0x11, 0x1, 0x9, 0x1, 0x4, 0x1, 0x4, 0x1, 0x4, 0x1, 0xc, 0x1, 0x142, 0x1, 0xc2f, 0x3, 0x1, 0xb, 0x1, 0x12, 0x1, 0x1c, 0xd, 0x1, 0x22, 0x25, 0xda, 0x2, 0xd5, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3d, 0x1, 0x1, 0x5, 0x7, 0x1, 0x1, 0x1, 0x1, 0x3, 0x3, 0x1, 0x7, 0x1, 0x1, 0x3, 0x3, 0x1, 0x7, 0x1, 0x1, 0x3, 0x9, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0xb, 0x6, 0x1, 0x5, 0x1, 0xc, 0x3, 0x8, 0x1, 0x3, 0x2, 0x1, 0x2, 0x4, 0x1, 0x1, 0x1, 0x8, 0x3, 0xd, 0x1, 0x7, 0x1, 0x10, 0x2, 0x2, 0x1b, 0x1, 0xd, 0xb, 0x1, 0x57, 0x4, 0x1, 0x3, 0x1, 0xb, 0x1, 0x2, 0x2, 0x5, 0x2, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x1, 0x3, 0x1, 0x7, 0x1, 0x6, 0x4, 0x5, 0x6, 0x30, 0x9, 0x1, 0xa2, 0x2, 0x1, 0x2, 0xf8, 0x2, 0x135, 0x8b, 0x521, 0x1, 0x67, 0x3, 0x65, 0x1, 0x19f, 0x2, 0xf1, 0x1, 0x12f, 0x1, 0x53, 0x1, 0xc, 0xd6, 0x2a, 0x1, 0x35, 0x1, 0x1, 0x3, 0x60, 0x2, 0x2, 0x1, 0x5f, 0x1, 0x31, 0x5e, 0x3, 0xe, 0x60, 0x1f, 0x1, 0x28, 0x8, 0x2f, 0x1, 0x7f, 0x1, 0x100, 0x7370, 0x1, 0x87, 0x2, 0x5106, 0x10e, 0x2, 0x1, 0x1, 0x1, 0x2, 0xa, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x3, 0x44, 0x2, 0x6a, 0x26, 0x7, 0xc, 0x5, 0x5, 0x1, 0x1, 0x18, 0x1, 0x5, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x6c, 0x21, 0x16b, 0x12, 0x40, 0x2, 0x36, 0x28, 0xd, 0x13, 0xa, 0x16, 0x15, 0x2, 0xc, 0x1, 0x13, 0x1, 0x4, 0x4, 0x3, 0x1, 0x1, 0x1, 0x87, 0x4, 0xbe, 0x3, 0x6, 0x2, 0x6, 0x2, 0x6, 0x2, 0x3, 0x3, 0x7, 0x1, 0x7, 0xd16f, 0x7, 0x56, 0x6, 0x23f, 0x55, 0x1, 0x47, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0xc, 0x1, 0x1, 0x1, 0x7, 0x1, 0x41, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1, 0x1c, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1, 0x154, 0x2, 0x124, 0x2, 0x32, 0x1600, 0x4, 0x1, 0x1b, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0xa, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x6, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x4, 0x1, 0x7, 0x1, 0x4, 0x1, 0x4, 0x1, 0x1, 0x1, 0xa, 0x1, 0x11, 0x5, 0x3, 0x1, 0x5, 0x1, 0x11, 0x244, 0xb, 0x5, 0x1f, 0x1, 0x20, 0x1a, 0x2, 0x24, 0x1, 0x6f, 0x3, 0xd, 0x2b, 0x5, 0x9, 0x7, 0x2, 0x105ae, 0x21e]);
immutable NFKD_QCN = RleBitSet!uint.fromRawArray([0xa0, 0x1, 0x7, 0x1, 0x1, 0x1, 0x4, 0x1, 0x2, 0x4, 0x2, 0x3, 0x1, 0x3, 0x1, 0x6, 0x1, 0x9, 0x1, 0x6, 0x2, 0x5, 0x2, 0x6, 0x1, 0x9, 0x1, 0x6, 0x2, 0x5, 0x1, 0x11, 0x2, 0x14, 0x2, 0x9, 0x1, 0x6, 0x1, 0x8, 0x2, 0x7, 0x2, 0x6, 0x2, 0x12, 0x2, 0x18, 0x20, 0x2, 0xd, 0x2, 0x13, 0x19, 0x1, 0x6, 0x2, 0x10, 0x2, 0x24, 0x2, 0x2, 0x6, 0xe, 0x7c, 0x9, 0x1f, 0x6, 0x2, 0x5, 0x5b, 0x2, 0x1, 0x2, 0x2f, 0x1, 0x5, 0x1, 0x3, 0x1, 0x5, 0x7, 0x1, 0x1, 0x1, 0x3, 0x19, 0x7, 0x19, 0x5, 0x1, 0x7, 0x19, 0x3, 0x1, 0x2, 0x3, 0x1, 0x6, 0x2, 0x1, 0x1, 0x3, 0x1, 0x4, 0x3, 0xa, 0x1, 0x1f, 0x1, 0x16, 0x2, 0x1, 0x1, 0x3, 0x1, 0x4, 0x3, 0x17, 0x2, 0x49, 0x2, 0xd, 0x4, 0x2, 0x2, 0x2, 0x6, 0x2, 0x6, 0x2, 0xc, 0x2, 0x2, 0x8d, 0x1, 0x9a, 0x5, 0x4e, 0x4, 0x47, 0x1, 0x1, 0x1, 0x10, 0x1, 0x255, 0x1, 0x7, 0x1, 0x2, 0x1, 0x23, 0x8, 0x6b, 0x2, 0xf, 0x2, 0x1, 0x1, 0x53, 0x1, 0x2, 0x1, 0x22, 0x3, 0x2, 0x1, 0xe9, 0x1, 0x2, 0x2, 0xf, 0x2, 0x36, 0x1, 0x35, 0x3, 0x7b, 0x1, 0x77, 0x1, 0x6, 0x2, 0x1, 0x2, 0x7e, 0x3, 0x8d, 0x1, 0x1, 0x3, 0x54, 0x1, 0x7f, 0x1, 0x28, 0x2, 0x2e, 0x1, 0x36, 0x1, 0x9, 0x1, 0x4, 0x1, 0x4, 0x1, 0x4, 0x1, 0xc, 0x1, 0x9, 0x1, 0x1, 0x5, 0x7, 0x1, 0x11, 0x1, 0x9, 0x1, 0x4, 0x1, 0x4, 0x1, 0x4, 0x1, 0xc, 0x1, 0x6c, 0x1, 0xd5, 0x1, 0xa09, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x28, 0x1, 0x1, 0x1, 0x2, 0x2, 0x1, 0x1, 0x1e8, 0x3, 0x1, 0xb, 0x1, 0x12, 0x1, 0x1c, 0xd, 0x1, 0x22, 0x25, 0x40, 0x9c, 0x4, 0x5a, 0x6, 0x16, 0x2, 0x6, 0x2, 0x26, 0x2, 0x6, 0x2, 0x8, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1f, 0x2, 0x35, 0x1, 0xf, 0x1, 0xe, 0x2, 0x6, 0x1, 0x13, 0x2, 0x3, 0x1, 0x9, 0x1, 0xb, 0x6, 0x1, 0x5, 0x1, 0xc, 0x3, 0x8, 0x1, 0x3, 0x2, 0x1, 0x2, 0x4, 0x1, 0x1, 0x1, 0x8, 0x3, 0xd, 0x1, 0x7, 0x1, 0x10, 0x2, 0x2, 0x1b, 0x1, 0xd, 0xb, 0x1, 0x57, 0x4, 0x1, 0x3, 0x1, 0xb, 0x1, 0x2, 0x2, 0x5, 0x2, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4, 0x1, 0x3, 0x1, 0x7, 0x1, 0x6, 0x4, 0x5, 0x6, 0x30, 0x9, 0x1, 0x10, 0x2, 0x12, 0x1, 0x1e, 0x3, 0x34, 0x1, 0x4, 0x1, 0x2, 0x1, 0x17, 0x1, 0x1, 0x1, 0x5, 0x2, 0x1, 0x2, 0x10, 0x1, 0x2, 0x1, 0x2, 0x1, 0x1, 0x1, 0x16, 0x1, 0x1, 0x1, 0xa, 0x5, 0x2, 0x2, 0x2, 0x2, 0x6, 0x2, 0x2, 0x2, 0x2, 0x2, 0x22, 0x4, 0x30, 0x4, 0x6, 0x4, 0x3b, 0x2, 0x135, 0x8b, 0x521, 0x1, 0x67, 0x3, 0x65, 0x1, 0x19f, 0x2, 0xf1, 0x1, 0x12f, 0x1, 0x53, 0x1, 0xc, 0xd6, 0x2a, 0x1, 0x35, 0x1, 0x1, 0x3, 0x11, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x6, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x16, 0x1, 0x6, 0x2, 0x1, 0x2, 0xc, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x6, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x1, 0x2, 0x16, 0x1, 0x2, 0x4, 0x3, 0x2, 0x31, 0x5e, 0x3, 0xe, 0x60, 0x1f, 0x1, 0x28, 0x8, 0x2f, 0x1, 0x7f, 0x1, 0x100, 0x7370, 0x1, 0x87, 0x2, 0x406, 0x2ba4, 0x215c, 0x10e, 0x2, 0x1, 0x1, 0x1, 0x2, 0xa, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x3, 0x44, 0x2, 0x6a, 0x26, 0x7, 0xc, 0x5, 0x5, 0x1, 0x1, 0x18, 0x1, 0x5, 0x1, 0x1, 0x1, 0x2, 0x1, 0x2, 0x1, 0x6c, 0x21, 0x16b, 0x12, 0x40, 0x2, 0x36, 0x28, 0xd, 0x13, 0xa, 0x16, 0x15, 0x2, 0xc, 0x1, 0x13, 0x1, 0x4, 0x4, 0x3, 0x1, 0x1, 0x1, 0x87, 0x4, 0xbe, 0x3, 0x6, 0x2, 0x6, 0x2, 0x6, 0x2, 0x3, 0x3, 0x7, 0x1, 0x7, 0x10ab, 0x1, 0x1, 0x1, 0xe, 0x1, 0x82, 0x2, 0xc02e, 0x7, 0x56, 0x6, 0x23f, 0x55, 0x1, 0x47, 0x1, 0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x4, 0x1, 0xc, 0x1, 0x1, 0x1, 0x7, 0x1, 0x41, 0x1, 0x4, 0x2, 0x8, 0x1, 0x7, 0x1, 0x1c, 0x1, 0x4, 0x1, 0x5, 0x1, 0x1, 0x3, 0x7, 0x1, 0x154, 0x2, 0x124, 0x2, 0x32, 0x1600, 0x4, 0x1, 0x1b, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0xa, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x6, 0x1, 0x4, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x1, 0x2, 0x1, 0x1, 0x2, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x1, 0x1, 0x2, 0x4, 0x1, 0x7, 0x1, 0x4, 0x1, 0x4, 0x1, 0x1, 0x1, 0xa, 0x1, 0x11, 0x5, 0x3, 0x1, 0x5, 0x1, 0x11, 0x244, 0xb, 0x5, 0x1f, 0x1, 0x20, 0x1a, 0x2, 0x24, 0x1, 0x6f, 0x3, 0xd, 0x2b, 0x5, 0x9, 0x7, 0x2, 0x105ae, 0x21e]);
immutable NFC_QCM = RleBitSet!uint.fromRawArray([0x300, 0x5, 0x1, 0x7, 0x2, 0x1, 0x1, 0x1, 0x1, 0x2, 0x6, 0x1, 0x7, 0x6, 0x4, 0x2, 0x1, 0x2, 0x6, 0x1, 0x9, 0x1, 0x2, 0x1, 0x30d, 0x3, 0x2e6, 0x1, 0x81, 0x1, 0x18, 0x1, 0x166, 0x1, 0x17, 0x2, 0x66, 0x1, 0x18, 0x1, 0x7e, 0x1, 0x6b, 0x1, 0x12, 0x2, 0x67, 0x1, 0x18, 0x1, 0x72, 0x1, 0x4, 0x1, 0xf, 0x1, 0x24e, 0x1, 0x132, 0x15, 0x32, 0x1b, 0x972, 0x1, 0x1563, 0x2, 0xe01f, 0x1, 0x6c, 0x1]);
version (LittleEndian)
{
    static if(size_t.sizeof == 4)
    {

immutable lowerCaseTrie = CodepointSetTrie!(10, 11).fromRawArray([ 0x0,  0x156], [ 0x400,  0x5000], [ 0x100400,  0x400c02,  0x100401,  0x100401,  0x100401,  0x100401,  0x500401,  0x100401,  0x100401,  0x100401,  0x701801,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x102001,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x1,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7fffffe,  0x0,  0x4200400,  0x80000000,  0xff7fffff,  0xaaaaaaaa,  0x55aaaaaa,  0xaaaaab55,  0xd4aaaaaa,  0x4e243129,  0xe6512d2a,  0xb5555240,  0xaa29aaaa,  0xaaaaaaaa,  0x93faaaaa,  0xffffaa85,  0xffffffff,  0xffefffff,  0x1ffffff,  0x3,  0x1f,  0x0,  0x0,  0x20,  0x3c8a0000,  0x10000,  0xfffff000,  0xaae37fff,  0x192faaaa,  0x0,  0xffff0000,  0xffffffff,  0xaaaaaaaa,  0xaaaaa802,  0xaaaaaaaa,  0xaaaad554,  0xaaaaaaaa,  0xaaaaaaaa,  0xaa,  0x0,  0xfffffffe,  0xff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x0,  0x0,  0xaaaaaaaa,  0xaaaaaaaa,  0xaaaaaaaa,  0xaaaaaaaa,  0xbfeaaaaa,  0xaaaaaaaa,  0xaaaaaaaa,  0xaaaaaaaa,  0x3f00ff,  0xff00ff,  0xff003f,  0x3fff00ff,  0xff00ff,  0x40df00ff,  0xcf00dc,  0xdc00ff,  0x0,  0x0,  0x0,  0x80020000,  0x1fff0000,  0x0,  0x0,  0x0,  0x8c400,  0x32108000,  0x43c0,  0xffff0000,  0x10,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffff0000,  0x3ff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffff0000,  0x7fffffff,  0x3fda1562,  0xaaaaaaaa,  0xaaaaaaaa,  0xaaaaaaaa,  0x8501a,  0xffffffff,  0x20bf,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xaaaaaaaa,  0x2aaa,  0xaaaaaa,  0x0,  0x0,  0x0,  0x0,  0xaaabaaa8,  0xaaaaaaaa,  0x95ffaaaa,  0xa50aa,  0x2aa,  0x0,  0x7000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xf8007f,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7fffffe,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffffff00,  0xffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xfc000000,  0xfffff,  0xffdfc000,  0xff,  0xffffffc,  0xebc00000,  0xffef,  0xfffffc00,  0xc000000f,  0xffffff,  0xfffc0000,  0xfff,  0xffffffc0,  0xfc000000,  0xfffff,  0xffffc000,  0xff,  0xffffffc,  0xffc00000,  0xffff,  0xfffffc00,  0x3f,  0xf7fffffc,  0xf0000003,  0xfdfffff,  0xffc00000,  0x3f7fff,  0xffff0000,  0xfdff,  0xfffffc00,  0xbf7,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);
immutable upperCaseTrie = CodepointSetTrie!(10, 11).fromRawArray([ 0x0,  0x156], [ 0x400,  0x5800], [ 0x200400,  0x501003,  0x100401,  0x100401,  0x100401,  0x100401,  0x600401,  0x100401,  0x100401,  0x100401,  0x801c01,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x102401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x100401,  0x1,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7fffffe,  0x0,  0x0,  0x0,  0x7f7fffff,  0x0,  0x55555555,  0xaa555555,  0x555554aa,  0x2b555555,  0xb1dbced6,  0x11aed2d5,  0x4aaaa490,  0x55d25555,  0x55555555,  0x6c055555,  0x557a,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x450000,  0xfffed740,  0xffb,  0x551c8000,  0xe6905555,  0xffffffff,  0xffff,  0x0,  0x55555555,  0x55555401,  0x55555555,  0x55552aab,  0x55555555,  0x55555555,  0xfffe0055,  0x7fffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffffffff,  0x20bf,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x55555555,  0x55555555,  0x55555555,  0x55555555,  0x40155555,  0x55555555,  0x55555555,  0x55555555,  0x3f00ff00,  0xff00ff00,  0xaa003f00,  0xff00,  0x0,  0xf000000,  0xf000f00,  0xf001f00,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3e273884,  0xc00f3d50,  0x20,  0xffff,  0x8,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffc00000,  0xffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffffffff,  0x7fff,  0x0,  0xc025ea9d,  0x55555555,  0x55555555,  0x55555555,  0x42805,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x55555555,  0x1555,  0x555555,  0x0,  0x0,  0x0,  0x0,  0x55545554,  0x55555555,  0x6a005555,  0x52855,  0x555,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7fffffe,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffffffff,  0xff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3ffffff,  0xfff00000,  0x3fff,  0xffffff00,  0xd0000003,  0x3fde64,  0xffff0000,  0x3ff,  0x1fdfe7b0,  0x7b000000,  0x1fc5f,  0xfffff000,  0x3f,  0x3ffffff,  0xfff00000,  0x3fff,  0xffffff00,  0xf0000003,  0x3fffff,  0xffff0000,  0x3ff,  0xffffff00,  0x1,  0x7fffffc,  0xf0000000,  0x1fffff,  0xffc00000,  0x7fff,  0xffff0000,  0x1ff,  0x400,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);
immutable simpleCaseTrie = CodepointTrie!(ushort, 12, 9).fromRawArray([ 0x0,  0x800], [ 0x1000,  0x1c00], [ 0x1000,  0x3002,  0x3003,  0x3003,  0x3004,  0x3003,  0x3003,  0x6005,  0x3007,  0x3008,  0x3003,  0x3009,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0xa003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0xb003,  0x3003,  0x300c,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x1b5ffff,  0x1ca01bd,  0x1df01d5,  0x1f701ea,  0x20b01ff,  0x6e00213,  0x2300226,  0x2420238,  0x256024c,  0x82e025e,  0x27b0273,  0x28d0283,  0x29d0295,  0xffff02a3,  0xffffffff,  0xffffffff,  0x1b6ffff,  0x1cb01be,  0x1e001d6,  0x1f801eb,  0x20c0200,  0x6df0214,  0x2310227,  0x2430239,  0x257024d,  0x82d025f,  0x27c0274,  0x28e0284,  0x29e0296,  0xffff02a4,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x494ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x4e604e0,  0x4f404f0,  0x6e304fe,  0x51c0513,  0x530052c,  0x53e053a,  0x54e0549,  0x5560552,  0x55e055a,  0x5660562,  0x56e0568,  0xffff0572,  0x580057a,  0x58c0584,  0x5960590,  0x1840598,  0x4e704e1,  0x4f504f1,  0x6e204ff,  0x51d0514,  0x531052d,  0x53f053b,  0x54f054a,  0x5570553,  0x55f055b,  0x5670563,  0x56f0569,  0xffff0573,  0x581057b,  0x58d0585,  0x5970591,  0x7f50599,  0x5fe05fd,  0x6040603,  0x60a0609,  0x6140613,  0x61e061d,  0x6280627,  0x6320631,  0x6380637,  0x63e063d,  0x6440643,  0x64a0649,  0x650064f,  0x6560655,  0x65c065b,  0x6620661,  0x6680667,  0x66e066d,  0x6760675,  0x67e067d,  0x68a0689,  0x6920691,  0x69a0699,  0x6a206a1,  0x6a606a5,  0xffffffff,  0x6ac06ab,  0x6b006af,  0x6b806b7,  0x6c1ffff,  0x6c906c2,  0x6cf06ca,  0x6d606d0,  0x6da06d7,  0x6e406db,  0x6ea06e5,  0x6f206eb,  0xffff06f3,  0x7010700,  0x7090708,  0x70d070c,  0x7110710,  0x7150714,  0x7190718,  0x7210720,  0x72b072a,  0x7330732,  0x73d073c,  0x7430742,  0x74d074c,  0x7570756,  0x7610760,  0x76f076e,  0x77d077c,  0x7890788,  0x7930792,  0x79d079c,  0x7ab07aa,  0x7b907b8,  0x7c707c6,  0x7dd07dc,  0x7fc07f4,  0x80c07fd,  0x81c080d,  0x82c081d,  0x83f04d5,  0x84d084c,  0x8610860,  0x18000c,  0x2c0019,  0x3e0036,  0xffff003f,  0x5e0056,  0x6e0066,  0x7e006f,  0x3160088,  0xa2009a,  0xad00ac,  0xffff04b0,  0xce00c8,  0xda0409,  0xe300e2,  0xef00ee,  0xf900f8,  0x1040100,  0x10c0105,  0xffffffff,  0x1190118,  0x1260120,  0x1320127,  0x140013a,  0x14c0141,  0x158014d,  0x1610160,  0xffffffff,  0x1730172,  0x31cffff,  0xffffffff,  0xffffffff,  0x1aa01ac,  0x1ce01ab,  0x1cd01cc,  0x1ec01ee,  0x20101ed,  0x2150202,  0x2280216,  0x23a0229,  0x24e023b,  0x260024f,  0x2750261,  0x2850276,  0x570286,  0x2a0029f,  0x2ac02ab,  0x2b602b5,  0x2c202c1,  0x2cc02cb,  0x2d402d3,  0x2dc02db,  0x2e602e5,  0x2f002ef,  0x304ffff,  0x3030302,  0x30e030d,  0x31b0315,  0x320031f,  0x3280327,  0x330032f,  0x3380337,  0x3420341,  0x34e034d,  0x35a0359,  0x3680367,  0x3740373,  0x380037f,  0x38a0389,  0x3970396,  0x3a303a2,  0x3b003af,  0x3be03bd,  0x3cd03cc,  0x3da03d9,  0x3e603e5,  0x3f303f2,  0x3fe03fd,  0xffff0408,  0x4120411,  0x41a0419,  0x4250424,  0x42f042e,  0x43b043a,  0x4490448,  0x4570456,  0x4650464,  0x4710470,  0xffffffff,  0xffffffff,  0xffffffff,  0x4a10497,  0x4af04a2,  0x30804b8,  0x4ca030c,  0x4d404cb,  0x4e204d8,  0x4e904e8,  0x4f704f6,  0x5080507,  0x51f051e,  0x5330532,  0x2b202be,  0x84002c6,  0xffff000d,  0x37002d,  0x5fffff,  0x67ffff,  0xffffffff,  0xffffffff,  0xffff007f,  0x89ffff,  0x2eaffff,  0xffff037e,  0x9b00a3,  0x25dffff,  0xffffffff,  0xc9ffff,  0x2baffff,  0xffff00cf,  0xdbffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x270ffff,  0xffffffff,  0xffff0101,  0x10dffff,  0xffffffff,  0xffffffff,  0x4d90121,  0x13b0133,  0xffff04e3,  0xffffffff,  0xffffffff,  0xffff0159,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x738ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x2e202e1,  0x2ec02eb,  0xffffffff,  0x2fd02fc,  0xffffffff,  0x5d8ffff,  0x5de05dc,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0347,  0x35b0353,  0xffff0361,  0xffff036d,  0x3810379,  0x38bffff,  0x3980517,  0x5c8039e,  0x3b103ab,  0x73905c4,  0x3ce05b2,  0x3db0496,  0x3e703e1,  0x5b7054d,  0x4b3ffff,  0x40a0404,  0x4130542,  0x6d50417,  0x4260422,  0x3540348,  0x362035c,  0x38cffff,  0x3990516,  0x5c7039f,  0x3b203ac,  0x73705c3,  0x3cf05b1,  0x3dc0495,  0x3e803e2,  0x5b6054c,  0x4b204b1,  0x40b0405,  0x4140541,  0x6d40418,  0x4270423,  0x37a036e,  0x5090382,  0x5c50515,  0xffffffff,  0x540ffff,  0x50a054b,  0x5550554,  0x55d055c,  0x5650564,  0x56b056a,  0x5750574,  0x57d057c,  0x5870586,  0x5930592,  0x59b059a,  0x59f059e,  0x5a505a4,  0x5a905a8,  0x5b505b0,  0xffff05d0,  0x5c605c2,  0x5cbffff,  0x5cf05cc,  0x5d405d3,  0x5d7ffff,  0x5dd05db,  0x5e505e3,  0x5eb05e9,  0x5f105ef,  0x5f705f5,  0x5fb05f9,  0x60105ff,  0x6070605,  0x60f060b,  0x6190615,  0x623061f,  0x62d0629,  0x6350633,  0x63b0639,  0x641063f,  0x6470645,  0x64d064b,  0x6530651,  0x6590657,  0x65f065d,  0x6650663,  0x66b0669,  0x671066f,  0x6790677,  0x683067f,  0x61a0616,  0x6240620,  0x62e062a,  0x6360634,  0x63c063a,  0x6420640,  0x6480646,  0x64e064c,  0x6540652,  0x65a0658,  0x660065e,  0x6660664,  0x66c066a,  0x6720670,  0x67a0678,  0x6840680,  0x5e605e4,  0x5ec05ea,  0x5f205f0,  0x5f805f6,  0x5fc05fa,  0x6020600,  0x6080606,  0x610060c,  0x7230722,  0x72d072c,  0x7350734,  0x73f073e,  0x7450744,  0x74f074e,  0x7590758,  0x7630762,  0x7710770,  0x77f077e,  0x78b078a,  0x7950794,  0x79f079e,  0x7ad07ac,  0x7bb07ba,  0x7c907c8,  0x7df07de,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x8380837,  0x84f084e,  0x8630862,  0xf000e,  0x250024,  0x390038,  0x490048,  0x590058,  0x690068,  0x790078,  0x8b008a,  0x9d009c,  0xaf00ae,  0xbb00ba,  0xcb00ca,  0xd700d6,  0xe500e4,  0xf100f0,  0xfb00fa,  0x1030102,  0x10b010a,  0x1130112,  0x11b011a,  0x1230122,  0x12f012e,  0x13d013c,  0x1490148,  0x15a0154,  0x164015b,  0x16c0165,  0x179016d,  0x181017a,  0x18f0182,  0x1990190,  0x155019a,  0x1b801b7,  0x1d001cf,  0x1e501e4,  0x1fa01f9,  0x20e020d,  0x2210220,  0x2330232,  0x2450244,  0x2590258,  0x26c026b,  0x27e027d,  0x290028f,  0x2a202a1,  0x2ae02ad,  0x2b802b7,  0x2c402c3,  0x2ce02cd,  0x2d602d5,  0x2de02dd,  0x2e802e7,  0x2f202f1,  0x2f802f7,  0x3060305,  0x310030f,  0x3180317,  0x3220321,  0x32a0329,  0x3320331,  0x33a0339,  0x3440343,  0x350034f,  0x35e035d,  0x36a0369,  0x3760375,  0x3840383,  0x38e038d,  0x39b039a,  0x3a803a7,  0x3b403b3,  0x3c403c3,  0x3d103d0,  0x3de03dd,  0x3ea03e9,  0x3f803f7,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x42cffff,  0x4360430,  0x444043c,  0x452044a,  0x4600458,  0x46e0466,  0x4780472,  0x480047a,  0x4880482,  0x490048a,  0x4a30499,  0x4b404a7,  0x4c204ba,  0x4cc04c4,  0x4d604ce,  0x4e404da,  0x4f204ea,  0x50004f8,  0x518050b,  0xffff0524,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x42dffff,  0x4370431,  0x445043d,  0x453044b,  0x4610459,  0x46f0467,  0x4790473,  0x481047b,  0x4890483,  0x491048b,  0x4a4049a,  0x4b504a8,  0x4c304bb,  0x4cd04c5,  0x4d704cf,  0x4e504db,  0x4f304eb,  0x50104f9,  0x519050c,  0xffff0525,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x7a407a0,  0x7b207ae,  0x7c007bc,  0x7d207ca,  0x7e807e0,  0x7fe07f6,  0x80e0806,  0x81e0816,  0x82f0826,  0x8410839,  0x8560850,  0x864,  0x1a0010,  0x2e0026,  0x40003a,  0x4e004a,  0x60005a,  0x70006a,  0x80007a,  0x90ffff,  0xffffffff,  0xffffffff,  0xc0ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x294ffff,  0xffffffff,  0x267ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x6740673,  0x67c067b,  0x6860685,  0x68e068d,  0x6960695,  0x69e069d,  0x6a406a3,  0x6a806a7,  0x6aa06a9,  0x6ae06ad,  0x6b406b3,  0x6bc06bb,  0x6c406c3,  0x6cc06cb,  0x6d206d1,  0x6d906d8,  0x6dd06dc,  0x6e706e6,  0x6ed06ec,  0x6f506f4,  0x6fb06fa,  0x7050704,  0x70b070a,  0x70f070e,  0x7130712,  0x7170716,  0x71d071c,  0x7270726,  0x7310730,  0x73b073a,  0x7410740,  0x7490748,  0x7530752,  0x75d075c,  0x7690768,  0x7770776,  0x7850784,  0x78f078e,  0x7990798,  0x7a707a6,  0x7b507b4,  0x7c307c2,  0x7d507d4,  0x7eb07ea,  0x8010800,  0x8110810,  0x8210820,  0x8320831,  0x8440843,  0x8590858,  0x30002,  0x1d001c,  0x310030,  0x430042,  0x510050,  0x630062,  0x730072,  0x830082,  0x930092,  0xa500a4,  0xb500b4,  0xc300c2,  0xd100d0,  0xdd00dc,  0xe900e8,  0xf500f4,  0xfd00fc,  0x1070106,  0x10f010e,  0x1150114,  0x11d011c,  0x1290128,  0x1350134,  0x1430142,  0x14f014e,  0xffffffff,  0xffffffff,  0x845ffff,  0xffffffff,  0xffff0183,  0x1920191,  0x19c019b,  0x1ae01ad,  0x1c301c2,  0x1d801d7,  0x1f001ef,  0x2040203,  0x2180217,  0x22b022a,  0x23d023c,  0x2510250,  0x2630262,  0x2780277,  0x2880287,  0x2980297,  0x2a602a5,  0x2b002af,  0x2bc02bb,  0x2c802c7,  0x2d202d1,  0x2d802d7,  0x2e402e3,  0x2ee02ed,  0x2f402f3,  0x2ff02fe,  0x30a0309,  0x3140313,  0x31e031d,  0x3260325,  0x32e032d,  0x3360335,  0x33e033d,  0x34a0349,  0x3560355,  0x3640363,  0x370036f,  0x37c037b,  0x3880387,  0x3950394,  0x3a103a0,  0x3ae03ad,  0x3bc03bb,  0x3cb03ca,  0x3d803d7,  0x3e403e3,  0x3f103f0,  0x3fc03fb,  0x4070406,  0x43f0439,  0x44d0447,  0x45b0455,  0x4690463,  0x43e0438,  0x44c0446,  0x45a0454,  0x4680462,  0x49c0493,  0x4aa04a6,  0x4bd04b7,  0xffffffff,  0x49b0492,  0x4a904a5,  0x4bc04b6,  0xffffffff,  0x50e0503,  0x527051b,  0x535052f,  0x544053d,  0x50d0502,  0x526051a,  0x534052e,  0x543053c,  0x571056d,  0x5790577,  0x583057f,  0x58f0589,  0x570056c,  0x5780576,  0x582057e,  0x58e0588,  0x5ad05ab,  0x5b905b4,  0x5bf05bd,  0xffffffff,  0x5ac05aa,  0x5b805b3,  0x5be05bc,  0xffffffff,  0x5e0ffff,  0x5e8ffff,  0x5eeffff,  0x5f4ffff,  0x5dfffff,  0x5e7ffff,  0x5edffff,  0x5f3ffff,  0x612060e,  0x61c0618,  0x6260622,  0x630062c,  0x611060d,  0x61b0617,  0x6250621,  0x62f062b,  0x7290725,  0x76b0765,  0x7790773,  0x7ed07e3,  0x95008d,  0x1f0013,  0xa7009f,  0xffffffff,  0x6880682,  0x690068c,  0x6980694,  0x6a0069c,  0x6870681,  0x68f068b,  0x6970693,  0x69f069b,  0x6b606b2,  0x6be06ba,  0x6c606c0,  0x6ce06c8,  0x6b506b1,  0x6bd06b9,  0x6c506bf,  0x6cd06c7,  0x6ef06e9,  0x6f706f1,  0x6fd06f9,  0x7070703,  0x6ee06e8,  0x6f606f0,  0x6fc06f8,  0x7060702,  0x71f071b,  0x72fffff,  0xffffffff,  0xffffffff,  0x71e071a,  0x7280724,  0xffff072e,  0xffff0736,  0xffffffff,  0x781ffff,  0xffffffff,  0xffffffff,  0x76a0764,  0x7780772,  0xffff0780,  0xffffffff,  0x7d707cd,  0xffffffff,  0xffffffff,  0xffffffff,  0x7d607cc,  0x7ec07e2,  0xffffffff,  0xffffffff,  0x50867,  0xffffffff,  0x29ffff,  0xffffffff,  0x40866,  0x1e0012,  0xffff0028,  0xffffffff,  0xffffffff,  0xb1ffff,  0xffffffff,  0xffffffff,  0x94008c,  0xa6009e,  0xffff00b0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff06d3,  0xffffffff,  0x6e106de,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff06fe,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff06ff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x7f807ee,  0x8080802,  0x8180812,  0x8280822,  0x83b0833,  0x8520846,  0x868085a,  0x140006,  0x7f907ef,  0x8090803,  0x8190813,  0x8290823,  0x83c0834,  0x8530847,  0x869085b,  0x150007,  0xffffffff,  0xbcffff,  0xffff00bd,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x1a6019d,  0x1b901af,  0x1d101c4,  0x1e601d9,  0x1fb01f1,  0x20f0205,  0x2220219,  0x234022c,  0x246023e,  0x25a0252,  0x26d0264,  0x27f0279,  0x2910289,  0x1a7019e,  0x1ba01b0,  0x1d201c5,  0x1e701da,  0x1fc01f2,  0x2100206,  0x223021a,  0x235022d,  0x247023f,  0x25b0253,  0x26e0265,  0x280027a,  0x292028a,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x7d807ce,  0x7f007e4,  0x80407fa,  0x814080a,  0x824081a,  0x835082a,  0x848083d,  0x85c0854,  0x8086a,  0x200016,  0x32002a,  0x44003c,  0x52004c,  0x64005c,  0x74006c,  0x84007c,  0x96008e,  0xa800a0,  0xb600b2,  0xc400be,  0xd200cc,  0xde00d8,  0xea00e6,  0xffff00f2,  0x7d907cf,  0x7f107e5,  0x80507fb,  0x815080b,  0x825081b,  0x836082b,  0x849083e,  0x85d0855,  0x9086b,  0x210017,  0x33002b,  0x45003d,  0x53004d,  0x65005d,  0x75006d,  0x85007d,  0x97008f,  0xa900a1,  0xb700b3,  0xc500bf,  0xd300cd,  0xdf00d9,  0xeb00e7,  0xffff00f3,  0x2490248,  0x266025c,  0x498026f,  0x28b04b9,  0x299028c,  0x2a7029a,  0x2b102a8,  0x2bd02b9,  0xffff02c5,  0x2d002cf,  0x2d9ffff,  0xffff02da,  0xffffffff,  0xffffffff,  0xffffffff,  0x30b0307,  0x3120311,  0x31a0319,  0x3240323,  0x32c032b,  0x3340333,  0x33c033b,  0x3460345,  0x3520351,  0x360035f,  0x36c036b,  0x3780377,  0x3860385,  0x390038f,  0x39d039c,  0x3aa03a9,  0x3b603b5,  0x3c603c5,  0x3d303d2,  0x3e003df,  0x3ec03eb,  0x3fa03f9,  0x4030402,  0x40d040c,  0x4160415,  0x41f041e,  0x4290428,  0x4330432,  0x4410440,  0x44f044e,  0x45d045c,  0x46b046a,  0x4750474,  0x47d047c,  0x4850484,  0x48d048c,  0x49e049d,  0x4ac04ab,  0x4bf04be,  0x4c704c6,  0x4d104d0,  0x4dd04dc,  0x4ed04ec,  0x4fb04fa,  0x510050f,  0x5290528,  0x5370536,  0x5460545,  0x5510550,  0x5590558,  0x5610560,  0xffffffff,  0xffffffff,  0xffffffff,  0x58affff,  0x594058b,  0xffff0595,  0xffffffff,  0x5a105a0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x7a507a1,  0x7b307af,  0x7c107bd,  0x7d307cb,  0x7e907e1,  0x7ff07f7,  0x80f0807,  0x81f0817,  0x8300827,  0x842083a,  0x8570851,  0x10865,  0x1b0011,  0x2f0027,  0x41003b,  0x4f004b,  0x61005b,  0x71006b,  0x81007b,  0x91ffff,  0xffffffff,  0xffffffff,  0xc1ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x4210420,  0x42b042a,  0x4350434,  0x4430442,  0x4510450,  0x45f045e,  0x46d046c,  0x4770476,  0x47f047e,  0x4870486,  0x48f048e,  0x4a0049f,  0x4ae04ad,  0x4c104c0,  0x4c904c8,  0x4d304d2,  0x4df04de,  0x4ef04ee,  0x4fd04fc,  0x5120511,  0x52b052a,  0x5390538,  0x5480547,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x59d059c,  0x5a305a2,  0x5a705a6,  0x5af05ae,  0x5bb05ba,  0x5c105c0,  0x5ca05c9,  0x5ce05cd,  0x5d205d1,  0x5d605d5,  0x5da05d9,  0x5e205e1,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x84b084a,  0x85f085e,  0xb000a,  0x230022,  0x350034,  0x470046,  0x550054,  0xffffffff,  0x770076,  0x870086,  0x990098,  0xab00aa,  0xb900b8,  0xc700c6,  0xd500d4,  0xe100e0,  0xed00ec,  0xf700f6,  0xff00fe,  0x1090108,  0x1110110,  0x1170116,  0x11f011e,  0x12b012a,  0x1370136,  0x1450144,  0x1510150,  0x15d015c,  0x1670166,  0x16f016e,  0x17c017b,  0x1860185,  0x1940193,  0x1a0019f,  0x1b201b1,  0x1c701c6,  0x1dc01db,  0x1f401f3,  0x2080207,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x271ffff,  0x2810272,  0x2930282,  0x29c029b,  0x2aa02a9,  0x2b402b3,  0x2c002bf,  0x2ca02c9,  0xffffffff,  0x2dfffff,  0x2e902e0,  0xffffffff,  0x2f602f5,  0x3010300,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x340033f,  0x34c034b,  0x3580357,  0x3660365,  0x3720371,  0xffff037d,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x746ffff,  0x750074a,  0x75a0754,  0x766075e,  0x774076c,  0x782077a,  0x78c0786,  0x7960790,  0x7a2079a,  0x7b007a8,  0x7be07b6,  0x7d007c4,  0x7e607da,  0xffff07f2,  0xffffffff,  0xffffffff,  0x747ffff,  0x751074b,  0x75b0755,  0x767075f,  0x775076d,  0x783077b,  0x78d0787,  0x7970791,  0x7a3079b,  0x7b107a9,  0x7bf07b7,  0x7d107c5,  0x7e707db,  0xffff07f3,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x12c0124,  0x1380130,  0x146013e,  0x152014a,  0x15e0156,  0x1680162,  0x170016a,  0x17d0177,  0x187017f,  0x195018d,  0x1a10197,  0x1b301a8,  0x1c801bb,  0x1dd01d3,  0x1f501e8,  0x20901fd,  0x21b0211,  0x22e0224,  0x2400236,  0x254024a,  0x12d0125,  0x1390131,  0x147013f,  0x153014b,  0x15f0157,  0x1690163,  0x171016b,  0x17e0178,  0x1880180,  0x196018e,  0x1a20198,  0x1b401a9,  0x1c901bc,  0x1de01d4,  0x1f601e9,  0x20a01fe,  0x21c0212,  0x22f0225,  0x2410237,  0x255024b,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff]);
immutable fullCaseTrie = CodepointTrie!(ushort, 12, 9).fromRawArray([ 0x0,  0x800], [ 0x1000,  0x1e00], [ 0x1000,  0x3002,  0x3003,  0x3003,  0x3004,  0x3003,  0x3003,  0x6005,  0x3007,  0x3008,  0x3003,  0x3009,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0xa003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0xb003,  0xc003,  0x3003,  0x300d,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0x3003,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x1ccffff,  0x1e101d4,  0x1f601ec,  0x20e0201,  0x2260218,  0x77a0230,  0x2540247,  0x269025f,  0x27d0273,  0x8fb0285,  0x2a2029a,  0x2b402aa,  0x2c402bc,  0xffff02ca,  0xffffffff,  0xffffffff,  0x1cdffff,  0x1e201d5,  0x1f701ed,  0x20f0202,  0x2270219,  0x7790231,  0x2550248,  0x26a0260,  0x27e0274,  0x8fa0286,  0x2a3029b,  0x2b502ab,  0x2c502bd,  0xffff02cb,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x4cdffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x51f0519,  0x52d0529,  0x7800537,  0x555054c,  0x5690565,  0x5770573,  0x5870582,  0x58f058b,  0x5970593,  0x59f059b,  0x5a705a1,  0xffff05ab,  0x5b905b3,  0x5c505bd,  0x5cf05c9,  0x5d505d1,  0x520051a,  0x52e052a,  0x77f0538,  0x556054d,  0x56a0566,  0x5780574,  0x5880583,  0x590058c,  0x5980594,  0x5a0059c,  0x5a805a2,  0xffff05ac,  0x5ba05b4,  0x5c605be,  0x5d005ca,  0x8c005d2,  0x6440643,  0x64a0649,  0x650064f,  0x65a0659,  0x6640663,  0x66e066d,  0x6780677,  0x67e067d,  0x6840683,  0x68a0689,  0x690068f,  0x6960695,  0x69c069b,  0x6a206a1,  0x6a806a7,  0x6b406b3,  0x6c006bf,  0x6ce06cd,  0x6dc06db,  0x6ea06e9,  0x6f406f3,  0x6fe06fd,  0x7080707,  0x7120711,  0xffff071b,  0x7260725,  0x730072f,  0x73a0739,  0x746ffff,  0x7500747,  0x75a0751,  0x767075b,  0x7710768,  0x7810772,  0x78b0782,  0x795078c,  0x79f0796,  0x7a907a8,  0x7b307b2,  0x7b707b6,  0x7c007bf,  0x7c607c5,  0x7ce07cd,  0x7d607d5,  0x7e007df,  0x7e907e8,  0x7f307f2,  0x7f907f8,  0x8080807,  0x8140813,  0x8220821,  0x830082f,  0x83e083d,  0x84b084a,  0x8550854,  0x85f085e,  0x8720871,  0x880087f,  0x8920891,  0x8a808a7,  0x8c708bf,  0x8d708c8,  0x8e708d8,  0x8f908e8,  0x911050e,  0x91f091e,  0x9370936,  0x18000c,  0x2c0019,  0x3e0036,  0xffff003f,  0x600056,  0x75006b,  0x870076,  0x3490093,  0xad00a5,  0xb800b7,  0xffff04e9,  0xda00d4,  0xe6043f,  0xef00ee,  0xfb00fa,  0x1050104,  0x110010c,  0x1180111,  0xffffffff,  0x1250124,  0x132012c,  0x13e0133,  0x14c0146,  0x158014d,  0x1640159,  0x16f016e,  0xffffffff,  0x1890188,  0x34fffff,  0xffffffff,  0xffffffff,  0x1c101c3,  0x1e501c2,  0x1e401e3,  0x2030205,  0x21a0204,  0x232021b,  0x2490233,  0x261024a,  0x2750262,  0x2870276,  0x29c0288,  0x2ac029d,  0x5702ad,  0x2c702c6,  0x2d502d4,  0x2e302e2,  0x2f302f2,  0x2fd02fc,  0x3050304,  0x30d030c,  0x3170316,  0x3210320,  0x3370328,  0x3360335,  0x3410340,  0x34e0348,  0x3530352,  0x35b035a,  0x3630362,  0x36b036a,  0x3750374,  0x3810380,  0x38d038c,  0x39b039a,  0x3a703a6,  0x3b303b2,  0x3c003bf,  0x3cd03cc,  0x3d903d8,  0x3e603e5,  0x3f403f3,  0x4030402,  0x410040f,  0x41c041b,  0x4290428,  0x4340433,  0xffff043e,  0x4480447,  0x450044f,  0x45b045a,  0x4650464,  0x4710470,  0x4820481,  0x490048f,  0x49e049d,  0x4aa04a9,  0xffffffff,  0xffffffff,  0xffffffff,  0x4da04d0,  0x4e804db,  0x33b04f1,  0x503033f,  0x50d0504,  0x51b0511,  0x5220521,  0x530052f,  0x5410540,  0x5580557,  0x56c056b,  0x2dd02ed,  0x91202f7,  0xffff000d,  0x37002d,  0x61ffff,  0x6cffff,  0xffffffff,  0xffffffff,  0xffff0088,  0x94ffff,  0x31bffff,  0xffff03b1,  0xa600ae,  0x284ffff,  0xffffffff,  0xd5ffff,  0x2e7ffff,  0xffff00db,  0xe7ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x297ffff,  0xffffffff,  0xffff010d,  0x119ffff,  0xffffffff,  0xffffffff,  0x512012d,  0x147013f,  0xffff051c,  0xffffffff,  0xffffffff,  0xffff0165,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x7eeffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x3130312,  0x31d031c,  0xffffffff,  0x330032f,  0xffffffff,  0x61cffff,  0x6220620,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff037a,  0x38e0386,  0xffff0394,  0xffff03a0,  0x3b403ac,  0x3c1086e,  0x3ce0550,  0x60403d4,  0x3e703e1,  0x7ef0600,  0x40405ee,  0x41104cf,  0x41d0417,  0x5f30586,  0x4ecffff,  0x440043a,  0x449057b,  0x763044d,  0x45c0458,  0x387037b,  0x395038f,  0x3c20902,  0x3cf054f,  0x60303d5,  0x3e803e2,  0x7ed05ff,  0x40505ed,  0x41204ce,  0x41e0418,  0x5f20585,  0x4eb04ea,  0x441043b,  0x44a057a,  0x762044e,  0x45d0459,  0x3ad03a1,  0x54203b5,  0x601054e,  0xffffffff,  0x579ffff,  0x5430584,  0x58e058d,  0x5960595,  0x59e059d,  0x5a405a3,  0x5ae05ad,  0x5b605b5,  0x5c005bf,  0x5cc05cb,  0x5d405d3,  0x5db05da,  0x5e105e0,  0x5e505e4,  0x5f105ec,  0xffff0610,  0x60205fe,  0x609ffff,  0x60f060a,  0x6140613,  0x61bffff,  0x621061f,  0x6290627,  0x631062d,  0x6370635,  0x63d063b,  0x641063f,  0x6470645,  0x64d064b,  0x6550651,  0x65f065b,  0x6690665,  0x673066f,  0x67b0679,  0x681067f,  0x6870685,  0x68d068b,  0x6930691,  0x6990697,  0x69f069d,  0x6a506a3,  0x6ae06a9,  0x6ba06b5,  0x6c606c1,  0x6d406cf,  0x6e206dd,  0x660065c,  0x66a0666,  0x6740670,  0x67c067a,  0x6820680,  0x6880686,  0x68e068c,  0x6940692,  0x69a0698,  0x6a0069e,  0x6a606a4,  0x6af06aa,  0x6bb06b6,  0x6c706c2,  0x6d506d0,  0x6e306de,  0x62a0628,  0x632062e,  0x6380636,  0x63e063c,  0x6420640,  0x6480646,  0x64e064c,  0x6560652,  0x7d807d7,  0x7e207e1,  0x7eb07ea,  0x7f507f4,  0x7fb07fa,  0x80a0809,  0x8160815,  0x8240823,  0x8320831,  0x840083f,  0x84d084c,  0x8570856,  0x8610860,  0x8740873,  0x8820881,  0x8940893,  0x8aa08a9,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x9080907,  0x9210920,  0x9390938,  0xf000e,  0x250024,  0x390038,  0x490048,  0x590058,  0x6e006d,  0x80007f,  0x960095,  0xa800a7,  0xba00b9,  0xc700c6,  0xd700d6,  0xe300e2,  0xf100f0,  0xfd00fc,  0x1070106,  0x10f010e,  0x1170116,  0x11f011e,  0x1270126,  0x12f012e,  0x13b013a,  0x1490148,  0x1550154,  0x1660160,  0x1740167,  0x1800175,  0x18f0181,  0x1970190,  0x1a60198,  0x1b001a7,  0x16101b1,  0x1cf01ce,  0x1e701e6,  0x1fc01fb,  0x2110210,  0x2290228,  0x240023f,  0x2570256,  0x26c026b,  0x280027f,  0x2930292,  0x2a502a4,  0x2b702b6,  0x2c902c8,  0x2d702d6,  0x2e502e4,  0x2f502f4,  0x2ff02fe,  0x3070306,  0x30f030e,  0x3190318,  0x3230322,  0x32b032a,  0x3390338,  0x3430342,  0x34b034a,  0x3550354,  0x35d035c,  0x3650364,  0x36d036c,  0x3770376,  0x3830382,  0x3910390,  0x39d039c,  0x3a903a8,  0x3b703b6,  0x3c403c3,  0x3d103d0,  0x3de03dd,  0x3ea03e9,  0x3fa03f9,  0x4070406,  0x4140413,  0x420041f,  0x42e042d,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x462ffff,  0x46c0466,  0x47d0472,  0x48b0483,  0x4990491,  0x4a7049f,  0x4b104ab,  0x4b904b3,  0x4c104bb,  0x4c904c3,  0x4dc04d2,  0x4ed04e0,  0x4fb04f3,  0x50504fd,  0x50f0507,  0x51d0513,  0x52b0523,  0x5390531,  0x5510544,  0xffff055d,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x463ffff,  0x46d0467,  0x47e0473,  0x48c0484,  0x49a0492,  0x4a804a0,  0x4b204ac,  0x4ba04b4,  0x4c204bc,  0x4ca04c4,  0x4dd04d3,  0x4ee04e1,  0x4fc04f4,  0x50604fe,  0x5100508,  0x51e0514,  0x52c0524,  0x53a0532,  0x5520545,  0x62f055e,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x8680862,  0x8790875,  0x8890883,  0x89d0895,  0x8b308ab,  0x8c908c1,  0x8d908d1,  0x8e908e1,  0x8fc08f1,  0x9130909,  0x92a0922,  0x93a,  0x1a0010,  0x2e0026,  0x40003a,  0x4e004a,  0x62005a,  0x77006f,  0x890081,  0x9bffff,  0xffffffff,  0xffffffff,  0xccffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x2bbffff,  0xffffffff,  0x28effff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x6c906c8,  0x6d706d6,  0x6e506e4,  0x6ef06ee,  0x6f906f8,  0x7030702,  0x70d070c,  0x7170716,  0x7210720,  0x72b072a,  0x7350734,  0x73f073e,  0x7490748,  0x7530752,  0x75d075c,  0x76a0769,  0x7740773,  0x7840783,  0x78e078d,  0x7980797,  0x7a207a1,  0x7ae07ad,  0x7b507b4,  0x7bb07ba,  0x7c407c3,  0x7ca07c9,  0x7d207d1,  0x7dc07db,  0x7e707e6,  0x7f107f0,  0x7f707f6,  0x8010800,  0x810080f,  0x81c081b,  0x82a0829,  0x8380837,  0x8470846,  0x8510850,  0x85b085a,  0x86b086a,  0x87c087b,  0x88c088b,  0x8a0089f,  0x8b608b5,  0x8cc08cb,  0x8dc08db,  0x8ec08eb,  0x8ff08fe,  0x9160915,  0x92d092c,  0x30002,  0x1d001c,  0x310030,  0x430042,  0x510050,  0x650064,  0x7a0079,  0x8c008b,  0x9e009d,  0xb000af,  0xc100c0,  0xcf00ce,  0xdd00dc,  0xe900e8,  0xf500f4,  0x1010100,  0x1090108,  0x1130112,  0x11b011a,  0x1210120,  0x1290128,  0x1350134,  0x1410140,  0x14f014e,  0x15b015a,  0x1700168,  0x17c0176,  0x9170182,  0xffffffff,  0xffff05d7,  0x1a901a8,  0x1b301b2,  0x1c501c4,  0x1da01d9,  0x1ef01ee,  0x2070206,  0x21d021c,  0x2350234,  0x24c024b,  0x2640263,  0x2780277,  0x28a0289,  0x29f029e,  0x2af02ae,  0x2bf02be,  0x2cd02cc,  0x2db02da,  0x2eb02ea,  0x2f902f8,  0x3030302,  0x3090308,  0x3150314,  0x31f031e,  0x3250324,  0x3320331,  0x33d033c,  0x3470346,  0x3510350,  0x3590358,  0x3610360,  0x3690368,  0x3710370,  0x37d037c,  0x3890388,  0x3970396,  0x3a303a2,  0x3af03ae,  0x3be03bd,  0x3cb03ca,  0x3d703d6,  0x3e403e3,  0x3f203f1,  0x4010400,  0x40e040d,  0x41a0419,  0x4270426,  0x4320431,  0x43d043c,  0x475046f,  0x4860480,  0x494048e,  0x4a2049c,  0x474046e,  0x485047f,  0x493048d,  0x4a1049b,  0x4d504cc,  0x4e304df,  0x4f604f0,  0xffffffff,  0x4d404cb,  0x4e204de,  0x4f504ef,  0xffffffff,  0x547053c,  0x5600554,  0x56e0568,  0x57d0576,  0x546053b,  0x55f0553,  0x56d0567,  0x57c0575,  0x5aa05a6,  0x5b205b0,  0x5bc05b8,  0x5c805c2,  0x5a905a5,  0x5b105af,  0x5bb05b7,  0x5c705c1,  0x5e905e7,  0x5f505f0,  0x5fb05f9,  0xffffffff,  0x5e805e6,  0x5f405ef,  0x5fa05f8,  0xffffffff,  0x6240607,  0x62c060d,  0x6340615,  0x63a0619,  0x623ffff,  0x62bffff,  0x633ffff,  0x639ffff,  0x6580654,  0x662065e,  0x66c0668,  0x6760672,  0x6570653,  0x661065d,  0x66b0667,  0x6750671,  0x7de07da,  0x82c0826,  0x83a0834,  0x8b808ae,  0xa00098,  0x1f0013,  0xb200aa,  0xffffffff,  0x6e806e1,  0x6f206ed,  0x6fc06f7,  0x7060701,  0x6e606df,  0x6f006eb,  0x6fa06f5,  0x70406ff,  0x7380733,  0x742073d,  0x74c0745,  0x756074f,  0x7360731,  0x740073b,  0x74a0743,  0x754074d,  0x791078a,  0x79b0794,  0x7a5079e,  0x7b107ac,  0x78f0788,  0x7990792,  0x7a3079c,  0x7af07aa,  0x7d407d0,  0x7e507b8,  0xffff07c1,  0x7cb07c7,  0x7d307cf,  0x7dd07d9,  0xffff07e3,  0xffff07ec,  0xffffffff,  0x84307fc,  0xffff080b,  0x81d0817,  0x82b0825,  0x8390833,  0xffff0841,  0xffffffff,  0x8a20898,  0x86c0864,  0xffffffff,  0x88d0885,  0x8a10897,  0x8b708ad,  0xffffffff,  0xffffffff,  0x5093d,  0x90008f3,  0x29090b,  0x92e0924,  0x4093c,  0x1e0012,  0xffff0028,  0xffffffff,  0xffffffff,  0xbd005c,  0xffff0071,  0x8d0083,  0x9f0097,  0xb100a9,  0xffff00bb,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0761,  0xffffffff,  0x77e0778,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff07a6,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff07a7,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x8c308b9,  0x8d308cd,  0x8e308dd,  0x8f508ed,  0x90d0903,  0x9260918,  0x93e0930,  0x140006,  0x8c408ba,  0x8d408ce,  0x8e408de,  0x8f608ee,  0x90e0904,  0x9270919,  0x93f0931,  0x150007,  0xffffffff,  0xc8ffff,  0xffff00c9,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x1bd01b4,  0x1d001c6,  0x1e801db,  0x1fd01f0,  0x2120208,  0x22a021e,  0x2410236,  0x258024d,  0x26d0265,  0x2810279,  0x294028b,  0x2a602a0,  0x2b802b0,  0x1be01b5,  0x1d101c7,  0x1e901dc,  0x1fe01f1,  0x2130209,  0x22b021f,  0x2420237,  0x259024e,  0x26e0266,  0x282027a,  0x295028c,  0x2a702a1,  0x2b902b1,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x8a30899,  0x8bb08af,  0x8cf08c5,  0x8df08d5,  0x8ef08e5,  0x90508f7,  0x91a090f,  0x9320928,  0x80940,  0x200016,  0x32002a,  0x44003c,  0x52004c,  0x69005e,  0x7b0073,  0x8f0085,  0xa10099,  0xb300ab,  0xc200be,  0xd000ca,  0xde00d8,  0xea00e4,  0xf600f2,  0xffff00fe,  0x8a4089a,  0x8bc08b0,  0x8d008c6,  0x8e008d6,  0x8f008e6,  0x90608f8,  0x91b0910,  0x9330929,  0x90941,  0x210017,  0x33002b,  0x45003d,  0x53004d,  0x6a005f,  0x7c0074,  0x900086,  0xa2009a,  0xb400ac,  0xc300bf,  0xd100cb,  0xdf00d9,  0xeb00e5,  0xf700f3,  0xffff00ff,  0x270026f,  0x28d0283,  0x4d10296,  0x2b204f2,  0x2c002b3,  0x2ce02c1,  0x2dc02cf,  0x2ec02e6,  0xffff02f6,  0x3010300,  0x30affff,  0xffff030b,  0xffffffff,  0xffffffff,  0xffffffff,  0x33e033a,  0x3450344,  0x34d034c,  0x3570356,  0x35f035e,  0x3670366,  0x36f036e,  0x3790378,  0x3850384,  0x3930392,  0x39f039e,  0x3ab03aa,  0x3b903b8,  0x3c603c5,  0x3d303d2,  0x3e003df,  0x3ec03eb,  0x3fc03fb,  0x4090408,  0x4160415,  0x4220421,  0x430042f,  0x4390438,  0x4430442,  0x44c044b,  0x4550454,  0x45f045e,  0x4690468,  0x4770476,  0x4880487,  0x4960495,  0x4a404a3,  0x4ae04ad,  0x4b604b5,  0x4be04bd,  0x4c604c5,  0x4d704d6,  0x4e504e4,  0x4f804f7,  0x50004ff,  0x50a0509,  0x5160515,  0x5260525,  0x5340533,  0x5490548,  0x5620561,  0x570056f,  0x57f057e,  0x58a0589,  0x5920591,  0x59a0599,  0xffffffff,  0xffffffff,  0xffffffff,  0x5c3ffff,  0x5cd05c4,  0xffff05ce,  0xffffffff,  0x5dd05dc,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x8690863,  0x87a0876,  0x88a0884,  0x89e0896,  0x8b408ac,  0x8ca08c2,  0x8da08d2,  0x8ea08e2,  0x8fd08f2,  0x914090a,  0x92b0923,  0x1093b,  0x1b0011,  0x2f0027,  0x41003b,  0x4f004b,  0x63005b,  0x780070,  0x8a0082,  0x9cffff,  0xffffffff,  0xffffffff,  0xcdffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x4570456,  0x4610460,  0x46b046a,  0x4790478,  0x48a0489,  0x4980497,  0x4a604a5,  0x4b004af,  0x4b804b7,  0x4c004bf,  0x4c804c7,  0x4d904d8,  0x4e704e6,  0x4fa04f9,  0x5020501,  0x50c050b,  0x5180517,  0x5280527,  0x5360535,  0x54b054a,  0x5640563,  0x5720571,  0x5810580,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x5d905d8,  0x5df05de,  0x5e305e2,  0x5eb05ea,  0x5f705f6,  0x5fd05fc,  0x6060605,  0x60c060b,  0x6120611,  0x6180617,  0x61e061d,  0x6260625,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x91d091c,  0x9350934,  0xb000a,  0x230022,  0x350034,  0x470046,  0x550054,  0xffffffff,  0x7e007d,  0x920091,  0xa400a3,  0xb600b5,  0xc500c4,  0xd300d2,  0xe100e0,  0xed00ec,  0xf900f8,  0x1030102,  0x10b010a,  0x1150114,  0x11d011c,  0x1230122,  0x12b012a,  0x1370136,  0x1430142,  0x1510150,  0x15d015c,  0x16b016a,  0x1790178,  0x1850184,  0x1920191,  0x19d019c,  0x1ab01aa,  0x1b701b6,  0x1c901c8,  0x1de01dd,  0x1f301f2,  0x20b020a,  0x2210220,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x298ffff,  0x2a80299,  0x2ba02a9,  0x2c302c2,  0x2d102d0,  0x2df02de,  0x2ef02ee,  0x2fb02fa,  0xffffffff,  0x310ffff,  0x31a0311,  0xffffffff,  0x3270326,  0x3340333,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x3730372,  0x37f037e,  0x38b038a,  0x3990398,  0x3a503a4,  0xffff03b0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x2220214,  0x238022c,  0x25c0243,  0xffff025a,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x2d2ffff,  0x2e002d8,  0x2f002e8,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x7feffff,  0x80d0805,  0x8190811,  0x827081f,  0x835082d,  0x844083b,  0x84e0848,  0x8580852,  0x866085c,  0x877086f,  0x887087d,  0x89b088f,  0x8b108a5,  0xffff08bd,  0xffffffff,  0xffffffff,  0x7ffffff,  0x80e0806,  0x81a0812,  0x8280820,  0x836082e,  0x845083c,  0x84f0849,  0x8590853,  0x867085d,  0x8780870,  0x888087e,  0x89c0890,  0x8b208a6,  0xffff08be,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x1380130,  0x144013c,  0x152014a,  0x15e0156,  0x16c0162,  0x17a0172,  0x186017e,  0x193018d,  0x19e0195,  0x1ac01a4,  0x1b801ae,  0x1ca01bf,  0x1df01d2,  0x1f401ea,  0x20c01ff,  0x2240216,  0x23a022e,  0x2520245,  0x267025d,  0x27b0271,  0x1390131,  0x145013d,  0x153014b,  0x15f0157,  0x16d0163,  0x17b0173,  0x187017f,  0x194018e,  0x19f0196,  0x1ad01a5,  0x1b901af,  0x1cb01c0,  0x1e001d3,  0x1f501eb,  0x20d0200,  0x2250217,  0x23b022f,  0x2530246,  0x268025e,  0x27c0272,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff]);
immutable combiningClassTrie = CodepointTrie!(ubyte, 7, 5, 9).fromRawArray([ 0x0,  0x20,  0x90], [ 0x80,  0xe0,  0x3a00], [ 0x608080,  0xa04084,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x204081,  0x1000,  0x3002,  0x5004,  0x7006,  0x9008,  0xa000,  0xc00b,  0xd,  0xe,  0x0,  0x0,  0xf,  0x10,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x11000,  0x13012,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x14000,  0x15000,  0x16,  0x0,  0x17000,  0x0,  0x18,  0x19000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1b01a,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0xdcdce8e6,  0xd8e8dcdc,  0xdcdcdcdc,  0xdccacadc,  0xcadcdcdc,  0xdcdcdcca,  0xdcdcdcdc,  0xdcdcdcdc,  0x1010101,  0xdcdcdc01,  0xe6e6e6dc,  0xe6e6e6e6,  0xdce6f0e6,  0xe6e6dcdc,  0xdcdce6,  0xdce6e6e6,  0xe6dcdcdc,  0xe6dcdce8,  0xe9eaeae9,  0xe6e9eaea,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6000000,  0xe6e6e6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e6dc00,  0xe6dce6e6,  0xdcdee6e6,  0xe6e6e6e6,  0xdcdce6e6,  0xdcdcdcdc,  0xe6dce6e6,  0xe6e4dee6,  0xd0c0b0a,  0x11100f0e,  0x14131312,  0x17001615,  0x191800,  0x1200dce6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e6e6e6,  0xe6e6e6e6,  0x201f1e,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1b000000,  0x1f1e1d1c,  0xe6222120,  0xe6dcdce6,  0xe6e6e6e6,  0xdce6e6dc,  0x0,  0x0,  0x0,  0x0,  0x23,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e60000,  0xe6e6e6e6,  0xe60000e6,  0xdce6e6e6,  0xe60000e6,  0xe6dc00e6,  0xdce6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2400,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e6dce6,  0xdce6e6dc,  0xdce6dcdc,  0xe6dce6dc,  0xe6dce6e6,  0xe6dce6dc,  0xe6e6dc,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6000000,  0xe6e6e6e6,  0xe6dce6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e60000,  0xe600e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e600,  0xe6e6e600,  0xe6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xdcdcdc00,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6dce6e6,  0xe6e6dce6,  0xdcdcdce6,  0xe61d1c1b,  0xe6dce6e6,  0xe6dcdce6,  0xe6e6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7,  0x0,  0x0,  0x0,  0x900,  0xe6dce600,  0xe6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7,  0x0,  0x0,  0x0,  0x900,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7,  0x0,  0x0,  0x0,  0x900,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7,  0x0,  0x0,  0x0,  0x900,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7,  0x0,  0x0,  0x0,  0x900,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x900,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x900,  0x0,  0x5b5400,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7,  0x0,  0x0,  0x0,  0x900,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x900,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x90000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x96767,  0x0,  0x0,  0x0,  0x6b6b6b6b,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7676,  0x0,  0x0,  0x0,  0x7a7a7a7a,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xdcdc,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xdc00dc00,  0xd800,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x828100,  0x84,  0x82820000,  0x8282,  0xe6e60082,  0xe6e60009,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xdc0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7000000,  0x90900,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xdc00,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e6e600,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x9,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x9,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x90000,  0x0,  0x0,  0xe600,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe400,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xdce6de00,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6000000,  0xdc,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x9,  0x0,  0x0,  0x0,  0x0,  0xe6e6e600,  0xe6e6e6e6,  0xdc0000e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7,  0x0,  0x0,  0x0,  0x9,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6000000,  0xe6e6e6dc,  0xe6e6e6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x9090000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x70000,  0x0,  0x0,  0x9090000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e6e6,  0xdcdcdc01,  0xe6e6dcdc,  0xdcdcdcdc,  0x10100e6,  0x1010101,  0x1,  0xdc00,  0x0,  0xe6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6dce6e6,  0xe6e6e6e6,  0xe6dce6e6,  0xdcd6eae6,  0xe6e6e6ca,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0xdce6dce9,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x101e6e6,  0xe6e6e6e6,  0xe6010101,  0xe6,  0xe600,  0xe6010100,  0x101e6dc,  0xdcdcdcdc,  0xe6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6000000,  0xe6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x9000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe4da0000,  0xe0e0dee8,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x80800,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6000000,  0x0,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x90000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x9,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6e6e6,  0xe6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xdc000000,  0xdcdc,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x9000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7000000,  0x0,  0x0,  0x0,  0x9,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e600e6,  0xe60000dc,  0xe6,  0xe6e60000,  0xe600,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x90000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x900,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1a0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e6e6e6,  0xe6e6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xdc00,  0x0,  0x0,  0x0,  0xe600dc00,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xdc01e6,  0x9000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x90000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x70900,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x9000000,  0x9,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x9,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7090000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1d8d800,  0x101,  0xd8d8e200,  0xd8d8d8,  0x0,  0xdc000000,  0xdcdcdcdc,  0xdcdcdc,  0xe6e6e600,  0xdcdce6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e60000,  0xe6e6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe6e60000,  0xe6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);
immutable compatMapping = CodepointTrie!(ushort, 12, 9).fromRawArray([ 0x0,  0x800], [ 0x1000,  0x4800], [ 0x1000,  0x3002,  0x5004,  0x7006,  0x9008,  0x9009,  0xa009,  0xc00b,  0xe00d,  0x900f,  0x10009,  0x12011,  0x14013,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x15009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x17016,  0x19018,  0x9009,  0x9009,  0x9009,  0x9009,  0x901a,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x901b,  0x1d01c,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x1e009,  0x2001f,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x22021,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1,  0x0,  0x0,  0x0,  0x8,  0x2d7,  0x0,  0x40000,  0x0,  0x12b0109,  0x5650002,  0x0,  0xce0016,  0x3b3,  0xfe0100,  0x13a,  0x1850184,  0x18b0186,  0x1970194,  0x1ae0000,  0x1bf01be,  0x1cb01c0,  0x1fa01f9,  0x20001fb,  0x2320000,  0x23b023a,  0x241023c,  0x24b,  0x28c0000,  0x28e028d,  0x2c20294,  0x0,  0x2dd02dc,  0x2e302de,  0x2ef02ec,  0x30b0000,  0x320031f,  0x32c0321,  0x35c035b,  0x361035d,  0x3ac0000,  0x3b603b5,  0x3bc03b7,  0x3c6,  0x4060000,  0x4080407,  0x439040e,  0x43e0000,  0x2e4018c,  0x2e5018d,  0x2f801a0,  0x30701aa,  0x30801ab,  0x30901ac,  0x30a01ad,  0x31701b8,  0x0,  0x32701c6,  0x32a01c9,  0x32b01ca,  0x33501d4,  0x32e01cd,  0x34301e0,  0x34501e2,  0x34601e3,  0x34801e5,  0x34c01eb,  0x0,  0x35e01fc,  0x35f01fd,  0x36001fe,  0x3680207,  0x1ff,  0x35701f5,  0x36b020a,  0x37d0212,  0x2190000,  0x21d0387,  0x21a038b,  0x2180388,  0x386,  0x2310000,  0x23603ab,  0x23403b0,  0x49203ae,  0x0,  0x3c00245,  0x3c30248,  0x3c9024e,  0x0,  0x3e60268,  0x3ed026f,  0x3e8026a,  0x3f20276,  0x3f40278,  0x3fb027f,  0x3f6027a,  0x4020288,  0x3ff0285,  0x0,  0x409028f,  0x40b0291,  0x40d0293,  0x414029a,  0x415029b,  0x42102a7,  0x42d02b7,  0x43a02c3,  0x2cb02c7,  0x2cd0443,  0x2ce0445,  0x3ef0446,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3cd0252,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x29f0000,  0x419,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1b601b4,  0x2150315,  0x3810217,  0x22e022d,  0x19903a7,  0x20302f1,  0x24f0364,  0x29c03ca,  0x2970416,  0x2960411,  0x2980410,  0x2950412,  0x40f,  0x2ed0195,  0x2eb0193,  0x45a0457,  0x0,  0x34701e4,  0x37b0210,  0x3d5025a,  0x3d6025b,  0x48d0465,  0x1b3036c,  0x31401b5,  0x34201df,  0x0,  0x3aa0230,  0x2f00198,  0x4590456,  0x45c0458,  0x2f2019a,  0x2f3019b,  0x32f01ce,  0x33001cf,  0x3650204,  0x3660205,  0x3cb0250,  0x3cc0251,  0x3e9026b,  0x3ea026c,  0x417029d,  0x418029e,  0x3fa027e,  0x4010287,  0x0,  0x34f01ee,  0x0,  0x0,  0x0,  0x2ea0192,  0x33301d2,  0x3c7024c,  0x3be0243,  0x3c40249,  0x3c5024a,  0x43c02c5,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x4740349,  0x3e2036a,  0x4820481,  0x42a0483,  0x437,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x70006,  0x17000c,  0xd0003,  0x0,  0x3800472,  0x43203ef,  0x48e,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x4940493,  0x4960000,  0x495,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x491,  0x0,  0x0,  0x1a,  0x0,  0x175,  0x0,  0x0,  0xa0002,  0x4540499,  0x4bc04b2,  0x4d1,  0x4e4,  0x4ff04f2,  0x558,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x4f504d4,  0x5300514,  0x553053b,  0x587,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x5850556,  0x5820572,  0x598,  0x550052b,  0x4f204f0,  0x59204f5,  0x579,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x57a0563,  0x57d,  0x52e04ce,  0x0,  0x4ee0000,  0x0,  0x0,  0x0,  0x5b505b3,  0x5b20000,  0x0,  0x5af0000,  0x0,  0x0,  0x5b905bd,  0x5c0,  0x0,  0x0,  0x0,  0x0,  0x5bb0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x5d10000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x5cb05c9,  0x5c80000,  0x0,  0x5dd0000,  0x0,  0x0,  0x5cf05d3,  0x5d7,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x5df05de,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x5b60000,  0x5cc,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x5c605b0,  0x5c705b1,  0x0,  0x5ca05b4,  0x0,  0x5e105e0,  0x5cd05b7,  0x5ce05b8,  0x0,  0x5d005ba,  0x5d205bc,  0x5d505be,  0x0,  0x5e305e2,  0x5dc05c5,  0x5d605bf,  0x5d805c1,  0x5d905c2,  0x5da05c3,  0x0,  0x5db05c4,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x5e40000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x61e061d,  0x61f0732,  0x745,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x6200000,  0x77b0733,  0x757,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x783,  0x777,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7820000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x78a0000,  0x0,  0x0,  0x0,  0x78d0000,  0x0,  0x78e,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7850784,  0x7870786,  0x7890788,  0x78c078b,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7920000,  0x793,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x790078f,  0x7910000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7980000,  0x0,  0x799,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7940000,  0x7960795,  0x0,  0x797,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x79d,  0x79c0000,  0x79e,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x79b079a,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x79f,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7a207a0,  0x7a1,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7a3,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7a4,  0x0,  0x0,  0x7a70000,  0x7a8,  0x7a607a5,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7ab07a9,  0x7aa,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7ac,  0x7ae07ad,  0x7af,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7b00000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7b30000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7b207b1,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7b4,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7b60000,  0x0,  0x0,  0x0,  0x0,  0x7b70000,  0x0,  0x0,  0x7b8,  0x0,  0x7b90000,  0x0,  0x0,  0x7ba,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7b50000,  0x0,  0x0,  0x0,  0x0,  0x7bb0000,  0x7bc0000,  0x7c407c5,  0x7c607c7,  0x0,  0x0,  0x0,  0x7bd0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7bf0000,  0x0,  0x0,  0x0,  0x0,  0x7c00000,  0x0,  0x0,  0x7c1,  0x0,  0x7c20000,  0x0,  0x0,  0x7c3,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7be0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7c8,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7c9,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x839,  0x83a,  0x83b,  0x83c,  0x83d,  0x0,  0x83e,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x83f0000,  0x8400000,  0x0,  0x8420841,  0x8430000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x4550182,  0x1a2,  0x1bd01b1,  0x1da0462,  0x1f201e6,  0x20b0209,  0x2200214,  0x22c,  0x4660239,  0x266025c,  0x28b0280,  0x2d702b1,  0x4690468,  0x2f90844,  0x31c030d,  0x46e046d,  0x340046f,  0x36d0000,  0x460038e,  0x46b03b3,  0x8460845,  0x3fc03d7,  0x8480405,  0x4240479,  0x52b0849,  0x52d052c,  0x5930592,  0x3e20354,  0x4240405,  0x52c052b,  0x592057a,  0x593,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x5d4,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x46a0000,  0x46c02fe,  0x46f045b,  0x4700338,  0x4730471,  0x4760475,  0x84a0477,  0x478048f,  0x490084b,  0x47a047b,  0x47d047c,  0x47f047e,  0x4840480,  0x4640485,  0x4870486,  0x4880847,  0x4420489,  0x48b048a,  0x550048c,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2f7019f,  0x2fb01a4,  0x2fc01a5,  0x2fd01a6,  0x30c01af,  0x31601b7,  0x31801b9,  0x31b01bc,  0x31901ba,  0x31a01bb,  0x32801c7,  0x32901c8,  0x33601d5,  0x33701d6,  0x33401d3,  0x33f01d9,  0x34401e1,  0x34d01ec,  0x35001ef,  0x34e01ed,  0x35101f0,  0x35201f1,  0x3690208,  0x3620201,  0x37a020f,  0x37c0211,  0x37e0213,  0x389021b,  0x38a021c,  0x38d021f,  0x38c021e,  0x39d0228,  0x39e0229,  0x39f022a,  0x3ad0233,  0x3af0235,  0x3b20238,  0x3b10237,  0x3bd0242,  0x3bf0244,  0x3c10246,  0x3c20247,  0x3df0263,  0x3e00264,  0x3e70269,  0x3eb026d,  0x3ec026e,  0x3ee0270,  0x3f50279,  0x3f8027c,  0x3f30277,  0x3f7027b,  0x3f9027d,  0x3fd0284,  0x4000286,  0x404028a,  0x4030289,  0x42002a6,  0x42302a9,  0x42202a8,  0x40a0290,  0x40c0292,  0x42802ae,  0x42902af,  0x42b02b5,  0x42c02b6,  0x42f02b9,  0x42e02b8,  0x43102ba,  0x43502be,  0x43602bf,  0x43d02c6,  0x44402cc,  0x44702cf,  0x44802d0,  0x3fe0353,  0x4400430,  0x3f502db,  0x0,  0x0,  0x2f4019c,  0x2ee0196,  0x2e00188,  0x2df0187,  0x2e2018a,  0x2e10189,  0x2f5019d,  0x2e7018f,  0x2e6018e,  0x2e90191,  0x2e80190,  0x2f6019e,  0x33101d0,  0x32d01cc,  0x32601c5,  0x32301c2,  0x32201c1,  0x32501c4,  0x32401c3,  0x33201d1,  0x3630202,  0x3670206,  0x3d30258,  0x3c8024d,  0x3b9023e,  0x3b8023d,  0x3bb0240,  0x3ba023f,  0x3d40259,  0x3cf0254,  0x3ce0253,  0x3d10256,  0x3d00255,  0x3d20257,  0x41f02a5,  0x4130299,  0x41b02a1,  0x41a02a0,  0x41d02a3,  0x41c02a2,  0x41e02a4,  0x43802c1,  0x44102c9,  0x43f02c8,  0x43b02c4,  0x0,  0x0,  0x0,  0x5200518,  0x5210519,  0x523051b,  0x525051d,  0x4a4049c,  0x4a5049d,  0x4a7049f,  0x4a904a1,  0x5340531,  0x5350532,  0x5360533,  0x0,  0x4b604b3,  0x4b704b4,  0x4b804b5,  0x0,  0x545053d,  0x546053e,  0x5480540,  0x54a0542,  0x4c504bd,  0x4c604be,  0x4c804c0,  0x4ca04c2,  0x55e055a,  0x55f055b,  0x560055c,  0x561055d,  0x4d904d5,  0x4da04d6,  0x4db04d7,  0x4dc04d8,  0x5760573,  0x5770574,  0x5780575,  0x0,  0x4e804e5,  0x4e904e6,  0x4ea04e7,  0x0,  0x58d0589,  0x58e058a,  0x58f058b,  0x590058c,  0x4f60000,  0x4f70000,  0x4f80000,  0x4f90000,  0x5a2059a,  0x5a3059b,  0x5a5059d,  0x5a7059f,  0x5080500,  0x5090501,  0x50b0503,  0x50d0505,  0x5140512,  0x530052f,  0x53b0539,  0x5530552,  0x5720571,  0x5820581,  0x5980596,  0x0,  0x527051f,  0x522051a,  0x524051c,  0x526051e,  0x4ab04a3,  0x4a6049e,  0x4a804a0,  0x4aa04a2,  0x54c0544,  0x547053f,  0x5490541,  0x54b0543,  0x4cc04c4,  0x4c704bf,  0x4c904c1,  0x4cb04c3,  0x5a905a1,  0x5a4059c,  0x5a6059e,  0x5a805a0,  0x50f0507,  0x50a0502,  0x50c0504,  0x50e0506,  0x5160517,  0x52a0513,  0x515,  0x5290528,  0x49a049b,  0x4990498,  0xe04ac,  0xe0551,  0xb0019,  0x54f053a,  0x53c,  0x54e054d,  0x4b204b1,  0x4bc04bb,  0xf04cd,  0x110010,  0x5540555,  0x5580557,  0x0,  0x5590562,  0x4d204d3,  0x4d104d0,  0x130000,  0x150014,  0x5830584,  0x5870586,  0x57c057b,  0x5880591,  0x4f304f4,  0x4f204f1,  0x904ed,  0x2d6000a,  0x0,  0x5ac0597,  0x599,  0x5ab05aa,  0x4e404e3,  0x4ff04fe,  0x20510,  0x12,  0x10001,  0x10001,  0x10001,  0x10001,  0x10001,  0x1,  0x0,  0x0,  0x84c0000,  0x0,  0x0,  0x180000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xc600c5,  0xc7,  0x0,  0x0,  0x0,  0x10000,  0x0,  0x84f0000,  0x850,  0x8530852,  0x0,  0x0,  0x2c,  0x5,  0x0,  0x0,  0x0,  0x1800000,  0x2d017f,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8510000,  0x0,  0x0,  0x0,  0x10000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x35400c9,  0x0,  0x1510140,  0x160015a,  0x16d0167,  0x86500c2,  0x340178,  0x3a200c0,  0xce00c9,  0x12b0109,  0x1510140,  0x160015a,  0x16d0167,  0x86500c2,  0x340178,  0xc0,  0x31c02d7,  0x43203b3,  0x349046d,  0x380036d,  0x3a2038e,  0x3ef03d7,  0x3fc,  0x0,  0x0,  0x0,  0x0,  0x0,  0x267,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2da02d9,  0x45201a7,  0x2ff0000,  0x4630300,  0x4530000,  0x1e60340,  0x1e601e6,  0x45e0349,  0x1f201f2,  0x3800214,  0x22c0000,  0x22f,  0x25c0000,  0x2660265,  0x2660266,  0x0,  0x2810273,  0x283,  0x2ca,  0x4fd,  0x2ca,  0x197020b,  0x1a701a2,  0x31c0000,  0x1d701bd,  0x2200000,  0x5ea03b3,  0x5f205ef,  0x35405f4,  0x1d80000,  0x52c0579,  0x4eb04ae,  0x864,  0x0,  0x1b10000,  0x31c030d,  0x36a0354,  0x0,  0x0,  0x0,  0x1050103,  0xff00fd,  0x1010126,  0x13b0127,  0x102014d,  0x1040155,  0x156013c,  0xfc0163,  0x1f301f2,  0x1f701f4,  0x2ab02aa,  0x2ad02ac,  0x2bb01f8,  0x2bd02bc,  0x1a70214,  0x22001b1,  0x3550354,  0x3590356,  0x4250424,  0x4270426,  0x432035a,  0x4340433,  0x2fe0380,  0x38e030d,  0x0,  0x0,  0x0,  0x0,  0xcc0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8590856,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x85b,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x85c0000,  0x85d085e,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x860,  0x0,  0x8620000,  0x0,  0x863,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x866,  0x867,  0x0,  0x0,  0x8690868,  0x86b0000,  0x86c,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x86d0000,  0x0,  0x86e,  0x86f0000,  0x8700000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x17b,  0x872,  0x0,  0x0,  0x0,  0x0,  0x8710000,  0x17d0177,  0x8740873,  0x0,  0x8760875,  0x0,  0x8780877,  0x0,  0x0,  0x0,  0x87a0879,  0x0,  0x87e087d,  0x0,  0x880087f,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8840883,  0x8860885,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x87c087b,  0x8820881,  0x0,  0x0,  0x0,  0x8880887,  0x88a0889,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8940000,  0x895,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10900ce,  0x140012b,  0x15a0151,  0x1670160,  0xd1016d,  0xdb00d6,  0xe400e0,  0xec00e8,  0xf400f0,  0x10c00f8,  0x400035,  0x430042,  0x450044,  0x470046,  0x360048,  0x380037,  0x3a0039,  0x3c003b,  0x3e003d,  0x41003f,  0x10b00d0,  0x142012d,  0x15c0153,  0x1690162,  0xd2016f,  0xdc00d7,  0xe500e1,  0xed00e9,  0xf500f1,  0x10d00f9,  0x640063,  0x660065,  0x680067,  0x6a0069,  0x6c006b,  0x6e006d,  0x70006f,  0x720071,  0x740073,  0x760075,  0x780077,  0x7a0079,  0x7c007b,  0x1a20182,  0x1b101a7,  0x1d701bd,  0x1e601da,  0x20901f2,  0x214020b,  0x22c0220,  0x25c0239,  0x2660265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2ca02c0,  0x2f902d7,  0x30d02fe,  0x338031c,  0x3490340,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d703b3,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0xc9,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x86a,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1790174,  0x17a,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x890,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2aa036a,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8910000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xb890000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xda30000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x9cc09c3,  0x9d309cf,  0x9d809d5,  0x9dc09da,  0x9f409df,  0x9fe09fa,  0xa060a02,  0xa120a0a,  0xa140a13,  0xa2b0a21,  0xa310a2f,  0xa350a32,  0xa3d0a3c,  0xa440a43,  0xa4a0a46,  0xa760a71,  0xa8b0a86,  0xa8e0a8d,  0xa9a0a92,  0xaa80aa5,  0xab30ab0,  0xab50ab4,  0xabc0abb,  0xaca0ac7,  0xace0acc,  0xad50ad2,  0xae20ad7,  0xae50ae3,  0xae80ae6,  0xaee0aea,  0xb130af5,  0xb190b18,  0xb3a0b39,  0xb400b3f,  0xb440b42,  0xb490b46,  0xb590b55,  0xb7b0b5e,  0xb820b7e,  0xb880b85,  0xb8b0b8a,  0xb8d0b8c,  0xbbc0b8e,  0xbd10bce,  0xbd30bd2,  0xbd60bd4,  0xbdc0bd7,  0xbe50be3,  0xbf60bf5,  0xbf90bf8,  0xbfc0bfb,  0xc060c05,  0xc0e0c0d,  0xc100c0f,  0xc1e0c15,  0xc200c1f,  0xc390c29,  0xc420c3a,  0xc480c46,  0xc590c50,  0xc6c0c6a,  0xc740c71,  0xc780c76,  0xc7a0c79,  0xc810c80,  0xc8a0c88,  0xc8d0c8c,  0xc920c90,  0xc940c93,  0xc970c96,  0xcc40cbf,  0xcd20cd1,  0xcdf0cd4,  0xce30ce1,  0xcf40ce5,  0xcf70cf5,  0xcf90cf8,  0xd050d04,  0xd0c0d07,  0xd140d0d,  0xd170d16,  0xd280d20,  0xd2d0d2c,  0xd3a0d2f,  0xd3f0d3b,  0xd4b0d48,  0xd550d4f,  0xd580d57,  0xd5a0d59,  0xd5e0d5d,  0xd670d60,  0xd690d68,  0xd700d6f,  0xd770d72,  0xd790d78,  0xd7c0d7b,  0xd7e0d7d,  0xd830d7f,  0xd8a0d89,  0xd8e0d8d,  0xd900d8f,  0xd930d92,  0xd970d94,  0xd9b0d99,  0xd9e0d9c,  0xda00d9f,  0xda40da2,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x89e,  0xa360a35,  0xa37,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8ae,  0x8af,  0x8b0,  0x8b1,  0x8b2,  0x8b3,  0x8b4,  0x8b5,  0x8b6,  0x8b7,  0x8b8,  0x8b9,  0x8ba0000,  0x8bb0000,  0x8bc0000,  0x0,  0x0,  0x0,  0x8be08bd,  0x8bf0000,  0x8c0,  0x8c208c1,  0x8c30000,  0x8c4,  0x8c708c6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8ad,  0x0,  0x0,  0x290000,  0x2a,  0x8c808cb,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8e3,  0x8ea,  0x8f4,  0x8fa,  0x8fd,  0x903,  0x907,  0x90a,  0x90c,  0x910,  0x912,  0x915,  0x9180000,  0x91a0000,  0x91d0000,  0x0,  0x0,  0x0,  0x92a0928,  0x92f0000,  0x931,  0x9380936,  0x93d0000,  0x93f,  0x9490947,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8d8,  0x9740000,  0x9790977,  0x97b,  0x0,  0x8ff097f,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7ca0000,  0x82507cc,  0x82607cd,  0x7cf0827,  0x7d207d1,  0x8290828,  0x82b082a,  0x82d082c,  0x7d407f0,  0x7d807d6,  0x7d907f5,  0x7dc07db,  0x7e207df,  0x7e607e3,  0x7ea07e8,  0x80807ec,  0x80a0809,  0x80c080b,  0x80e080d,  0x810080f,  0x8120811,  0x8140813,  0x8160815,  0x8180817,  0x81a0819,  0x81c081b,  0x7ee0807,  0x82e07ef,  0x830082f,  0x8320831,  0x8340833,  0x83507f1,  0x7f20836,  0x7f407f3,  0x7f707f6,  0x7f907f8,  0x7fb07fa,  0x7fd07fc,  0x7ff07fe,  0x8010800,  0x8030802,  0x8380837,  0x8050804,  0x81d0806,  0x81f081e,  0x8210820,  0x8230822,  0x824,  0x0,  0x9da09c3,  0xa7209c6,  0x9cd09c7,  0xbfd09c8,  0x9ca09d5,  0xa9409c4,  0x9df0a77,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7f007d,  0x830081,  0x870085,  0x8b0089,  0x92008f,  0x960094,  0x9a0098,  0x80007e,  0x840082,  0x880086,  0x8c008a,  0x930090,  0x970095,  0x9b0099,  0x8d0091,  0x8e,  0xa0009c,  0xac009e,  0xa600a1,  0xa5009d,  0xa8009f,  0xb500b0,  0xb200b4,  0xad00bf,  0xb300af,  0xb800b1,  0xb600aa,  0xb900bd,  0xa200a7,  0xae00ab,  0xa300b7,  0xa900be,  0xa400ba,  0xbc00bb,  0xad60a5f,  0xc4a0b3f,  0x0,  0x0,  0x0,  0x0,  0x1100261,  0x1160113,  0x11c0119,  0x120011e,  0x1240122,  0x130012e,  0x1330132,  0x1350134,  0x7cd07ca,  0x7d207cf,  0x7d607d4,  0x7dc07d9,  0x7e307df,  0x7e807e6,  0x7ec07ea,  0x7ce07cb,  0x7d307d0,  0x7d707d5,  0x7dd07da,  0x7e407e0,  0x7e907e7,  0x7ed07eb,  0x7e107e5,  0x7de,  0x9da09c3,  0xa7209c6,  0x9ff09db,  0x9fe09c5,  0xa3509d6,  0xbbc0b59,  0xb5e0b8e,  0xa760d2f,  0xb6a0b49,  0xc2b0b5a,  0xbd90a52,  0xc300cfa,  0xc3c0a24,  0xa9a0bff,  0x9f30d1c,  0xb960a3e,  0x9e40d61,  0xb7f0a08,  0x9cd09c7,  0xacb09c8,  0xa330a4f,  0xaa70aaa,  0x9e30c13,  0xa3a0cff,  0x1360a90,  0x1380137,  0x1430139,  0x1450144,  0x1470146,  0x1490148,  0x14b014a,  0x154014c,  0x1290107,  0x14f013e,  0x15e0158,  0x16b0165,  0xd40171,  0xde00d9,  0x31e01e9,  0x216031d,  0x8d308cd,  0x8db08d7,  0x8e208df,  0x8f308e9,  0x8fc08f9,  0x9060902,  0x90b0909,  0x911090f,  0x9170914,  0x91c0919,  0x9220920,  0x9240923,  0x9270925,  0x935092e,  0x946093c,  0x955094f,  0x95a0959,  0x960095e,  0x9670964,  0x9690968,  0x96f096c,  0x9730972,  0x9780976,  0x97a,  0x8cf08ce,  0x8d108d0,  0x8d508d4,  0x8dc08d9,  0x8e008dd,  0x8e608e1,  0x8e808e7,  0x8e508e4,  0x8ec08eb,  0x8ed08ee,  0x8f008ef,  0x8f208f1,  0x8f608f5,  0x8f808f7,  0x90008fb,  0x9040901,  0x9080905,  0x90e090d,  0x91b0913,  0x91f091e,  0x9260921,  0x92b092d,  0x929092c,  0x9330932,  0x9300934,  0x93a0939,  0x93b0937,  0x9400944,  0x9450941,  0x9430942,  0x94a093e,  0x94c0948,  0x94d094b,  0x950094e,  0x9520951,  0x9540953,  0x9570956,  0x95b0958,  0x95d095c,  0x9620961,  0x96a0965,  0x96d096b,  0x970096e,  0x9750971,  0x10800cd,  0x13f012a,  0x1590150,  0x166015f,  0x172016c,  0xda00d5,  0xe300df,  0xeb00e7,  0xf300ef,  0xfb00f7,  0x112010f,  0x1180115,  0x34a011b,  0x183030f,  0x3b402fa,  0x31103dd,  0x3130312,  0xad301f6,  0xa930b4d,  0xb6b0b4a,  0x3a303d9,  0x3910566,  0x20c036e,  0x1db0221,  0x3730301,  0x3a403da,  0x56a0567,  0x3740395,  0x36f01ea,  0x1dc0224,  0x56b0282,  0x3100397,  0x33e0375,  0x56c03a8,  0x3040398,  0x3990376,  0x38f0305,  0x39a0377,  0x3900306,  0x3a00378,  0x26203a1,  0x2250370,  0x3e301dd,  0x3e503e4,  0x3a903de,  0x39c056d,  0x3a503db,  0x3920568,  0x2260371,  0x3a603dc,  0x3930569,  0x2270372,  0x22b037f,  0x1a302d8,  0x3030302,  0x1a901b0,  0x1de030e,  0x1e7034b,  0x20d0358,  0x379020e,  0x3830382,  0x3850384,  0x3960394,  0x25d039b,  0x25e03d8,  0x3f00260,  0x2b40275,  0x1a102b0,  0x1280106,  0x14e013d,  0x15d0157,  0x16a0164,  0xd30170,  0xdd00d8,  0xe600e2,  0xee00ea,  0xf600f2,  0x10e00fa,  0x1140111,  0x11a0117,  0x11f011d,  0x1230121,  0x12f0125,  0x3410131,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xda5,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x461045d,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xb560cf6,  0xd000d0d,  0x9ce0bae,  0xda20a4b,  0xa970da2,  0xa640d2f,  0xb110a96,  0xc700c0c,  0xccd0cbe,  0xd1f0cda,  0xb980b75,  0xbe90bc3,  0xd290cb0,  0x9d70d74,  0xb7a0a40,  0xcbd0bcc,  0xac10d88,  0xcb90bb6,  0xb1e0cde,  0xcd00c87,  0xb5b0add,  0xbdf0b9e,  0x9e70d22,  0xa280a0d,  0xb780b38,  0xc140bcb,  0xcbb0c76,  0xd0a0cc1,  0xd800d53,  0xc230d87,  0xc610c33,  0xd360ca9,  0xceb0d8a,  0xae40a85,  0xc7f0c4f,  0xc250bd8,  0xd510cfe,  0xab80a84,  0xba30b76,  0xc5d0bb0,  0xd410c67,  0xc820a27,  0xa0f0a10,  0xc620c3e,  0xd430caf,  0xb1f0cf2,  0xcee0b75,  0xaad09d1,  0xbe40afa,  0xa300c04,  0x9eb0c27,  0x9c90af3,  0xb3e0b93,  0xa450c5c,  0xc170a80,  0xce70cb1,  0xd160b86,  0xb230b91,  0xb2b0c9f,  0x9de0c03,  0xa0e09fd,  0xc570b6d,  0xcea0c95,  0xa2a0d2e,  0xa9a0a57,  0xb450ae1,  0xc280bb7,  0xd760d3d,  0xd910d8b,  0xb540a21,  0xd130b81,  0xb0b0ad4,  0xb360b12,  0xbc60bb3,  0xc3b0bf2,  0xc7d0c64,  0xcb30d0f,  0xd370d19,  0xa220a17,  0xbc20a5c,  0xce70cd5,  0xaf80adc,  0xb840b29,  0xbe10c4e,  0xa7309e2,  0xac60aad,  0xbe80afb,  0xc730bef,  0xd300c7b,  0xd540d50,  0x9e80d63,  0xd2b0c38,  0xb010d4a,  0x9f109d9,  0xab60aae,  0xb750b41,  0xc0b0bc9,  0xd1e0cb6,  0xb500da0,  0xa200d40,  0xb660b63,  0xbaa0b9c,  0xc020beb,  0xc5b0c22,  0x9ff0d66,  0xd440b16,  0xabf09ed,  0xd100ba4,  0xb030aef,  0xbe40b68,  0xa190d46,  0xaba0a53,  0xb5f0b4b,  0xb950b70,  0xc070bea,  0xcd60c6e,  0xd2d0cd9,  0xa340d4d,  0xa540bab,  0xbf30bca,  0xd470cba,  0xd8c0d82,  0xba20b65,  0xc460c89,  0xc520c49,  0xbc00bde,  0x9e00cf1,  0xa1a0ca3,  0xad80a16,  0xc550b20,  0xb990aa9,  0xd120b53,  0xd420cd2,  0xadf0ce1,  0xa6a09f5,  0x0,  0xa7f,  0xb4f,  0xa110000,  0xc110be0,  0xc310c2a,  0xc370c32,  0xc530d56,  0xc74,  0xcbc,  0xced,  0xd1a0000,  0xd25,  0x0,  0xd6c0d6b,  0xd860d6d,  0xd490d23,  0x9f209e9,  0xa2609f7,  0xa390a29,  0xa6d0a66,  0xa7e0a6f,  0xab90a81,  0xafe0abb,  0xb0a0b08,  0xb3b0b10,  0xb510b47,  0xb9f0b6e,  0xbb20ba6,  0xbcf0bc7,  0xc240bec,  0xc2d0c2b,  0xc2e0c2c,  0xc300c2f,  0xc360c35,  0xc440c3f,  0xc640c4b,  0xc680c66,  0xc770c6d,  0xc980c8b,  0xcb20c98,  0xce20cdc,  0xcf00cef,  0xd020d01,  0xd1a0d18,  0xd5f0d4e,  0xafc0d65,  0xc910de3,  0x0,  0xa0c09cb,  0x9e609fc,  0xa0109f6,  0xa2c0a25,  0xa610a66,  0xa6c0a65,  0xa830a7f,  0xa980a95,  0xaa30a9f,  0xae00ade,  0xaf40aec,  0xb060b00,  0xb0a0b02,  0xb100b07,  0xb2d0b17,  0xb320b30,  0xb4f0b3c,  0xb5c0b5b,  0xb820b61,  0xb9c0b86,  0xbad0baf,  0xbb90bb2,  0xc1d0bc7,  0xbdd0bd0,  0xbf00be0,  0xc000bf7,  0xc0a0c09,  0xc120c11,  0xc1b0c16,  0xc260c1a,  0xc4b0c45,  0xc5f0c51,  0xc6b0c64,  0xca40c77,  0xccb0cae,  0xce00cdd,  0xce80ce2,  0xce90ced,  0xcee0cef,  0xcf00cec,  0xd020cf3,  0xd1d0d11,  0xd320d2a,  0xd4e0d45,  0xd5b0d56,  0xd620d5f,  0xd7a0d65,  0xdce0da2,  0xdd70dcd,  0x99f0995,  0xdf109a0,  0xe120dfa,  0xda10d9d,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x33c0339,  0x33a033d,  0x3f1033b,  0x3f1,  0x0,  0x0,  0x0,  0x0,  0x0,  0x5e80000,  0x5e605e5,  0x5e705e9,  0x0,  0x0,  0x5fc0000,  0x6170000,  0x5ea0608,  0x5f605f4,  0x60205ff,  0x60e0604,  0xc20615,  0x6140613,  0x6120611,  0x5ec05eb,  0x5f005ed,  0x5f505f3,  0x5f905f7,  0x5fa,  0x5fd05fb,  0x60005fe,  0x603,  0x605,  0x6070606,  0x6090000,  0x60a,  0x60d060c,  0x610060f,  0x5f80616,  0x60105f1,  0x5ee060b,  0x75a075a,  0x75d075d,  0x75d075d,  0x75e075e,  0x75e075e,  0x7600760,  0x7600760,  0x75c075c,  0x75c075c,  0x75f075f,  0x75f075f,  0x75b075b,  0x75b075b,  0x76c076c,  0x76c076c,  0x76d076d,  0x76d076d,  0x7620762,  0x7620762,  0x7610761,  0x7610761,  0x7630763,  0x7630763,  0x7640764,  0x7640764,  0x7670767,  0x7660766,  0x7680768,  0x7650765,  0x76a076a,  0x7690769,  0x76e076e,  0x76e076e,  0x7700770,  0x7700770,  0x7720772,  0x7720772,  0x7710771,  0x7710771,  0x7730773,  0x7740774,  0x7740774,  0x7830783,  0x7760776,  0x7760776,  0x7750775,  0x7750775,  0x7810781,  0x7820782,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x76f0000,  0x76f076f,  0x77a076f,  0x779077a,  0x77c0779,  0x77b077c,  0x77e077e,  0x7780778,  0x77d077d,  0x7800780,  0x7800780,  0x7340734,  0x7460746,  0x7560756,  0x74f074f,  0x7530753,  0x7520752,  0x7540754,  0x7550755,  0x7500755,  0x7500750,  0x77f077f,  0x77f077f,  0x7480747,  0x750074c,  0x6220751,  0x6250623,  0x62c0629,  0x630062d,  0x6370634,  0x645063d,  0x6480646,  0x64e064b,  0x651064f,  0x65c0655,  0x664065e,  0x6660665,  0x6750672,  0x67b0677,  0x69a0691,  0x6a0069f,  0x6a606a3,  0x6ab06aa,  0x6b406b2,  0x6be06b7,  0x6cf06bf,  0x6d106d0,  0x6d506d3,  0x6d806d6,  0x6de06da,  0x6e106df,  0x6e306e2,  0x6e506e4,  0x6e906e6,  0x6f006ea,  0x6f806f4,  0x6fe06fa,  0x70206ff,  0x70c0707,  0x7120710,  0x7150713,  0x71e071a,  0x7260721,  0x7290727,  0x72d072a,  0x737072e,  0x73b0739,  0x743073e,  0x66b0744,  0x735066e,  0x1f001d,  0x230021,  0x270025,  0x74b074a,  0x74d074c,  0x7510750,  0x6280627,  0x62a0629,  0x62d062c,  0x63c063b,  0x643063d,  0x6460645,  0x64a0649,  0x64c064b,  0x64f064e,  0x6d606d5,  0x6df06de,  0x6e506e1,  0x6e906e6,  0x6fa06ea,  0x6ff06fe,  0x7100701,  0x720071f,  0x7240721,  0x7270726,  0x73c0735,  0x73e073d,  0x7430741,  0x7470744,  0x7490748,  0x74e074c,  0x6230622,  0x6290625,  0x630062b,  0x6370634,  0x644063d,  0x651064b,  0x65c0655,  0x664065e,  0x6720666,  0x6770675,  0x691067b,  0x69a0694,  0x6a0069f,  0x6a606a3,  0x6b206aa,  0x6b706b4,  0x6bf06be,  0x6d006cf,  0x6d306d1,  0x6da06d8,  0x6e306e2,  0x6e506e4,  0x6f006e6,  0x6f806f4,  0x6fd06fa,  0x7070702,  0x710070c,  0x71a0715,  0x721071e,  0x7290725,  0x72f072a,  0x7390737,  0x73e073b,  0x74c0742,  0x629074e,  0x63d062b,  0x64b0644,  0x67b064d,  0x68a067f,  0x6e5068d,  0x6fa06e6,  0x7250721,  0x742073e,  0x6c906c7,  0x6af06cb,  0x6bb06b0,  0x6c306bc,  0x68006c4,  0x68e0681,  0x661068f,  0x6590662,  0x667065a,  0x69c0668,  0x6a7069d,  0x68306a8,  0x6880685,  0x689068a,  0x695067a,  0x6af06a5,  0x6bb06b0,  0x6c306bc,  0x68006c4,  0x68e0681,  0x661068f,  0x6590662,  0x667065a,  0x69c0668,  0x6a7069d,  0x68306a8,  0x6880685,  0x689068a,  0x695067a,  0x68306a5,  0x6880685,  0x67f068a,  0x6ab068d,  0x6750672,  0x6830677,  0x6880685,  0x6b206ab,  0x61c061c,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x6350631,  0x6360635,  0x63e0638,  0x640063f,  0x6560656,  0x65f0660,  0x6730676,  0x67d0674,  0x67c067d,  0x67e067e,  0x6920692,  0x686069b,  0x6840686,  0x68b068b,  0x68c068c,  0x6a406a1,  0x6ac06a4,  0x6ad06ac,  0x6b506ae,  0x6b806b8,  0x6c006b9,  0x6c106c2,  0x6d206d2,  0x6dc06db,  0x6f706f5,  0x6f106f6,  0x6f906f1,  0x6fb06f9,  0x70806fb,  0x70b0709,  0x7050703,  0x70e070d,  0x0,  0x72b0704,  0x71b072c,  0x717071c,  0x7180717,  0x7220723,  0x73f073f,  0x6330626,  0x63a0632,  0x6420639,  0x6580641,  0x6570652,  0x6930678,  0x6a20687,  0x6fc06f3,  0x738073a,  0x7110740,  0x71d06dd,  0x6f506db,  0x6e806ba,  0x70f0716,  0x6e706f2,  0x71606f2,  0x65d0653,  0x6d40706,  0x6e70624,  0x69b06b5,  0x7190679,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x6d90699,  0x61a061b,  0x696070a,  0x6b6066d,  0x6970731,  0x6540698,  0x66f,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x89200c3,  0x1730893,  0x2b0175,  0x8ab017e,  0xc708ac,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x84e00c6,  0x2d5084d,  0x3402d5,  0x44900c0,  0x89f044b,  0x89c08aa,  0x896089d,  0x8940897,  0x8980895,  0x89a0899,  0x89b,  0x2d10000,  0x502d3,  0x50005,  0x2d50005,  0x2d502d5,  0x89200c3,  0xc5,  0x1730175,  0x2b017e,  0x34084e,  0x44900c0,  0x89f044b,  0x2f08aa,  0xc10032,  0xc400c2,  0x17c0176,  0x178,  0x3002d2,  0x1810031,  0x0,  0x0,  0x6c5001b,  0x1c,  0x1e,  0x6c60020,  0x6c80022,  0x6ca0024,  0x6cc0026,  0x6cd0028,  0x61d0618,  0x61e061d,  0x732061e,  0x61f0732,  0x745061f,  0x7450745,  0x6190745,  0x6210619,  0x6210621,  0x62e0621,  0x62f062e,  0x62f062f,  0x647062f,  0x6470647,  0x6500647,  0x6500650,  0x65b0650,  0x65b065b,  0x663065b,  0x6630663,  0x6690663,  0x66a0669,  0x66c066a,  0x670066c,  0x6710670,  0x6710671,  0x6820671,  0x6820682,  0x6900682,  0x6900690,  0x69e0690,  0x69e069e,  0x6a9069e,  0x6a906a9,  0x6b106a9,  0x6b106b1,  0x6b306b1,  0x6b306b3,  0x6bd06b3,  0x6bd06bd,  0x6ce06bd,  0x6ce06ce,  0x6d706ce,  0x6d706d7,  0x6e006d7,  0x6e006e0,  0x6eb06e0,  0x6eb06eb,  0x70006eb,  0x7000700,  0x7140700,  0x7140714,  0x7280714,  0x7280728,  0x7300728,  0x7340730,  0x7360734,  0x7360736,  0x6ed0736,  0x6ee06ed,  0x6ef06ee,  0x6ec06ef,  0x6ec,  0x0,  0x2b0000,  0x2f002e,  0x310030,  0x330032,  0xc00034,  0xc200c1,  0xc400c3,  0xc800c5,  0xce00c9,  0x12b0109,  0x1510140,  0x160015a,  0x16d0167,  0x1750173,  0x1780176,  0x17e017c,  0x1820181,  0x1a701a2,  0x1bd01b1,  0x1da01d7,  0x1f201e6,  0x20b0209,  0x2200214,  0x239022c,  0x265025c,  0x2710266,  0x28b0280,  0x2b102aa,  0x2c002bb,  0x2d102ca,  0x2d302d2,  0x2d502d4,  0x2d702d6,  0x2fe02f9,  0x31c030d,  0x3400338,  0x3540349,  0x36d036a,  0x38e0380,  0x3b303a2,  0x3e103d7,  0x3ef03e2,  0x40503fc,  0x42a0424,  0x4370432,  0x4490442,  0x44b044a,  0x88e044c,  0x893088f,  0x8990898,  0x97d0892,  0x8cc097a,  0x8d608d2,  0x8de08da,  0x963095f,  0x9160966,  0x8cd097e,  0x8d708d3,  0x8df08db,  0x8e908e2,  0x8f908f3,  0x90208fc,  0x9090906,  0x90f090b,  0x9140911,  0x9190917,  0x920091c,  0x9230922,  0x9250924,  0x92e0927,  0x93c0935,  0x94f0946,  0x9590955,  0x95e095a,  0x9640960,  0x9680967,  0x96c0969,  0x972096f,  0x97c0973,  0x8ca08c9,  0x7ca0807,  0x82507cc,  0x82607cd,  0x7cf0827,  0x7d207d1,  0x8290828,  0x82b082a,  0x82d082c,  0x7d407f0,  0x7d807d6,  0x7d907f5,  0x7dc07db,  0x7e207df,  0x7e607e3,  0x7ea07e8,  0x7ec,  0x0,  0x8090808,  0x80b080a,  0x80d080c,  0x0,  0x80f080e,  0x8110810,  0x8130812,  0x0,  0x8150814,  0x8170816,  0x8190818,  0x0,  0x81b081a,  0x81c,  0x0,  0x44e044d,  0x40451,  0x44f0450,  0x854,  0x855088b,  0x8580857,  0x88c085a,  0x88d,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xda6,  0xda7,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xda80000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xdaa0da9,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xdac0dab,  0xdae0dad,  0xdb00daf,  0xdb1,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xdb20000,  0xdb30db5,  0xdb40db6,  0xdb7,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1a20182,  0x1b101a7,  0x1d701bd,  0x1e601da,  0x20901f2,  0x214020b,  0x22c0220,  0x25c0239,  0x2660265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2ca02c0,  0x2f902d7,  0x30d02fe,  0x338031c,  0x3490340,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d703b3,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0x1a20182,  0x1b101a7,  0x1d701bd,  0x1e601da,  0x20901f2,  0x214020b,  0x22c0220,  0x25c0239,  0x2660265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2ca02c0,  0x2f902d7,  0x30d02fe,  0x338031c,  0x340,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d703b3,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0x1a20182,  0x1b101a7,  0x1d701bd,  0x1e601da,  0x20901f2,  0x214020b,  0x22c0220,  0x25c0239,  0x2660265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2ca02c0,  0x2f902d7,  0x30d02fe,  0x338031c,  0x3490340,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d703b3,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0x182,  0x1b101a7,  0x0,  0x1da,  0x2090000,  0x20b,  0x22c0000,  0x25c0239,  0x265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2ca02c0,  0x2f902d7,  0x30d02fe,  0x3380000,  0x3490000,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d70000,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0x1a20182,  0x1b101a7,  0x1d701bd,  0x1e601da,  0x20901f2,  0x214020b,  0x22c0220,  0x25c0239,  0x2660265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2ca02c0,  0x2f902d7,  0x30d02fe,  0x338031c,  0x3490340,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d703b3,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0x1a20182,  0x1b10000,  0x1d701bd,  0x1da,  0x2090000,  0x214020b,  0x22c0220,  0x25c0239,  0x265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2c0,  0x2f902d7,  0x30d02fe,  0x338031c,  0x3490340,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d703b3,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0x1a20182,  0x1b10000,  0x1d701bd,  0x1da,  0x20901f2,  0x214020b,  0x220,  0x239,  0x0,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2c0,  0x2f902d7,  0x30d02fe,  0x338031c,  0x3490340,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d703b3,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0x1a20182,  0x1b101a7,  0x1d701bd,  0x1e601da,  0x20901f2,  0x214020b,  0x22c0220,  0x25c0239,  0x2660265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2ca02c0,  0x2f902d7,  0x30d02fe,  0x338031c,  0x3490340,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d703b3,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0x1a20182,  0x1b101a7,  0x1d701bd,  0x1e601da,  0x20901f2,  0x214020b,  0x22c0220,  0x25c0239,  0x2660265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2ca02c0,  0x2f902d7,  0x30d02fe,  0x338031c,  0x3490340,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d703b3,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0x1a20182,  0x1b101a7,  0x1d701bd,  0x1e601da,  0x20901f2,  0x214020b,  0x22c0220,  0x25c0239,  0x2660265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2ca02c0,  0x2f902d7,  0x30d02fe,  0x338031c,  0x3490340,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d703b3,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0x1a20182,  0x1b101a7,  0x1d701bd,  0x1e601da,  0x20901f2,  0x214020b,  0x22c0220,  0x25c0239,  0x2660265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2ca02c0,  0x2f902d7,  0x30d02fe,  0x338031c,  0x3490340,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d703b3,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0x1a20182,  0x1b101a7,  0x1d701bd,  0x1e601da,  0x20901f2,  0x214020b,  0x22c0220,  0x25c0239,  0x2660265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2ca02c0,  0x2f902d7,  0x30d02fe,  0x338031c,  0x3490340,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d703b3,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0x1a20182,  0x1b101a7,  0x1d701bd,  0x1e601da,  0x20901f2,  0x214020b,  0x22c0220,  0x25c0239,  0x2660265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2ca02c0,  0x2f902d7,  0x30d02fe,  0x338031c,  0x3490340,  0x36a0354,  0x380036d,  0x3a2038e,  0x3d703b3,  0x3e203e1,  0x3fc03ef,  0x4240405,  0x432042a,  0x4420437,  0x467045f,  0x0,  0x4ad0497,  0x4af04ae,  0x4b904b0,  0x4ce04ba,  0x4dd04cf,  0x4df04de,  0x4e104e0,  0x4eb04e2,  0x4ce04ec,  0x4ef04ee,  0x4fa04f0,  0x4fc04fb,  0x86104fd,  0x52b0511,  0x52d052c,  0x537052e,  0x5500538,  0x5630551,  0x5650564,  0x56f056e,  0x5790570,  0x57d057a,  0x57f057e,  0x5920580,  0x5940593,  0x85f0595,  0x550052e,  0x5920563,  0x579057a,  0x4ad0497,  0x4af04ae,  0x4b904b0,  0x4ce04ba,  0x4dd04cf,  0x4df04de,  0x4e104e0,  0x4eb04e2,  0x4ce04ec,  0x4ef04ee,  0x4fa04f0,  0x4fc04fb,  0x86104fd,  0x52b0511,  0x52d052c,  0x537052e,  0x5500538,  0x5630551,  0x5650564,  0x56f056e,  0x5790570,  0x57d057a,  0x57f057e,  0x5920580,  0x5940593,  0x85f0595,  0x550052e,  0x5920563,  0x579057a,  0x4ad0497,  0x4af04ae,  0x4b904b0,  0x4ce04ba,  0x4dd04cf,  0x4df04de,  0x4e104e0,  0x4eb04e2,  0x4ce04ec,  0x4ef04ee,  0x4fa04f0,  0x4fc04fb,  0x86104fd,  0x52b0511,  0x52d052c,  0x537052e,  0x5500538,  0x5630551,  0x5650564,  0x56f056e,  0x5790570,  0x57d057a,  0x57f057e,  0x5920580,  0x5940593,  0x85f0595,  0x550052e,  0x5920563,  0x579057a,  0x4ad0497,  0x4af04ae,  0x4b904b0,  0x4ce04ba,  0x4dd04cf,  0x4df04de,  0x4e104e0,  0x4eb04e2,  0x4ce04ec,  0x4ef04ee,  0x4fa04f0,  0x4fc04fb,  0x86104fd,  0x52b0511,  0x52d052c,  0x537052e,  0x5500538,  0x5630551,  0x5650564,  0x56f056e,  0x5790570,  0x57d057a,  0x57f057e,  0x5920580,  0x5940593,  0x85f0595,  0x550052e,  0x5920563,  0x579057a,  0x4ad0497,  0x4af04ae,  0x4b904b0,  0x4ce04ba,  0x4dd04cf,  0x4df04de,  0x4e104e0,  0x4eb04e2,  0x4ce04ec,  0x4ef04ee,  0x4fa04f0,  0x4fc04fb,  0x86104fd,  0x52b0511,  0x52d052c,  0x537052e,  0x5500538,  0x5630551,  0x5650564,  0x56f056e,  0x5790570,  0x57d057a,  0x57f057e,  0x5920580,  0x5940593,  0x85f0595,  0x550052e,  0x5920563,  0x579057a,  0x5ae05ad,  0x0,  0xce00c9,  0x12b0109,  0x1510140,  0x160015a,  0x16d0167,  0xce00c9,  0x12b0109,  0x1510140,  0x160015a,  0x16d0167,  0xce00c9,  0x12b0109,  0x1510140,  0x160015a,  0x16d0167,  0xce00c9,  0x12b0109,  0x1510140,  0x160015a,  0x16d0167,  0xce00c9,  0x12b0109,  0x1510140,  0x160015a,  0x16d0167,  0x6210619,  0x6690650,  0x7300000,  0x65b0670,  0x73606a9,  0x6eb06e0,  0x7140700,  0x6b30671,  0x69006ce,  0x66c06d7,  0x62f0682,  0x6630647,  0x69e066a,  0x6bd06b1,  0x7730758,  0x759076b,  0x6210000,  0x650,  0x728,  0x65b0000,  0x7360000,  0x6eb06e0,  0x7140700,  0x6b30671,  0x69006ce,  0x6d7,  0x62f0682,  0x6630647,  0x69e0000,  0x6bd0000,  0x0,  0x0,  0x0,  0x650,  0x0,  0x65b0000,  0x7360000,  0x6eb0000,  0x7140000,  0x6b30671,  0x6900000,  0x6d7,  0x682,  0x6630000,  0x69e0000,  0x6bd0000,  0x7730000,  0x7590000,  0x6210000,  0x650,  0x728,  0x65b0000,  0x73606a9,  0x6e0,  0x7140700,  0x6b30671,  0x69006ce,  0x6d7,  0x62f0682,  0x6630647,  0x69e0000,  0x6bd06b1,  0x758,  0x76b,  0x6210619,  0x6690650,  0x7300728,  0x65b0670,  0x73606a9,  0x6eb0000,  0x7140700,  0x6b30671,  0x69006ce,  0x66c06d7,  0x62f0682,  0x6630647,  0x69e066a,  0x6bd06b1,  0x0,  0x0,  0x6210000,  0x6690650,  0x7300000,  0x65b0670,  0x73606a9,  0x6eb0000,  0x7140700,  0x6b30671,  0x69006ce,  0x66c06d7,  0x62f0682,  0x6630647,  0x69e066a,  0x6bd06b1,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xca00cb,  0x10a00cf,  0x141012c,  0x15b0152,  0x1680161,  0x16e,  0x0,  0x0,  0x4a0049,  0x4c004b,  0x4e004d,  0x50004f,  0x520051,  0x540053,  0x560055,  0x580057,  0x5a0059,  0x5c005b,  0x5e005d,  0x60005f,  0x620061,  0x1a708a0,  0x1a80266,  0x2b3,  0x1a20182,  0x1b101a7,  0x1d701bd,  0x1e601da,  0x20901f2,  0x214020b,  0x22c0220,  0x25c0239,  0x2660265,  0x2800271,  0x2aa028b,  0x2bb02b1,  0x2ca02c0,  0x22601e8,  0x2740272,  0x2b2025f,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2230222,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1b2,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8fe08c5,  0x902,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xaa60b19,  0x91a0a48,  0xa8f09da,  0xa940ce4,  0xb4c09dd,  0xb410bc4,  0xaf00a1d,  0xb430a03,  0xc5e0a18,  0xcfb0bf9,  0xa560a88,  0xb1c0bb1,  0x9c30b27,  0xd1b09c6,  0x9cd0acb,  0xb240a4f,  0xb1a0d05,  0xc430c34,  0xba90a51,  0xb590b5a,  0xa1e0bfe,  0xa69,  0x0,  0x0,  0x8a108a7,  0x8a408a2,  0x8a508a8,  0x8a308a9,  0x8a6,  0x0,  0x0,  0x0,  0xa4d0af1,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x9d009d2,  0xdb809d4,  0x9e909e5,  0x9ec09ea,  0x9ef09ee,  0x9f009f2,  0xdbc0980,  0x9f809f7,  0xa0009f9,  0x9810db9,  0xa0309fb,  0xa070dbb,  0x9e10a09,  0xa0c0a0b,  0xa130e1a,  0x9830a15,  0xa1c0a1b,  0xa1f0a1e,  0xa250984,  0xa290a26,  0xa2d0a2c,  0xa300a2e,  0xa390a38,  0xa3f0a3b,  0xa420a41,  0xa420a42,  0xbbd0dbf,  0xa490a47,  0xa4c0dc0,  0xa500a4e,  0xa550a5a,  0xa590a58,  0xa5d0a5b,  0xa600a5e,  0xa630a62,  0xa650a63,  0xa680a67,  0xa740a6b,  0xa750a6d,  0xa700a6e,  0xa870a16,  0xa7a0a79,  0xa780a7b,  0xa7c0a7d,  0xdc10a82,  0xa8a0a89,  0xa8f0a8c,  0xa990a91,  0xdc30dc2,  0xa9d0a9c,  0xa9b0a9e,  0x9850aa0,  0xaa20986,  0xaa40aa4,  0xaab0dc4,  0xaad0aac,  0xdc50aaf,  0xab20ab1,  0xab40ae9,  0xab70987,  0xabe0abb,  0xdc70abd,  0xdc80ac0,  0xac20ac3,  0xac80ac4,  0x9880ac9,  0xacf0acd,  0xad10ad0,  0xdc90989,  0xad9098a,  0xadb0ada,  0xe240add,  0xdcb0ae3,  0xc8e0dcb,  0xae70ae7,  0xdd2098b,  0xaeb0dfc,  0x98c0aed,  0xaf60af2,  0xaf90af7,  0x98e0afd,  0xafe098d,  0xaff0dcc,  0xb050b04,  0xb050b06,  0xb0a0b09,  0xb0c0b0e,  0xb0f0b0d,  0xb110b10,  0xb150b14,  0xb1d0b1b,  0xb260b21,  0xb250dcf,  0xb280b22,  0xb2f0b2a,  0xb310dd0,  0xb2c0b2e,  0xb33098f,  0xb370b35,  0x9900b34,  0xb3d0b3b,  0xb480dd1,  0xb4e0b57,  0xb510993,  0x9910992,  0xa050a04,  0xb520b58,  0x9ac0c83,  0xb5c0b5b,  0xb620b5d,  0xdd60b60,  0xb670994,  0xb6c0b64,  0xdd80b6e,  0xb690b6f,  0x9950b71,  0xb730b72,  0xb770b74,  0xb790dd9,  0xb7c0996,  0xb7d0dda,  0xb800997,  0xb860b83,  0xddb0b87,  0xddc0dc6,  0xddd0b8f,  0xb940b92,  0xb970b90,  0xb9f0b9b,  0xb9d0b9c,  0xba10ba0,  0xb9a0dde,  0xba80ba7,  0xbad0998,  0xddf0bac,  0xbb40ba5,  0xde10de0,  0xbba0bb5,  0xbb80bb9,  0xbbb0999,  0xbbe0bbf,  0xdba0bc1,  0xde20bc5,  0xde40bc8,  0xbd00bcd,  0xde50bd5,  0xbdb0bda,  0xde70de6,  0xbe60be2,  0xbe7099a,  0x99b099b,  0xbee0bed,  0xbf10bf0,  0x99c0bf4,  0xde80bfa,  0xde90c01,  0xdca0c04,  0xdea0c08,  0xdec0deb,  0x99e099d,  0xdee0c16,  0xdef0ded,  0xc180df0,  0xc190c19,  0x9a00c1b,  0x9a10c1c,  0xdf209a2,  0xc230c21,  0x9a30c26,  0xc2f0df3,  0xdf50df4,  0xc3d0c37,  0xc3f09a4,  0xc410c40,  0xdf70df6,  0xc470df7,  0xdf809a5,  0xc4d0c4c,  0xdf909a6,  0x9a70c54,  0xc560c58,  0xdfb0c5a,  0x9a80c60,  0xc650c63,  0x9a90c69,  0xdfe0dfd,  0xdff09aa,  0xe000c6f,  0xc750c72,  0xe010c77,  0xc7c0e02,  0xc7e0e03,  0x9ab0dd3,  0xc850c84,  0xc8609ad,  0xe040aa1,  0xdd40e05,  0xc8e0dd5,  0xd150c8f,  0xc9a09ae,  0xc9b0c99,  0xc9c0a23,  0xc9e0c9d,  0xe060ca0,  0xca10c9f,  0xca70ca6,  0xca80ca2,  0xcb20cad,  0xcaa0ca5,  0xcac0cab,  0xe090e07,  0x9af0e08,  0xcb50cb4,  0xe0d0cb7,  0xe0a0cb8,  0x9b109b0,  0xe0c0e0b,  0xcc009b2,  0xcc20cc1,  0xcc60cc3,  0xcc80cc5,  0xccb0cc7,  0xcca0cc9,  0x9b30ccc,  0xccf0cce,  0xcd309b4,  0xe0e0cd4,  0xcd80cd7,  0xcdb09b5,  0xe0f0982,  0x9b60e10,  0xce609b7,  0xcf30cec,  0xe110cf7,  0xcfd0cfc,  0xd060d03,  0xdbd0e13,  0xd080d09,  0xdbe0d0b,  0xd110d0e,  0xe150e14,  0xd240d21,  0xe160d26,  0xd310d27,  0xd350d34,  0xd380d33,  0xe170d39,  0x9b80d3c,  0xe180d3e,  0xd4c09b9,  0xd520ac5,  0xe1b0e19,  0x9bb09ba,  0xe1c0d5c,  0xe1d09bc,  0xd620d62,  0xe1e0d64,  0x9bd0d6a,  0xd710d6e,  0xd750d73,  0xe1f09be,  0xd810d7a,  0x9bf0d84,  0xd8509c0,  0x9c10e20,  0xe220e21,  0xd8e0e23,  0xd9309c2,  0xd960d95,  0xd9a0d98,  0xe250d9c,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);
immutable canonMapping = CodepointTrie!(ushort, 12, 9).fromRawArray([ 0x0,  0x800], [ 0x1000,  0x2e00], [ 0x1000,  0x3002,  0x5004,  0x7006,  0x9008,  0x9009,  0xa009,  0xb009,  0xd00c,  0x9009,  0xe009,  0x9009,  0x900f,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x11010,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9012,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9013,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x15014,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x9009,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x60005,  0xc0007,  0x180015,  0x290000,  0x320031,  0x3e0033,  0x5a0059,  0x60005b,  0x7c0000,  0x840083,  0x8a0085,  0x94,  0xc10000,  0xc300c2,  0xea00c9,  0x0,  0xfa00f9,  0x10000fb,  0x10c0109,  0x11d0000,  0x1260125,  0x1320127,  0x14f014e,  0x1540150,  0x1700000,  0x1780177,  0x17e0179,  0x188,  0x1b60000,  0x1b801b7,  0x1e001be,  0x1e50000,  0x101000d,  0x102000e,  0x1150021,  0x1190025,  0x11a0026,  0x11b0027,  0x11c0028,  0x120002c,  0x0,  0x12d0039,  0x130003c,  0x131003d,  0x13b0047,  0x1340040,  0x140004c,  0x142004e,  0x143004f,  0x1450051,  0x1460052,  0x0,  0x151005c,  0x152005d,  0x153005e,  0x15b0067,  0x5f,  0x0,  0x15d0069,  0x162006e,  0x700000,  0x740164,  0x710168,  0x165,  0x0,  0x7b0000,  0x80016f,  0x7e0174,  0x172,  0x0,  0x182008e,  0x1850091,  0x18b0097,  0x0,  0x19b00a7,  0x1a200ae,  0x19d00a9,  0x1a400b0,  0x1a600b2,  0x1ad00b9,  0x1a800b4,  0x1b300be,  0x1b000bb,  0x0,  0x1b900c4,  0x1bb00c6,  0x1bd00c8,  0x1c400cf,  0x1c500d0,  0x1d100dc,  0x1d800e3,  0x1e100eb,  0xf200ef,  0xf401e9,  0xf501eb,  0x1ec,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x18f009b,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xd40000,  0x1c9,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1a0000,  0x63010e,  0x980157,  0xd1018c,  0xcc01c6,  0xcb01c1,  0xcd01c0,  0xca01c2,  0x1bf,  0x10a0016,  0x1080014,  0x1f801f5,  0x0,  0x1440050,  0x160006c,  0x19700a3,  0x19800a4,  0x1fc01fb,  0x15e,  0x0,  0x13f004b,  0x0,  0x16e007a,  0x10d0019,  0x1f701f4,  0x1f901f6,  0x10f001b,  0x110001c,  0x1350041,  0x1360042,  0x1580064,  0x1590065,  0x18d0099,  0x18e009a,  0x19e00aa,  0x19f00ab,  0x1c700d2,  0x1c800d3,  0x1ac00b8,  0x1b200bd,  0x0,  0x1490055,  0x0,  0x0,  0x0,  0x1070013,  0x1390045,  0x1890095,  0x180008c,  0x1860092,  0x1870093,  0x1e300ed,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1ff01fe,  0x2010000,  0x200,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1fd,  0x0,  0x0,  0x0,  0x0,  0x1,  0x0,  0x0,  0x1f00000,  0x1f30203,  0x2200218,  0x233,  0x240,  0x2530249,  0x2a4,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x24c0236,  0x27f0267,  0x29f0288,  0x2bf,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2bd02a2,  0x2ba02b0,  0x2cc,  0x0,  0x2e10000,  0x2e2,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2e902e7,  0x2e60000,  0x0,  0x2e30000,  0x0,  0x0,  0x2ed02f1,  0x2f4,  0x0,  0x0,  0x0,  0x0,  0x2ef0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3050000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2ff02fd,  0x2fc0000,  0x0,  0x3100000,  0x0,  0x0,  0x3030307,  0x30a,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3120311,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2ea0000,  0x300,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2fa02e4,  0x2fb02e5,  0x0,  0x2fe02e8,  0x0,  0x3140313,  0x30102eb,  0x30202ec,  0x0,  0x30402ee,  0x30602f0,  0x30802f2,  0x0,  0x3160315,  0x30f02f9,  0x30902f3,  0x30b02f5,  0x30c02f6,  0x30d02f7,  0x0,  0x30e02f8,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x33a0339,  0x33b033c,  0x33d,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x340,  0x33e,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x33f0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3470000,  0x0,  0x0,  0x0,  0x34a0000,  0x0,  0x34b,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3420341,  0x3440343,  0x3460345,  0x3490348,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x34f0000,  0x350,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x34d034c,  0x34e0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3550000,  0x0,  0x356,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3510000,  0x3530352,  0x0,  0x354,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x35a,  0x3590000,  0x35b,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3580357,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x35c,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x35f035d,  0x35e,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x360,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x361,  0x0,  0x0,  0x3640000,  0x365,  0x3630362,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3680366,  0x367,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x369,  0x36b036a,  0x36c,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x36e0000,  0x0,  0x0,  0x0,  0x0,  0x36f0000,  0x0,  0x0,  0x370,  0x0,  0x3710000,  0x0,  0x0,  0x372,  0x0,  0x0,  0x0,  0x0,  0x0,  0x36d0000,  0x0,  0x0,  0x0,  0x0,  0x3730000,  0x3740000,  0x37c,  0x37d,  0x0,  0x0,  0x0,  0x3750000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3770000,  0x0,  0x0,  0x0,  0x0,  0x3780000,  0x0,  0x0,  0x379,  0x0,  0x37a0000,  0x0,  0x0,  0x37b,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3760000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x37e,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x37f,  0x380,  0x381,  0x382,  0x383,  0x0,  0x384,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3850000,  0x3860000,  0x0,  0x3880387,  0x3890000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1140020,  0x1160022,  0x1170023,  0x1180024,  0x11e002a,  0x11f002b,  0x121002d,  0x1240030,  0x122002e,  0x123002f,  0x12e003a,  0x12f003b,  0x13c0048,  0x13d0049,  0x13a0046,  0x13e004a,  0x141004d,  0x1470053,  0x14a0056,  0x1480054,  0x14b0057,  0x14c0058,  0x15c0068,  0x1550061,  0x15f006b,  0x161006d,  0x163006f,  0x1660072,  0x1670073,  0x16a0076,  0x1690075,  0x16b0077,  0x16c0078,  0x16d0079,  0x171007d,  0x173007f,  0x1760082,  0x1750081,  0x17f008b,  0x181008d,  0x183008f,  0x1840090,  0x19900a5,  0x19a00a6,  0x19c00a8,  0x1a000ac,  0x1a100ad,  0x1a300af,  0x1a700b3,  0x1aa00b6,  0x1a500b1,  0x1a900b5,  0x1ab00b7,  0x1ae00ba,  0x1b100bc,  0x1b500c0,  0x1b400bf,  0x1d000db,  0x1d300de,  0x1d200dd,  0x1ba00c5,  0x1bc00c7,  0x1d400df,  0x1d500e0,  0x1d600e1,  0x1d700e2,  0x1da00e5,  0x1d900e4,  0x1dc00e6,  0x1dd00e7,  0x1de00e8,  0x1e400ee,  0x1ea00f3,  0x1ed00f6,  0x1ee00f7,  0x1af014d,  0x1e701db,  0x1fa0000,  0x0,  0x0,  0x111001d,  0x10b0017,  0xfd0009,  0xfc0008,  0xff000b,  0xfe000a,  0x112001e,  0x1040010,  0x103000f,  0x1060012,  0x1050011,  0x113001f,  0x1370043,  0x133003f,  0x12c0038,  0x1290035,  0x1280034,  0x12b0037,  0x12a0036,  0x1380044,  0x1560062,  0x15a0066,  0x19500a1,  0x18a0096,  0x17b0087,  0x17a0086,  0x17d0089,  0x17c0088,  0x19600a2,  0x191009d,  0x190009c,  0x193009f,  0x192009e,  0x19400a0,  0x1cf00da,  0x1c300ce,  0x1cb00d6,  0x1ca00d5,  0x1cd00d8,  0x1cc00d7,  0x1ce00d9,  0x1df00e9,  0x1e800f1,  0x1e600f0,  0x1e200ec,  0x0,  0x0,  0x0,  0x273026b,  0x274026c,  0x276026e,  0x2780270,  0x20e0206,  0x20f0207,  0x2110209,  0x213020b,  0x2830280,  0x2840281,  0x2850282,  0x0,  0x21c0219,  0x21d021a,  0x21e021b,  0x0,  0x292028a,  0x293028b,  0x295028d,  0x297028f,  0x2290221,  0x22a0222,  0x22c0224,  0x22e0226,  0x2aa02a6,  0x2ab02a7,  0x2ac02a8,  0x2ad02a9,  0x23b0237,  0x23c0238,  0x23d0239,  0x23e023a,  0x2b402b1,  0x2b502b2,  0x2b602b3,  0x0,  0x2440241,  0x2450242,  0x2460243,  0x0,  0x2c502c1,  0x2c602c2,  0x2c702c3,  0x2c802c4,  0x24d0000,  0x24e0000,  0x24f0000,  0x2500000,  0x2d602ce,  0x2d702cf,  0x2d902d1,  0x2db02d3,  0x25c0254,  0x25d0255,  0x25f0257,  0x2610259,  0x2670265,  0x27f027e,  0x2880286,  0x29f029e,  0x2b002af,  0x2ba02b9,  0x2cc02ca,  0x0,  0x27a0272,  0x275026d,  0x277026f,  0x2790271,  0x215020d,  0x2100208,  0x212020a,  0x214020c,  0x2990291,  0x294028c,  0x296028e,  0x2980290,  0x2300228,  0x22b0223,  0x22d0225,  0x22f0227,  0x2dd02d5,  0x2d802d0,  0x2da02d2,  0x2dc02d4,  0x263025b,  0x25e0256,  0x2600258,  0x262025a,  0x269026a,  0x27d0266,  0x268,  0x27c027b,  0x2040205,  0x2030202,  0x216,  0x29d,  0x1f10000,  0x29c0287,  0x289,  0x29b029a,  0x2180217,  0x220021f,  0x38a0231,  0x38c038b,  0x2a002a1,  0x2a402a3,  0x0,  0x2a502ae,  0x2340235,  0x2330232,  0x38d0000,  0x38f038e,  0x2bb02bc,  0x2bf02be,  0x2b802b7,  0x2c002c9,  0x24a024b,  0x2490248,  0x1ef0247,  0xf801f0,  0x0,  0x2e002cb,  0x2cd,  0x2df02de,  0x240023f,  0x2530252,  0x1f20264,  0x0,  0x3910390,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x251,  0x0,  0x18006a,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3930392,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x394,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3950000,  0x3960397,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x398,  0x0,  0x3990000,  0x0,  0x39a,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x39b,  0x39c,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x39d0000,  0x0,  0x39e,  0x39f0000,  0x3a00000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3,  0x3a2,  0x0,  0x0,  0x0,  0x0,  0x3a10000,  0x40002,  0x3a403a3,  0x0,  0x3a603a5,  0x0,  0x3a803a7,  0x0,  0x0,  0x0,  0x3aa03a9,  0x0,  0x3ae03ad,  0x0,  0x3b003af,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3b403b3,  0x3b603b5,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3ac03ab,  0x3b203b1,  0x0,  0x0,  0x0,  0x3b803b7,  0x3ba03b9,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3bc0000,  0x3bd,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3bb,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3bf,  0x3c0,  0x3c1,  0x3c2,  0x3c3,  0x3c4,  0x3c5,  0x3c6,  0x3c7,  0x3c8,  0x3c9,  0x3ca,  0x3cb0000,  0x3cc0000,  0x3cd0000,  0x0,  0x0,  0x0,  0x3cf03ce,  0x3d00000,  0x3d1,  0x3d303d2,  0x3d40000,  0x3d5,  0x3d703d6,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3be,  0x0,  0x0,  0x0,  0x0,  0x3d8,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3da,  0x3db,  0x3dc,  0x3dd,  0x3de,  0x3df,  0x3e0,  0x3e1,  0x3e2,  0x3e3,  0x3e4,  0x3e5,  0x3e60000,  0x3e70000,  0x3e80000,  0x0,  0x0,  0x0,  0x3ea03e9,  0x3eb0000,  0x3ec,  0x3ee03ed,  0x3ef0000,  0x3f0,  0x3f203f1,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3d9,  0x3f30000,  0x3f503f4,  0x3f6,  0x0,  0x3f7,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x557069c,  0x6a106aa,  0x43d059d,  0x70f0490,  0x4c8070f,  0x4a306c5,  0x52604c7,  0x62f05e2,  0x67a066d,  0x6b80686,  0x5880571,  0x5ca05b0,  0x6c0065f,  0x44206f5,  0x576048a,  0x66c05b8,  0x4e90700,  0x66805a4,  0x52e068a,  0x67d0640,  0x55a04fb,  0x5c2058e,  0x44a06ba,  0x47e0468,  0x5740546,  0x5e505b7,  0x66a0634,  0x6a8066f,  0x6f906e3,  0x5f006ff,  0x62205ff,  0x6cc0658,  0x6930701,  0x50104bf,  0x63a0613,  0x5f205bd,  0x6e106a0,  0x4e104be,  0x5930572,  0x61f059f,  0x6d40628,  0x63b047d,  0x46a046b,  0x6230606,  0x6d6065e,  0x52f069a,  0x6960571,  0x4d9043f,  0x5c6050f,  0x48405dc,  0x44e05f4,  0x43b0509,  0x54a0584,  0x48d061e,  0x5e704ba,  0x68f0660,  0x6b2057e,  0x5330582,  0x539064e,  0x44405db,  0x469045d,  0x61a0569,  0x6920646,  0x48006c4,  0x4cb0497,  0x54c04ff,  0x5f505a5,  0x6f706d1,  0x7050702,  0x5560478,  0x6b0057a,  0x52004f5,  0x5440527,  0x5b205a1,  0x60405d3,  0x6380625,  0x66206ac,  0x6cd06b4,  0x4790470,  0x5af049c,  0x68f0681,  0x50d04fa,  0x57d0537,  0x5c40612,  0x4af0447,  0x4ee04d9,  0x5c90510,  0x63105d0,  0x6c60636,  0x6e406e0,  0x44b06ea,  0x6c20603,  0x51606dc,  0x4540443,  0x4df04da,  0x571054b,  0x5e105b5,  0x6b70665,  0x552070d,  0x47706d3,  0x5640561,  0x599058c,  0x5da05cc,  0x61d05ef,  0x45e06ed,  0x6d7052a,  0x4e70450,  0x6ad0594,  0x5180507,  0x5c60566,  0x47106d9,  0x4e30494,  0x55d054f,  0x586056c,  0x5dd05cb,  0x682062d,  0x6c30685,  0x48506de,  0x495059a,  0x5d405b6,  0x6da0669,  0x70306fb,  0x5920563,  0x60c0641,  0x615060e,  0x5ad05c1,  0x4450699,  0x4720652,  0x4f6046f,  0x6180530,  0x58904d6,  0x6af0555,  0x6d5067e,  0x4fd068c,  0x4a80456,  0x0,  0x4b9,  0x551,  0x46c0000,  0x5e305c3,  0x5fd05f6,  0x60205fe,  0x61606e5,  0x632,  0x66b,  0x695,  0x6b50000,  0x6bd,  0x0,  0x6f006ef,  0x6fe06f1,  0x6db06bb,  0x455044c,  0x47c0458,  0x487047f,  0x4ab04a5,  0x4b804ad,  0x4e204bb,  0x51304e4,  0x51f051d,  0x5470525,  0x553054d,  0x58f056a,  0x5a00596,  0x5ba05b3,  0x5f105cd,  0x5f905f7,  0x5fa05f8,  0x5fc05fb,  0x6010600,  0x60a0607,  0x625060f,  0x6290627,  0x635062c,  0x6470642,  0x6610647,  0x68d0688,  0x6980697,  0x6a306a2,  0x6b506b3,  0x6e806df,  0x51106ec,  0x645074d,  0x0,  0x467043c,  0x449045c,  0x4600457,  0x481047b,  0x4a004a5,  0x4aa04a4,  0x4bd04b9,  0x4c904c6,  0x4d404d0,  0x4fe04fc,  0x50a0505,  0x51b0515,  0x51f0517,  0x525051c,  0x53b052b,  0x540053e,  0x5510548,  0x55b055a,  0x57b055f,  0x58c057e,  0x59c059e,  0x5a705a0,  0x5ed05b3,  0x5c005bb,  0x5d105c3,  0x5d805d6,  0x5e005df,  0x5e405e3,  0x5eb05e6,  0x5f305ea,  0x60f060b,  0x6200614,  0x62b0625,  0x6530635,  0x678065d,  0x68b0689,  0x690068d,  0x6910695,  0x6960697,  0x6980694,  0x6a3069b,  0x6b606ae,  0x6c806c1,  0x6df06d8,  0x6e606e5,  0x6e906e8,  0x6f806ec,  0x738070f,  0x7410737,  0x417040d,  0x75b0418,  0x77c0764,  0x70e070c,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3230000,  0x3380000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3360335,  0x3340333,  0x3180317,  0x31a0319,  0x31d031c,  0x320031e,  0x321,  0x3240322,  0x3260325,  0x328,  0x329,  0x32b032a,  0x32c0000,  0x32d,  0x330032f,  0x3320331,  0x31f0337,  0x327031b,  0x32e,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x710,  0x711,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7120000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7140713,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7160715,  0x7180717,  0x71a0719,  0x71b,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x71c0000,  0x71d071f,  0x71e0720,  0x721,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x43e0440,  0x7220441,  0x44c0448,  0x44f044d,  0x4520451,  0x4530455,  0x72603f8,  0x4590458,  0x45f045a,  0x3f90723,  0x461045b,  0x4640725,  0x4460465,  0x4670466,  0x46d0784,  0x3fb046e,  0x4740473,  0x4760475,  0x47b03fc,  0x47f047c,  0x4820481,  0x4840483,  0x4870486,  0x4890488,  0x48c048b,  0x48c048c,  0x5aa0729,  0x48f048e,  0x491072a,  0x4930492,  0x496049a,  0x4990498,  0x49d049b,  0x49f049e,  0x4a204a1,  0x4a404a2,  0x4a704a6,  0x4b004a9,  0x4b104ab,  0x4ae04ac,  0x4c0046f,  0x4b404b3,  0x4b204b5,  0x4b604b7,  0x72b04bc,  0x4c204c1,  0x4c404c3,  0x4ca04c5,  0x72d072c,  0x4ce04cd,  0x4cc04cf,  0x3fd04d1,  0x4d303fe,  0x4d504d5,  0x4d7072e,  0x4d904d8,  0x72f04db,  0x4dd04dc,  0x4de0503,  0x4e003ff,  0x4e604e4,  0x73104e5,  0x73204e8,  0x4ea04eb,  0x4ef04ec,  0x40004f0,  0x4f204f1,  0x4f404f3,  0x7330401,  0x4f70402,  0x4f904f8,  0x78e04fb,  0x7350500,  0x6430735,  0x5020502,  0x73c0403,  0x5040766,  0x4040506,  0x50b0508,  0x50e050c,  0x4060512,  0x5130405,  0x5140736,  0x51a0519,  0x51a051b,  0x51f051e,  0x5210523,  0x5240522,  0x5260525,  0x5290528,  0x52d052c,  0x5350531,  0x5340739,  0x5360532,  0x53d0538,  0x53f073a,  0x53a053c,  0x5410407,  0x5450543,  0x4080542,  0x5490547,  0x54e073b,  0x5500558,  0x553040b,  0x409040a,  0x4630462,  0x5540559,  0x424063c,  0x55b055a,  0x560055c,  0x740055e,  0x565040c,  0x5680562,  0x742056a,  0x567056b,  0x40d056d,  0x56f056e,  0x5730570,  0x5750743,  0x577040e,  0x5780744,  0x579040f,  0x57e057c,  0x745057f,  0x7460730,  0x7470580,  0x5850583,  0x5870581,  0x58f058b,  0x58d058c,  0x5910590,  0x58a0748,  0x5980597,  0x59c0410,  0x749059b,  0x5a20595,  0x74b074a,  0x5a805a3,  0x5a605a7,  0x5a90411,  0x5ab05ac,  0x72405ae,  0x74c05b1,  0x74e05b4,  0x5bb05b9,  0x74f05bc,  0x5bf05be,  0x7510750,  0x5c705c5,  0x5c80412,  0x4130413,  0x5cf05ce,  0x5d205d1,  0x41405d5,  0x75205d7,  0x75305d9,  0x73405dc,  0x75405de,  0x7560755,  0x4160415,  0x75805e6,  0x7590757,  0x5e8075a,  0x5e905e9,  0x41805eb,  0x41905ec,  0x75c041a,  0x5f005ee,  0x41b05f3,  0x5fb075d,  0x75f075e,  0x6050602,  0x607041c,  0x6090608,  0x7610760,  0x60d0761,  0x762041d,  0x6110610,  0x763041e,  0x41f0617,  0x619061b,  0x765061c,  0x4200621,  0x6260624,  0x421062a,  0x7680767,  0x7690422,  0x76a062e,  0x6330630,  0x76b0635,  0x637076c,  0x639076d,  0x423073d,  0x63e063d,  0x63f0425,  0x76e04d2,  0x73e076f,  0x643073f,  0x6b10644,  0x6490426,  0x64a0648,  0x64b047a,  0x64d064c,  0x770064f,  0x650064e,  0x6560655,  0x6570651,  0x661065c,  0x6590654,  0x65b065a,  0x7730771,  0x4270772,  0x6640663,  0x7770666,  0x7740667,  0x4290428,  0x7760775,  0x66e042a,  0x670066f,  0x6730671,  0x6750672,  0x6780674,  0x6770676,  0x42b0679,  0x67c067b,  0x67f042c,  0x7780680,  0x6840683,  0x687042d,  0x77903fa,  0x42e077a,  0x68e042f,  0x69b0694,  0x77b069d,  0x69f069e,  0x6a506a4,  0x727077d,  0x6a606a7,  0x72806a9,  0x6ae06ab,  0x77f077e,  0x6bc06b9,  0x78006be,  0x6c706bf,  0x6cb06ca,  0x6ce06c9,  0x78106cf,  0x43006d0,  0x78206d2,  0x6dd0431,  0x6e204ed,  0x7850783,  0x4330432,  0x78606e7,  0x7870434,  0x6e906e9,  0x78806eb,  0x43506ee,  0x6f306f2,  0x6f606f4,  0x7890436,  0x6fa06f8,  0x43706fc,  0x6fd0438,  0x439078a,  0x78c078b,  0x704078d,  0x706043a,  0x7080707,  0x70a0709,  0x78f070b,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);
immutable decompCanonTable = ["", ";", "≮", "≠", "≯", "À", "Á", "Â", "Ầ", "Ấ", "Ẫ", "Ẩ", "Ã", "Ā", "Ă", "Ằ", "Ắ", "Ẵ", "Ẳ", "Ȧ", "Ǡ", "Ä", "Ǟ", "Ả", "Å", "Ǻ", "Ǎ", "Ȁ", "Ȃ", "Ạ", "Ậ", "Ặ", "Ḁ", "Ą", "Ḃ", "Ḅ", "Ḇ", "Ć", "Ĉ", "Ċ", "Č", "Ç", "Ḉ", "Ḋ", "Ď", "Ḍ", "Ḑ", "Ḓ", "Ḏ", "È", "É", "Ê", "Ề", "Ế", "Ễ", "Ể", "Ẽ", "Ē", "Ḕ", "Ḗ", "Ĕ", "Ė", "Ë", "Ẻ", "Ě", "Ȅ", "Ȇ", "Ẹ", "Ệ", "Ȩ", "Ḝ", "Ę", "Ḙ", "Ḛ", "Ḟ", "Ǵ", "Ĝ", "Ḡ", "Ğ", "Ġ", "Ǧ", "Ģ", "Ĥ", "Ḣ", "Ḧ", "Ȟ", "Ḥ", "Ḩ", "Ḫ", "Ì", "Í", "Î", "Ĩ", "Ī", "Ĭ", "İ", "Ï", "Ḯ", "Ỉ", "Ǐ", "Ȉ", "Ȋ", "Ị", "Į", "Ḭ", "Ĵ", "K", "Ḱ", "Ǩ", "Ḳ", "Ķ", "Ḵ", "Ĺ", "Ľ", "Ḷ", "Ḹ", "Ļ", "Ḽ", "Ḻ", "Ḿ", "Ṁ", "Ṃ", "Ǹ", "Ń", "Ñ", "Ṅ", "Ň", "Ṇ", "Ņ", "Ṋ", "Ṉ", "Ò", "Ó", "Ô", "Ồ", "Ố", "Ỗ", "Ổ", "Õ", "Ṍ", "Ȭ", "Ṏ", "Ō", "Ṑ", "Ṓ", "Ŏ", "Ȯ", "Ȱ", "Ö", "Ȫ", "Ỏ", "Ő", "Ǒ", "Ȍ", "Ȏ", "Ơ", "Ờ", "Ớ", "Ỡ", "Ở", "Ợ", "Ọ", "Ộ", "Ǫ", "Ǭ", "Ṕ", "Ṗ", "Ŕ", "Ṙ", "Ř", "Ȑ", "Ȓ", "Ṛ", "Ṝ", "Ŗ", "Ṟ", "Ś", "Ṥ", "Ŝ", "Ṡ", "Š", "Ṧ", "Ṣ", "Ṩ", "Ș", "Ş", "Ṫ", "Ť", "Ṭ", "Ț", "Ţ", "Ṱ", "Ṯ", "Ù", "Ú", "Û", "Ũ", "Ṹ", "Ū", "Ṻ", "Ŭ", "Ü", "Ǜ", "Ǘ", "Ǖ", "Ǚ", "Ủ", "Ů", "Ű", "Ǔ", "Ȕ", "Ȗ", "Ư", "Ừ", "Ứ", "Ữ", "Ử", "Ự", "Ụ", "Ṳ", "Ų", "Ṷ", "Ṵ", "Ṽ", "Ṿ", "Ẁ", "Ẃ", "Ŵ", "Ẇ", "Ẅ", "Ẉ", "Ẋ", "Ẍ", "Ỳ", "Ý", "Ŷ", "Ỹ", "Ȳ", "Ẏ", "Ÿ", "Ỷ", "Ỵ", "Ź", "Ẑ", "Ż", "Ž", "Ẓ", "Ẕ", "`", "à", "á", "â", "ầ", "ấ", "ẫ", "ẩ", "ã", "ā", "ă", "ằ", "ắ", "ẵ", "ẳ", "ȧ", "ǡ", "ä", "ǟ", "ả", "å", "ǻ", "ǎ", "ȁ", "ȃ", "ạ", "ậ", "ặ", "ḁ", "ą", "ḃ", "ḅ", "ḇ", "ć", "ĉ", "ċ", "č", "ç", "ḉ", "ḋ", "ď", "ḍ", "ḑ", "ḓ", "ḏ", "è", "é", "ê", "ề", "ế", "ễ", "ể", "ẽ", "ē", "ḕ", "ḗ", "ĕ", "ė", "ë", "ẻ", "ě", "ȅ", "ȇ", "ẹ", "ệ", "ȩ", "ḝ", "ę", "ḙ", "ḛ", "ḟ", "ǵ", "ĝ", "ḡ", "ğ", "ġ", "ǧ", "ģ", "ĥ", "ḣ", "ḧ", "ȟ", "ḥ", "ḩ", "ḫ", "ẖ", "ì", "í", "î", "ĩ", "ī", "ĭ", "ï", "ḯ", "ỉ", "ǐ", "ȉ", "ȋ", "ị", "į", "ḭ", "ĵ", "ǰ", "ḱ", "ǩ", "ḳ", "ķ", "ḵ", "ĺ", "ľ", "ḷ", "ḹ", "ļ", "ḽ", "ḻ", "ḿ", "ṁ", "ṃ", "ǹ", "ń", "ñ", "ṅ", "ň", "ṇ", "ņ", "ṋ", "ṉ", "ò", "ó", "ô", "ồ", "ố", "ỗ", "ổ", "õ", "ṍ", "ȭ", "ṏ", "ō", "ṑ", "ṓ", "ŏ", "ȯ", "ȱ", "ö", "ȫ", "ỏ", "ő", "ǒ", "ȍ", "ȏ", "ơ", "ờ", "ớ", "ỡ", "ở", "ợ", "ọ", "ộ", "ǫ", "ǭ", "ṕ", "ṗ", "ŕ", "ṙ", "ř", "ȑ", "ȓ", "ṛ", "ṝ", "ŗ", "ṟ", "ś", "ṥ", "ŝ", "ṡ", "š", "ṧ", "ṣ", "ṩ", "ș", "ş", "ṫ", "ẗ", "ť", "ṭ", "ț", "ţ", "ṱ", "ṯ", "ù", "ú", "û", "ũ", "ṹ", "ū", "ṻ", "ŭ", "ü", "ǜ", "ǘ", "ǖ", "ǚ", "ủ", "ů", "ű", "ǔ", "ȕ", "ȗ", "ư", "ừ", "ứ", "ữ", "ử", "ự", "ụ", "ṳ", "ų", "ṷ", "ṵ", "ṽ", "ṿ", "ẁ", "ẃ", "ŵ", "ẇ", "ẅ", "ẘ", "ẉ", "ẋ", "ẍ", "ỳ", "ý", "ŷ", "ỹ", "ȳ", "ẏ", "ÿ", "ỷ", "ẙ", "ỵ", "ź", "ẑ", "ż", "ž", "ẓ", "ẕ", "῭", "΅", "῁", "´", "·", "Ǽ", "Ǣ", "Ǿ", "ǽ", "ǣ", "ǿ", "ẛ", "Ǯ", "ǯ", "ʹ", "̀", "́", "̈́", "̓", "Ὰ", "Ά", "Ᾱ", "Ᾰ", "Ἀ", "Ἂ", "ᾊ", "Ἄ", "ᾌ", "Ἆ", "ᾎ", "ᾈ", "Ἁ", "Ἃ", "ᾋ", "Ἅ", "ᾍ", "Ἇ", "ᾏ", "ᾉ", "ᾼ", "Ὲ", "Έ", "Ἐ", "Ἒ", "Ἔ", "Ἑ", "Ἓ", "Ἕ", "Ὴ", "Ή", "Ἠ", "Ἢ", "ᾚ", "Ἤ", "ᾜ", "Ἦ", "ᾞ", "ᾘ", "Ἡ", "Ἣ", "ᾛ", "Ἥ", "ᾝ", "Ἧ", "ᾟ", "ᾙ", "ῌ", "Ὶ", "Ί", "Ῑ", "Ῐ", "Ϊ", "Ἰ", "Ἲ", "Ἴ", "Ἶ", "Ἱ", "Ἳ", "Ἵ", "Ἷ", "Ὸ", "Ό", "Ὀ", "Ὂ", "Ὄ", "Ὁ", "Ὃ", "Ὅ", "Ῥ", "Ὺ", "Ύ", "Ῡ", "Ῠ", "Ϋ", "Ὑ", "Ὓ", "Ὕ", "Ὗ", "Ω", "Ὼ", "Ώ", "Ὠ", "Ὢ", "ᾪ", "Ὤ", "ᾬ", "Ὦ", "ᾮ", "ᾨ", "Ὡ", "Ὣ", "ᾫ", "Ὥ", "ᾭ", "Ὧ", "ᾯ", "ᾩ", "ῼ", "ὰ", "ᾲ", "ά", "ᾴ", "ᾱ", "ᾰ", "ἀ", "ἂ", "ᾂ", "ἄ", "ᾄ", "ἆ", "ᾆ", "ᾀ", "ἁ", "ἃ", "ᾃ", "ἅ", "ᾅ", "ἇ", "ᾇ", "ᾁ", "ᾶ", "ᾷ", "ᾳ", "ὲ", "έ", "ἐ", "ἒ", "ἔ", "ἑ", "ἓ", "ἕ", "ὴ", "ῂ", "ή", "ῄ", "ἠ", "ἢ", "ᾒ", "ἤ", "ᾔ", "ἦ", "ᾖ", "ᾐ", "ἡ", "ἣ", "ᾓ", "ἥ", "ᾕ", "ἧ", "ᾗ", "ᾑ", "ῆ", "ῇ", "ῃ", "ι", "ὶ", "ί", "ῑ", "ῐ", "ϊ", "ῒ", "ΐ", "ῗ", "ἰ", "ἲ", "ἴ", "ἶ", "ἱ", "ἳ", "ἵ", "ἷ", "ῖ", "ὸ", "ό", "ὀ", "ὂ", "ὄ", "ὁ", "ὃ", "ὅ", "ῤ", "ῥ", "ὺ", "ύ", "ῡ", "ῠ", "ϋ", "ῢ", "ΰ", "ῧ", "ὐ", "ὒ", "ὔ", "ὖ", "ὑ", "ὓ", "ὕ", "ὗ", "ῦ", "ὼ", "ῲ", "ώ", "ῴ", "ὠ", "ὢ", "ᾢ", "ὤ", "ᾤ", "ὦ", "ᾦ", "ᾠ", "ὡ", "ὣ", "ᾣ", "ὥ", "ᾥ", "ὧ", "ᾧ", "ᾡ", "ῶ", "ῷ", "ῳ", "ϓ", "ϔ", "Ї", "Ӑ", "Ӓ", "Ѓ", "Ѐ", "Ӗ", "Ё", "Ӂ", "Ӝ", "Ӟ", "Ѝ", "Ӣ", "Й", "Ӥ", "Ќ", "Ӧ", "Ӯ", "Ў", "Ӱ", "Ӳ", "Ӵ", "Ӹ", "Ӭ", "ӑ", "ӓ", "ѓ", "ѐ", "ӗ", "ё", "ӂ", "ӝ", "ӟ", "ѝ", "ӣ", "й", "ӥ", "ќ", "ӧ", "ӯ", "ў", "ӱ", "ӳ", "ӵ", "ӹ", "ӭ", "ї", "Ѷ", "ѷ", "Ӛ", "ӛ", "Ӫ", "ӫ", "אַ", "אָ", "אּ", "בּ", "בֿ", "גּ", "דּ", "הּ", "וֹ", "וּ", "זּ", "טּ", "יִ", "יּ", "ךּ", "כּ", "כֿ", "לּ", "מּ", "נּ", "סּ", "ףּ", "פּ", "פֿ", "צּ", "קּ", "רּ", "שּ", "שּׁ", "שּׂ", "שׁ", "שׂ", "תּ", "ײַ", "آ", "أ", "إ", "ؤ", "ئ", "ۂ", "ۓ", "ۀ", "क़", "ख़", "ग़", "ज़", "ड़", "ढ़", "ऩ", "फ़", "य़", "ऱ", "ऴ", "ড়", "ঢ়", "য়", "ো", "ৌ", "ਖ਼", "ਗ਼", "ਜ਼", "ਫ਼", "ਲ਼", "ਸ਼", "ଡ଼", "ଢ଼", "ୋ", "ୈ", "ୌ", "ஔ", "ொ", "ௌ", "ோ", "ై", "ೀ", "ೊ", "ೋ", "ೇ", "ೈ", "ൊ", "ൌ", "ോ", "ේ", "ො", "ෝ", "ෞ", "ཀྵ", "གྷ", "ཌྷ", "དྷ", "བྷ", "ཛྷ", "ཱི", "ཱུ", "ཱྀ", "ྐྵ", "ྒྷ", "ྜྷ", "ྡྷ", "ྦྷ", "ྫྷ", "ྲྀ", "ླྀ", "ဦ", "ᬆ", "ᬈ", "ᬊ", "ᬌ", "ᬎ", "ᬒ", "ᬻ", "ᬽ", "ᭀ", "ᭁ", "ᭃ", "῍", "῎", "῏", "῝", "῞", "῟", " ", " ", "↚", "↛", "↮", "⇍", "⇏", "⇎", "∄", "∉", "∌", "∤", "∦", "≁", "≄", "≇", "≉", "≭", "≢", "≰", "≱", "≴", "≵", "≸", "≹", "⊀", "⊁", "⋠", "⋡", "⊄", "⊅", "⊈", "⊉", "⋢", "⋣", "⊬", "⊭", "⊮", "⊯", "⋪", "⋫", "⋬", "⋭", "⫝̸", "〈", "〉", "ゔ", "が", "ぎ", "ぐ", "げ", "ご", "ざ", "じ", "ず", "ぜ", "ぞ", "だ", "ぢ", "づ", "で", "ど", "ば", "ぱ", "び", "ぴ", "ぶ", "ぷ", "べ", "ぺ", "ぼ", "ぽ", "ゞ", "ヴ", "ガ", "ギ", "グ", "ゲ", "ゴ", "ザ", "ジ", "ズ", "ゼ", "ゾ", "ダ", "ヂ", "ヅ", "デ", "ド", "バ", "パ", "ビ", "ピ", "ブ", "プ", "ベ", "ペ", "ボ", "ポ", "ヷ", "ヸ", "ヹ", "ヺ", "ヾ", "㒞", "㒹", "㒻", "㓟", "㔕", "㛮", "㛼", "㞁", "㠯", "㡢", "㡼", "㣇", "㣣", "㤜", "㤺", "㨮", "㩬", "㫤", "㬈", "㬙", "㭉", "㮝", "㰘", "㱎", "㴳", "㶖", "㺬", "㺸", "㼛", "㿼", "䀈", "䀘", "䀹", "䁆", "䂖", "䃣", "䄯", "䈂", "䈧", "䊠", "䌁", "䌴", "䍙", "䏕", "䏙", "䐋", "䑫", "䔫", "䕝", "䕡", "䕫", "䗗", "䗹", "䘵", "䚾", "䛇", "䦕", "䧦", "䩮", "䩶", "䪲", "䬳", "䯎", "䳎", "䳭", "䳸", "䵖", "不", "並", "串", "丸", "丹", "丽", "乁", "亂", "了", "亮", "什", "仌", "令", "你", "侀", "來", "例", "侮", "侻", "便", "倂", "倫", "偺", "備", "像", "僚", "僧", "兀", "充", "免", "兔", "兤", "內", "全", "兩", "六", "具", "冀", "再", "冒", "冕", "冗", "冤", "冬", "况", "冷", "凉", "凌", "凜", "凞", "凵", "刃", "切", "列", "利", "刺", "刻", "剆", "割", "剷", "劉", "力", "劣", "劳", "勇", "勉", "勒", "勞", "勤", "勵", "勺", "包", "匆", "北", "匿", "卉", "卑", "博", "即", "卵", "卽", "卿", "參", "及", "叟", "句", "叫", "叱", "吆", "吏", "吝", "吸", "呂", "呈", "周", "咞", "咢", "咽", "哶", "唐", "啓", "啕", "啣", "善", "喇", "喙", "喝", "喫", "喳", "嗀", "嗂", "嗢", "嘆", "噑", "器", "噴", "囹", "圖", "圗", "型", "城", "埴", "堍", "報", "堲", "塀", "塚", "塞", "墨", "墬", "墳", "壘", "壟", "壮", "売", "壷", "夆", "多", "夢", "奄", "奈", "契", "奔", "奢", "女", "姘", "姬", "娛", "娧", "婢", "婦", "媵", "嬈", "嬨", "嬾", "宅", "寃", "寘", "寧", "寮", "寳", "寿", "将", "尢", "尿", "屠", "屢", "層", "履", "屮", "岍", "峀", "崙", "嵃", "嵐", "嵫", "嵮", "嵼", "嶲", "嶺", "巡", "巢", "巽", "帨", "帽", "幩", "年", "度", "庰", "庳", "庶", "廉", "廊", "廒", "廓", "廙", "廬", "廾", "弄", "弢", "当", "形", "彩", "彫", "律", "徚", "復", "徭", "忍", "志", "念", "忹", "怒", "怜", "恵", "悁", "悔", "惇", "惘", "惡", "愈", "慄", "慈", "慌", "慎", "慠", "慨", "慺", "憎", "憐", "憤", "憯", "憲", "懞", "懲", "懶", "戀", "成", "戛", "戮", "戴", "扝", "抱", "拉", "拏", "拓", "拔", "拼", "拾", "挽", "捐", "捨", "捻", "掃", "掠", "掩", "揄", "揅", "揤", "搜", "搢", "摒", "摩", "摷", "摾", "撚", "撝", "擄", "敏", "敖", "敬", "數", "料", "旅", "既", "旣", "易", "晉", "晴", "暈", "暑", "暜", "暴", "曆", "更", "書", "最", "朗", "望", "朡", "李", "杓", "杖", "杞", "杻", "枅", "林", "柳", "柺", "栗", "栟", "桒", "梁", "梅", "梎", "梨", "椔", "楂", "榣", "槪", "樂", "樓", "檨", "櫓", "櫛", "欄", "次", "歔", "歲", "歷", "歹", "殟", "殮", "殺", "殻", "汎", "汧", "沈", "沿", "泌", "泍", "泥", "洖", "洛", "洞", "洴", "派", "流", "浩", "浪", "海", "浸", "涅", "淋", "淚", "淪", "淹", "渚", "港", "湮", "溜", "溺", "滇", "滋", "滑", "滛", "漏", "漢", "漣", "潮", "濆", "濫", "濾", "瀛", "瀞", "瀹", "灊", "灰", "灷", "災", "炙", "炭", "烈", "烙", "煅", "煉", "煮", "熜", "燎", "燐", "爐", "爛", "爨", "爫", "爵", "牐", "牢", "犀", "犕", "犯", "狀", "狼", "猪", "獵", "獺", "率", "王", "玥", "玲", "珞", "理", "琉", "琢", "瑇", "瑜", "瑩", "瑱", "璅", "璉", "璘", "瓊", "甆", "甤", "画", "甾", "留", "略", "異", "痢", "瘐", "瘝", "瘟", "療", "癩", "益", "盛", "盧", "直", "省", "眞", "真", "着", "睊", "瞋", "瞧", "硎", "硫", "碌", "碑", "磊", "磌", "磻", "礪", "礼", "社", "祈", "祉", "祐", "祖", "祝", "神", "祥", "祿", "禍", "禎", "福", "禮", "秊", "秫", "稜", "穀", "穊", "穏", "突", "窱", "立", "竮", "笠", "節", "篆", "築", "簾", "籠", "类", "粒", "精", "糒", "糖", "糣", "糧", "糨", "紀", "紐", "索", "累", "絛", "絣", "綠", "綾", "緇", "練", "縂", "縉", "縷", "繁", "繅", "缾", "署", "罹", "罺", "羅", "羕", "羚", "羽", "翺", "老", "者", "聆", "聠", "聯", "聰", "聾", "肋", "肭", "育", "脃", "脾", "臘", "臨", "臭", "舁", "舄", "舘", "良", "艹", "芋", "芑", "芝", "花", "芳", "芽", "若", "苦", "茝", "茣", "茶", "荒", "荓", "荣", "莭", "莽", "菉", "菊", "菌", "菜", "菧", "華", "菱", "落", "葉", "著", "蓮", "蓱", "蓳", "蓼", "蔖", "蕤", "藍", "藺", "蘆", "蘒", "蘭", "蘿", "虐", "虜", "虧", "虩", "蚈", "蚩", "蛢", "蜎", "蜨", "蝫", "蝹", "螆", "螺", "蟡", "蠁", "蠟", "行", "衠", "衣", "裂", "裏", "裗", "裞", "裡", "裸", "裺", "褐", "襁", "襤", "覆", "見", "視", "誠", "說", "調", "請", "諒", "論", "諭", "諸", "諾", "謁", "謹", "識", "讀", "變", "豈", "豕", "貫", "賁", "賂", "賈", "賓", "贈", "贛", "起", "趼", "跋", "路", "跰", "車", "軔", "輦", "輪", "輸", "輻", "轢", "辞", "辰", "辶", "連", "逸", "遲", "遼", "邏", "邔", "郎", "郞", "郱", "都", "鄑", "鄛", "酪", "醙", "醴", "里", "量", "金", "鈴", "鈸", "鉶", "鉼", "鋗", "鋘", "錄", "鍊", "鏹", "鐕", "開", "閭", "閷", "阮", "陋", "降", "陵", "陸", "陼", "隆", "隣", "隷", "隸", "雃", "離", "難", "零", "雷", "霣", "露", "靈", "靖", "韛", "韠", "響", "頋", "領", "頩", "頻", "類", "飢", "飯", "飼", "館", "餩", "馧", "駂", "駱", "駾", "驪", "鬒", "魯", "鱀", "鱗", "鳽", "鵧", "鶴", "鷺", "鸞", "鹿", "麗", "麟", "麻", "黎", "黹", "黾", "鼅", "鼏", "鼖", "鼻", "齃", "龍", "龎", "龜", "\U00011099𑂺", "\U0001109B𑂺", "\U000110A5𑂺", "\U00011131\U00011127", "\U00011132\U00011127", "𝅗𝅥", "𝅘𝅥", "𝅘𝅥𝅮", "𝅘𝅥𝅯", "𝅘𝅥𝅰", "𝅘𝅥𝅱", "𝅘𝅥𝅲", "𝆹𝅥", "𝆹𝅥𝅮", "𝆹𝅥𝅯", "𝆺𝅥", "𝆺𝅥𝅮", "𝆺𝅥𝅯", "𠄢", "𠔜", "𠔥", "𠕋", "𠘺", "𠠄", "𠣞", "𠨬", "𠭣", "𡓤", "𡚨", "𡛪", "𡧈", "𡬘", "𡴋", "𡷤", "𡷦", "𢆃", "𢆟", "𢌱", "𢛔", "𢡄", "𢡊", "𢬌", "𢯱", "𣀊", "𣊸", "𣍟", "𣎓", "𣎜", "𣏃", "𣏕", "𣑭", "𣚣", "𣢧", "𣪍", "𣫺", "𣲼", "𣴞", "𣻑", "𣽞", "𣾎", "𤉣", "𤋮", "𤎫", "𤘈", "𤜵", "𤠔", "𤰶", "𤲒", "𤾡", "𤾸", "𥁄", "𥃲", "𥃳", "𥄙", "𥄳", "𥉉", "𥐝", "𥘦", "𥚚", "𥛅", "𥥼", "𥪧", "𥮫", "𥲀", "𥳐", "𥾆", "𦇚", "𦈨", "𦉇", "𦋙", "𦌾", "𦓚", "𦔣", "𦖨", "𦞧", "𦞵", "𦬼", "𦰶", "𦳕", "𦵫", "𦼬", "𦾱", "𧃒", "𧏊", "𧙧", "𧢮", "𧥦", "𧲨", "𧻓", "𧼯", "𨗒", "𨗭", "𨜮", "𨯺", "𨵷", "𩅅", "𩇟", "𩈚", "𩐊", "𩒖", "𩖶", "𩬰", "𪃎", "𪄅", "𪈎", "𪊑", "𪎒", "𪘀"];
immutable decompCompatTable = ["", " ", " ́", " ̃", " ̄", " ̅", " ̆", " ̇", " ̈", " ̈̀", " ̈́", " ̈͂", " ̊", " ̋", " ̓", " ̓̀", " ̓́", " ̓͂", " ̔", " ̔̀", " ̔́", " ̔͂", " ̧", " ̨", " ̳", " ͂", " ͅ", " ً", " ٌ", " ٌّ", " ٍ", " ٍّ", " َ", " َّ", " ُ", " ُّ", " ِ", " ِّ", " ّ", " ّٰ", " ْ", " ゙", " ゚", "!", "!!", "!?", "\"", "#", "$", "%", "&", "'", "(", "(1)", "(10)", "(11)", "(12)", "(13)", "(14)", "(15)", "(16)", "(17)", "(18)", "(19)", "(2)", "(20)", "(3)", "(4)", "(5)", "(6)", "(7)", "(8)", "(9)", "(A)", "(B)", "(C)", "(D)", "(E)", "(F)", "(G)", "(H)", "(I)", "(J)", "(K)", "(L)", "(M)", "(N)", "(O)", "(P)", "(Q)", "(R)", "(S)", "(T)", "(U)", "(V)", "(W)", "(X)", "(Y)", "(Z)", "(a)", "(b)", "(c)", "(d)", "(e)", "(f)", "(g)", "(h)", "(i)", "(j)", "(k)", "(l)", "(m)", "(n)", "(o)", "(p)", "(q)", "(r)", "(s)", "(t)", "(u)", "(v)", "(w)", "(x)", "(y)", "(z)", "(ᄀ)", "(가)", "(ᄂ)", "(나)", "(ᄃ)", "(다)", "(ᄅ)", "(라)", "(ᄆ)", "(마)", "(ᄇ)", "(바)", "(ᄉ)", "(사)", "(ᄋ)", "(아)", "(오전)", "(오후)", "(ᄌ)", "(자)", "(주)", "(ᄎ)", "(차)", "(ᄏ)", "(카)", "(ᄐ)", "(타)", "(ᄑ)", "(파)", "(ᄒ)", "(하)", "(一)", "(七)", "(三)", "(九)", "(二)", "(五)", "(代)", "(企)", "(休)", "(八)", "(六)", "(労)", "(十)", "(協)", "(名)", "(呼)", "(四)", "(土)", "(学)", "(日)", "(月)", "(有)", "(木)", "(株)", "(水)", "(火)", "(特)", "(監)", "(社)", "(祝)", "(祭)", "(自)", "(至)", "(財)", "(資)", "(金)", ")", "*", "+", ",", "-", ".", "..", "...", "/", "0", "0,", "0.", "0⁄3", "0点", "1", "1,", "1.", "10", "10.", "10日", "10月", "10点", "11", "11.", "11日", "11月", "11点", "12", "12.", "12日", "12月", "12点", "13", "13.", "13日", "13点", "14", "14.", "14日", "14点", "15", "15.", "15日", "15点", "16", "16.", "16日", "16点", "17", "17.", "17日", "17点", "18", "18.", "18日", "18点", "19", "19.", "19日", "19点", "1⁄", "1⁄10", "1⁄2", "1⁄3", "1⁄4", "1⁄5", "1⁄6", "1⁄7", "1⁄8", "1⁄9", "1日", "1月", "1点", "2", "2,", "2.", "20", "20.", "20日", "20点", "21", "21日", "21点", "22", "22日", "22点", "23", "23日", "23点", "24", "24日", "24点", "25", "25日", "26", "26日", "27", "27日", "28", "28日", "29", "29日", "2⁄3", "2⁄5", "2日", "2月", "2点", "3", "3,", "3.", "30", "30日", "31", "31日", "32", "33", "34", "35", "36", "37", "38", "39", "3⁄4", "3⁄5", "3⁄8", "3日", "3月", "3点", "4", "4,", "4.", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "4⁄5", "4日", "4月", "4点", "5", "5,", "5.", "50", "5⁄6", "5⁄8", "5日", "5月", "5点", "6", "6,", "6.", "6日", "6月", "6点", "7", "7,", "7.", "7⁄8", "7日", "7月", "7点", "8", "8,", "8.", "8日", "8月", "8点", "9", "9,", "9.", "9日", "9月", "9点", ":", "::=", ";", "<", "≮", "=", "==", "===", "≠", ">", "≯", "?", "?!", "??", "@", "A", "AU", "À", "Á", "Â", "Ầ", "Ấ", "Ẫ", "Ẩ", "Ã", "Ā", "Ă", "Ằ", "Ắ", "Ẵ", "Ẳ", "Ȧ", "Ǡ", "Ä", "Ǟ", "Ả", "Å", "Ǻ", "Ǎ", "Ȁ", "Ȃ", "Ạ", "Ậ", "Ặ", "Ḁ", "Ą", "A∕m", "B", "Bq", "Ḃ", "Ḅ", "Ḇ", "C", "CD", "Co.", "Ć", "Ĉ", "Ċ", "Č", "Ç", "Ḉ", "C∕kg", "D", "DJ", "DZ", "DŽ", "Dz", "Dž", "Ḋ", "Ď", "Ḍ", "Ḑ", "Ḓ", "Ḏ", "E", "È", "É", "Ê", "Ề", "Ế", "Ễ", "Ể", "Ẽ", "Ē", "Ḕ", "Ḗ", "Ĕ", "Ė", "Ë", "Ẻ", "Ě", "Ȅ", "Ȇ", "Ẹ", "Ệ", "Ȩ", "Ḝ", "Ę", "Ḙ", "Ḛ", "F", "FAX", "Ḟ", "G", "GB", "GHz", "GPa", "Gy", "Ǵ", "Ĝ", "Ḡ", "Ğ", "Ġ", "Ǧ", "Ģ", "H", "HP", "HV", "Hg", "Hz", "Ĥ", "Ḣ", "Ḧ", "Ȟ", "Ḥ", "Ḩ", "Ḫ", "I", "II", "III", "IJ", "IU", "IV", "IX", "Ì", "Í", "Î", "Ĩ", "Ī", "Ĭ", "İ", "Ï", "Ḯ", "Ỉ", "Ǐ", "Ȉ", "Ȋ", "Ị", "Į", "Ḭ", "J", "Ĵ", "K", "KB", "KK", "KM", "Ḱ", "Ǩ", "Ḳ", "Ķ", "Ḵ", "L", "LJ", "LTD", "Lj", "L·", "Ĺ", "Ľ", "Ḷ", "Ḹ", "Ļ", "Ḽ", "Ḻ", "M", "MB", "MC", "MD", "MHz", "MPa", "MV", "MW", "Ḿ", "Ṁ", "Ṃ", "MΩ", "N", "NJ", "Nj", "No", "Ǹ", "Ń", "Ñ", "Ṅ", "Ň", "Ṇ", "Ņ", "Ṋ", "Ṉ", "O", "Ò", "Ó", "Ô", "Ồ", "Ố", "Ỗ", "Ổ", "Õ", "Ṍ", "Ȭ", "Ṏ", "Ō", "Ṑ", "Ṓ", "Ŏ", "Ȯ", "Ȱ", "Ö", "Ȫ", "Ỏ", "Ő", "Ǒ", "Ȍ", "Ȏ", "Ơ", "Ờ", "Ớ", "Ỡ", "Ở", "Ợ", "Ọ", "Ộ", "Ǫ", "Ǭ", "P", "PH", "PPM", "PPV", "PR", "PTE", "Pa", "Ṕ", "Ṗ", "Q", "R", "Rs", "Ŕ", "Ṙ", "Ř", "Ȑ", "Ȓ", "Ṛ", "Ṝ", "Ŗ", "Ṟ", "S", "SD", "SM", "SS", "Sv", "Ś", "Ṥ", "Ŝ", "Ṡ", "Š", "Ṧ", "Ṣ", "Ṩ", "Ș", "Ş", "T", "TEL", "THz", "TM", "Ṫ", "Ť", "Ṭ", "Ț", "Ţ", "Ṱ", "Ṯ", "U", "Ù", "Ú", "Û", "Ũ", "Ṹ", "Ū", "Ṻ", "Ŭ", "Ü", "Ǜ", "Ǘ", "Ǖ", "Ǚ", "Ủ", "Ů", "Ű", "Ǔ", "Ȕ", "Ȗ", "Ư", "Ừ", "Ứ", "Ữ", "Ử", "Ự", "Ụ", "Ṳ", "Ų", "Ṷ", "Ṵ", "V", "VI", "VII", "VIII", "Ṽ", "Ṿ", "V∕m", "W", "WC", "WZ", "Wb", "Ẁ", "Ẃ", "Ŵ", "Ẇ", "Ẅ", "Ẉ", "X", "XI", "XII", "Ẋ", "Ẍ", "Y", "Ỳ", "Ý", "Ŷ", "Ỹ", "Ȳ", "Ẏ", "Ÿ", "Ỷ", "Ỵ", "Z", "Ź", "Ẑ", "Ż", "Ž", "Ẓ", "Ẕ", "[", "\\", "]", "^", "_", "`", "a", "a.m.", "a/c", "a/s", "aʾ", "à", "á", "â", "ầ", "ấ", "ẫ", "ẩ", "ã", "ā", "ă", "ằ", "ắ", "ẵ", "ẳ", "ȧ", "ǡ", "ä", "ǟ", "ả", "å", "ǻ", "ǎ", "ȁ", "ȃ", "ạ", "ậ", "ặ", "ḁ", "ą", "b", "bar", "ḃ", "ḅ", "ḇ", "c", "c/o", "c/u", "cal", "cc", "cd", "cm", "cm2", "cm3", "ć", "ĉ", "ċ", "č", "ç", "ḉ", "d", "dB", "da", "dl", "dm", "dm2", "dm3", "dz", "dž", "ḋ", "ď", "ḍ", "ḑ", "ḓ", "ḏ", "e", "eV", "erg", "è", "é", "ê", "ề", "ế", "ễ", "ể", "ẽ", "ē", "ḕ", "ḗ", "ĕ", "ė", "ë", "ẻ", "ě", "ȅ", "ȇ", "ẹ", "ệ", "ȩ", "ḝ", "ę", "ḙ", "ḛ", "f", "ff", "ffi", "ffl", "fi", "fl", "fm", "ḟ", "g", "gal", "ǵ", "ĝ", "ḡ", "ğ", "ġ", "ǧ", "ģ", "h", "hPa", "ha", "ĥ", "ḣ", "ḧ", "ȟ", "ḥ", "ḩ", "ḫ", "ẖ", "i", "ii", "iii", "ij", "in", "iv", "ix", "ì", "í", "î", "ĩ", "ī", "ĭ", "ï", "ḯ", "ỉ", "ǐ", "ȉ", "ȋ", "ị", "į", "ḭ", "j", "ĵ", "ǰ", "k", "kA", "kHz", "kPa", "kV", "kW", "kcal", "kg", "kl", "km", "km2", "km3", "kt", "ḱ", "ǩ", "ḳ", "ķ", "ḵ", "kΩ", "l", "lj", "lm", "ln", "log", "lx", "l·", "ĺ", "ľ", "ḷ", "ḹ", "ļ", "ḽ", "ḻ", "m", "m2", "m3", "mA", "mV", "mW", "mb", "mg", "mil", "ml", "mm", "mm2", "mm3", "mol", "ms", "ḿ", "ṁ", "ṃ", "m∕s", "m∕s2", "n", "nA", "nF", "nV", "nW", "nj", "nm", "ns", "ǹ", "ń", "ñ", "ṅ", "ň", "ṇ", "ņ", "ṋ", "ṉ", "o", "oV", "ò", "ó", "ô", "ồ", "ố", "ỗ", "ổ", "õ", "ṍ", "ȭ", "ṏ", "ō", "ṑ", "ṓ", "ŏ", "ȯ", "ȱ", "ö", "ȫ", "ỏ", "ő", "ǒ", "ȍ", "ȏ", "ơ", "ờ", "ớ", "ỡ", "ở", "ợ", "ọ", "ộ", "ǫ", "ǭ", "p", "p.m.", "pA", "pF", "pV", "pW", "pc", "ps", "ṕ", "ṗ", "q", "r", "rad", "rad∕s", "rad∕s2", "ŕ", "ṙ", "ř", "ȑ", "ȓ", "ṛ", "ṝ", "ŗ", "ṟ", "s", "sr", "st", "ś", "ṥ", "ŝ", "ṡ", "š", "ṧ", "ṣ", "ṩ", "ș", "ş", "t", "ṫ", "ẗ", "ť", "ṭ", "ț", "ţ", "ṱ", "ṯ", "u", "ù", "ú", "û", "ũ", "ṹ", "ū", "ṻ", "ŭ", "ü", "ǜ", "ǘ", "ǖ", "ǚ", "ủ", "ů", "ű", "ǔ", "ȕ", "ȗ", "ư", "ừ", "ứ", "ữ", "ử", "ự", "ụ", "ṳ", "ų", "ṷ", "ṵ", "v", "vi", "vii", "viii", "ṽ", "ṿ", "w", "ẁ", "ẃ", "ŵ", "ẇ", "ẅ", "ẘ", "ẉ", "x", "xi", "xii", "ẋ", "ẍ", "y", "ỳ", "ý", "ŷ", "ỹ", "ȳ", "ẏ", "ÿ", "ỷ", "ẙ", "ỵ", "z", "ź", "ẑ", "ż", "ž", "ẓ", "ẕ", "{", "|", "}", "~", "¢", "£", "¥", "¦", "¬", "°C", "°F", "·", "Æ", "Ǽ", "Ǣ", "Ǿ", "ǽ", "ǣ", "ð", "ǿ", "Ħ", "ħ", "ı", "ŋ", "œ", "Ǝ", "Ɛ", "ƫ", "Ǯ", "Ȣ", "ȷ", "ɐ", "ɑ", "ɒ", "ɔ", "ɕ", "ə", "ɛ", "ɜ", "ɟ", "ɡ", "ɣ", "ɥ", "ɦ", "ɨ", "ɩ", "ɪ", "ɭ", "ɯ", "ɰ", "ɱ", "ɲ", "ɳ", "ɴ", "ɵ", "ɸ", "ɹ", "ɻ", "ʁ", "ʂ", "ʃ", "ʉ", "ʊ", "ʋ", "ʌ", "ʐ", "ʑ", "ʒ", "ǯ", "ʕ", "ʝ", "ʟ", "ʹ", "ʼn", "̀", "́", "̈́", "̓", "Α", "Ὰ", "Ά", "Ᾱ", "Ᾰ", "Ἀ", "Ἂ", "ᾊ", "Ἄ", "ᾌ", "Ἆ", "ᾎ", "ᾈ", "Ἁ", "Ἃ", "ᾋ", "Ἅ", "ᾍ", "Ἇ", "ᾏ", "ᾉ", "ᾼ", "Β", "Γ", "Δ", "Ε", "Ὲ", "Έ", "Ἐ", "Ἒ", "Ἔ", "Ἑ", "Ἓ", "Ἕ", "Ζ", "Η", "Ὴ", "Ή", "Ἠ", "Ἢ", "ᾚ", "Ἤ", "ᾜ", "Ἦ", "ᾞ", "ᾘ", "Ἡ", "Ἣ", "ᾛ", "Ἥ", "ᾝ", "Ἧ", "ᾟ", "ᾙ", "ῌ", "Θ", "Ι", "Ὶ", "Ί", "Ῑ", "Ῐ", "Ϊ", "Ἰ", "Ἲ", "Ἴ", "Ἶ", "Ἱ", "Ἳ", "Ἵ", "Ἷ", "Κ", "Λ", "Μ", "Ν", "Ξ", "Ο", "Ὸ", "Ό", "Ὀ", "Ὂ", "Ὄ", "Ὁ", "Ὃ", "Ὅ", "Π", "Ρ", "Ῥ", "Σ", "Τ", "Υ", "Ὺ", "Ύ", "Ῡ", "Ῠ", "Ϋ", "Ὑ", "Ὓ", "Ὕ", "Ὗ", "Φ", "Χ", "Ψ", "Ω", "Ὼ", "Ώ", "Ὠ", "Ὢ", "ᾪ", "Ὤ", "ᾬ", "Ὦ", "ᾮ", "ᾨ", "Ὡ", "Ὣ", "ᾫ", "Ὥ", "ᾭ", "Ὧ", "ᾯ", "ᾩ", "ῼ", "α", "ὰ", "ᾲ", "ά", "ᾴ", "ᾱ", "ᾰ", "ἀ", "ἂ", "ᾂ", "ἄ", "ᾄ", "ἆ", "ᾆ", "ᾀ", "ἁ", "ἃ", "ᾃ", "ἅ", "ᾅ", "ἇ", "ᾇ", "ᾁ", "ᾶ", "ᾷ", "ᾳ", "β", "γ", "δ", "ε", "ὲ", "έ", "ἐ", "ἒ", "ἔ", "ἑ", "ἓ", "ἕ", "ζ", "η", "ὴ", "ῂ", "ή", "ῄ", "ἠ", "ἢ", "ᾒ", "ἤ", "ᾔ", "ἦ", "ᾖ", "ᾐ", "ἡ", "ἣ", "ᾓ", "ἥ", "ᾕ", "ἧ", "ᾗ", "ᾑ", "ῆ", "ῇ", "ῃ", "θ", "ι", "ὶ", "ί", "ῑ", "ῐ", "ϊ", "ῒ", "ΐ", "ῗ", "ἰ", "ἲ", "ἴ", "ἶ", "ἱ", "ἳ", "ἵ", "ἷ", "ῖ", "κ", "λ", "μ", "μA", "μF", "μV", "μW", "μg", "μl", "μm", "μs", "ν", "ξ", "ο", "ὸ", "ό", "ὀ", "ὂ", "ὄ", "ὁ", "ὃ", "ὅ", "π", "ρ", "ῤ", "ῥ", "ς", "σ", "τ", "υ", "ὺ", "ύ", "ῡ", "ῠ", "ϋ", "ῢ", "ΰ", "ῧ", "ὐ", "ὒ", "ὔ", "ὖ", "ὑ", "ὓ", "ὕ", "ὗ", "ῦ", "φ", "χ", "ψ", "ω", "ὼ", "ῲ", "ώ", "ῴ", "ὠ", "ὢ", "ᾢ", "ὤ", "ᾤ", "ὦ", "ᾦ", "ᾠ", "ὡ", "ὣ", "ᾣ", "ὥ", "ᾥ", "ὧ", "ᾧ", "ᾡ", "ῶ", "ῷ", "ῳ", "Ϝ", "ϝ", "Ї", "Ӑ", "Ӓ", "Ѓ", "Ѐ", "Ӗ", "Ё", "Ӂ", "Ӝ", "Ӟ", "Ѝ", "Ӣ", "Й", "Ӥ", "Ќ", "Ӧ", "Ӯ", "Ў", "Ӱ", "Ӳ", "Ӵ", "Ӹ", "Ӭ", "ӑ", "ӓ", "ѓ", "ѐ", "ӗ", "ё", "ӂ", "ӝ", "ӟ", "ѝ", "ӣ", "й", "ӥ", "ќ", "н", "ӧ", "ӯ", "ў", "ӱ", "ӳ", "ӵ", "ӹ", "ӭ", "ї", "Ѷ", "ѷ", "Ӛ", "ӛ", "Ӫ", "ӫ", "եւ", "մե", "մի", "մխ", "մն", "վն", "א", "אַ", "אָ", "אּ", "אל", "ב", "בּ", "בֿ", "ג", "גּ", "ד", "דּ", "ה", "הּ", "וֹ", "וּ", "זּ", "טּ", "יִ", "יּ", "ךּ", "כ", "כּ", "כֿ", "ל", "לּ", "ם", "מּ", "נּ", "סּ", "ע", "ףּ", "פּ", "פֿ", "צּ", "קּ", "ר", "רּ", "שּ", "שּׁ", "שּׂ", "שׁ", "שׂ", "ת", "תּ", "ײַ", "ء", "ا", "اكبر", "الله", "اً", "آ", "أ", "إ", "اٴ", "ب", "بج", "بح", "بحي", "بخ", "بخي", "بر", "بز", "بم", "بن", "به", "بى", "بي", "ة", "ت", "تج", "تجم", "تجى", "تجي", "تح", "تحج", "تحم", "تخ", "تخم", "تخى", "تخي", "تر", "تز", "تم", "تمج", "تمح", "تمخ", "تمى", "تمي", "تن", "ته", "تى", "تي", "ث", "ثج", "ثر", "ثز", "ثم", "ثن", "ثه", "ثى", "ثي", "ج", "جح", "جحى", "جحي", "جل جلاله", "جم", "جمح", "جمى", "جمي", "جى", "جي", "ح", "حج", "حجي", "حم", "حمى", "حمي", "حى", "حي", "خ", "خج", "خح", "خم", "خى", "خي", "د", "ذ", "ذٰ", "ر", "رسول", "رٰ", "ریال", "ز", "س", "سج", "سجح", "سجى", "سح", "سحج", "سخ", "سخى", "سخي", "سر", "سم", "سمج", "سمح", "سمم", "سه", "سى", "سي", "ش", "شج", "شجي", "شح", "شحم", "شحي", "شخ", "شر", "شم", "شمخ", "شمم", "شه", "شى", "شي", "ص", "صح", "صحح", "صحي", "صخ", "صر", "صلعم", "صلى", "صلى الله عليه وسلم", "صلے", "صم", "صمم", "صى", "صي", "ض", "ضج", "ضح", "ضحى", "ضحي", "ضخ", "ضخم", "ضر", "ضم", "ضى", "ضي", "ط", "طح", "طم", "طمح", "طمم", "طمي", "طى", "طي", "ظ", "ظم", "ع", "عج", "عجم", "عليه", "عم", "عمم", "عمى", "عمي", "عى", "عي", "غ", "غج", "غم", "غمم", "غمى", "غمي", "غى", "غي", "ـً", "ـَ", "ـَّ", "ـُ", "ـُّ", "ـِ", "ـِّ", "ـّ", "ـْ", "ف", "فج", "فح", "فخ", "فخم", "فم", "فمي", "فى", "في", "ق", "قح", "قلے", "قم", "قمح", "قمم", "قمي", "قى", "قي", "ك", "كا", "كج", "كح", "كخ", "كل", "كم", "كمم", "كمي", "كى", "كي", "ل", "لا", "لآ", "لأ", "لإ", "لج", "لجج", "لجم", "لجي", "لح", "لحم", "لحى", "لحي", "لخ", "لخم", "لم", "لمح", "لمي", "له", "لى", "لي", "م", "ما", "مج", "مجح", "مجخ", "مجم", "مجي", "مح", "محج", "محم", "محمد", "محي", "مخ", "مخج", "مخم", "مخي", "مم", "ممي", "مى", "مي", "ن", "نج", "نجح", "نجم", "نجى", "نجي", "نح", "نحم", "نحى", "نحي", "نخ", "نر", "نز", "نم", "نمى", "نمي", "نن", "نه", "نى", "ني", "ه", "هج", "هم", "همج", "همم", "هى", "هي", "هٰ", "و", "وسلم", "ؤ", "وٴ", "ى", "ىٰ", "ي", "يج", "يجي", "يح", "يحي", "يخ", "ير", "يز", "يم", "يمم", "يمي", "ين", "يه", "يى", "يي", "ئ", "ئا", "ئج", "ئح", "ئخ", "ئر", "ئز", "ئم", "ئن", "ئه", "ئو", "ئى", "ئي", "ئۆ", "ئۇ", "ئۈ", "ئې", "ئە", "يٴ", "ٮ", "ٯ", "ٱ", "ٹ", "ٺ", "ٻ", "پ", "ٿ", "ڀ", "ڃ", "ڄ", "چ", "ڇ", "ڈ", "ڌ", "ڍ", "ڎ", "ڑ", "ژ", "ڡ", "ڤ", "ڦ", "ک", "ڭ", "گ", "ڱ", "ڳ", "ں", "ڻ", "ھ", "ہ", "ۂ", "ۅ", "ۆ", "ۇ", "ۇٴ", "ۈ", "ۉ", "ۋ", "ی", "ې", "ے", "ۓ", "ۀ", "क़", "ख़", "ग़", "ज़", "ड़", "ढ़", "ऩ", "फ़", "य़", "ऱ", "ऴ", "ড়", "ঢ়", "য়", "ো", "ৌ", "ਖ਼", "ਗ਼", "ਜ਼", "ਫ਼", "ਲ਼", "ਸ਼", "ଡ଼", "ଢ଼", "ୋ", "ୈ", "ୌ", "ஔ", "ொ", "ௌ", "ோ", "ై", "ೀ", "ೊ", "ೋ", "ೇ", "ೈ", "ൊ", "ൌ", "ോ", "ේ", "ො", "ෝ", "ෞ", "ํา", "ຫນ", "ຫມ", "ໍາ", "་", "ཀྵ", "གྷ", "ཌྷ", "དྷ", "བྷ", "ཛྷ", "ཱི", "ཱུ", "ཱྀ", "ྐྵ", "ྒྷ", "ྜྷ", "ྡྷ", "ྦྷ", "ྫྷ", "ྲཱྀ", "ྲྀ", "ླཱྀ", "ླྀ", "ဦ", "ნ", "ᄀ", "가", "ᄁ", "ᄂ", "나", "ᄃ", "다", "ᄄ", "ᄅ", "라", "ᄆ", "마", "ᄇ", "바", "ᄈ", "ᄉ", "사", "ᄊ", "ᄋ", "아", "우", "ᄌ", "자", "주의", "ᄍ", "ᄎ", "차", "참고", "ᄏ", "카", "ᄐ", "타", "ᄑ", "파", "ᄒ", "하", "ᄔ", "ᄕ", "ᄚ", "ᄜ", "ᄝ", "ᄞ", "ᄠ", "ᄡ", "ᄢ", "ᄣ", "ᄧ", "ᄩ", "ᄫ", "ᄬ", "ᄭ", "ᄮ", "ᄯ", "ᄲ", "ᄶ", "ᅀ", "ᅇ", "ᅌ", "ᅗ", "ᅘ", "ᅙ", "ᅠ", "ᅡ", "ᅢ", "ᅣ", "ᅤ", "ᅥ", "ᅦ", "ᅧ", "ᅨ", "ᅩ", "ᅪ", "ᅫ", "ᅬ", "ᅭ", "ᅮ", "ᅯ", "ᅰ", "ᅱ", "ᅲ", "ᅳ", "ᅴ", "ᅵ", "ᆄ", "ᆅ", "ᆈ", "ᆑ", "ᆒ", "ᆔ", "ᆞ", "ᆡ", "ᆪ", "ᆬ", "ᆭ", "ᆰ", "ᆱ", "ᆲ", "ᆳ", "ᆴ", "ᆵ", "ᇇ", "ᇈ", "ᇌ", "ᇎ", "ᇓ", "ᇗ", "ᇙ", "ᇝ", "ᇟ", "ᇱ", "ᇲ", "ᬆ", "ᬈ", "ᬊ", "ᬌ", "ᬎ", "ᬒ", "ᬻ", "ᬽ", "ᭀ", "ᭁ", "ᭃ", "ᴂ", "ᴖ", "ᴗ", "ᴜ", "ᴝ", "ᴥ", "ᵻ", "ᶅ", "‐", "–", "—", "′′", "′′′", "′′′′", "‵‵", "‵‵‵", "₩", "←", "↚", "↑", "→", "↛", "↓", "↮", "⇍", "⇏", "⇎", "∂", "∄", "∇", "∉", "∌", "∑", "−", "∤", "∦", "∫∫", "∫∫∫", "∫∫∫∫", "∮∮", "∮∮∮", "≁", "≄", "≇", "≉", "≭", "≢", "≰", "≱", "≴", "≵", "≸", "≹", "⊀", "⊁", "⋠", "⋡", "⊄", "⊅", "⊈", "⊉", "⋢", "⋣", "⊬", "⊭", "⊮", "⊯", "⋪", "⋫", "⋬", "⋭", "│", "■", "○", "⦅", "⦆", "⫝̸", "ⵡ", "、", "。", "〈", "〉", "《", "》", "「", "」", "『", "』", "【", "】", "〒", "〔", "〔S〕", "〔三〕", "〔二〕", "〔勝〕", "〔安〕", "〔打〕", "〔敗〕", "〔本〕", "〔点〕", "〔盗〕", "〕", "〖", "〗", "ゔ", "が", "ぎ", "ぐ", "げ", "ご", "ざ", "じ", "ず", "ぜ", "ぞ", "だ", "ぢ", "づ", "で", "ど", "ば", "ぱ", "び", "ぴ", "ぶ", "ぷ", "べ", "ぺ", "ほか", "ぼ", "ぽ", "より", "゙", "゚", "ゞ", "ァ", "ア", "アパート", "アルファ", "アンペア", "アール", "ィ", "イ", "イニング", "インチ", "ゥ", "ウ", "ヴ", "ウォン", "ェ", "エ", "エスクード", "エーカー", "ォ", "オ", "オンス", "オーム", "カ", "ガ", "ガロン", "ガンマ", "カイリ", "カラット", "カロリー", "キ", "ギ", "ギガ", "ギニー", "ギルダー", "キュリー", "キロ", "キログラム", "キロメートル", "キロワット", "ク", "グ", "グラム", "グラムトン", "クルゼイロ", "クローネ", "ケ", "ゲ", "ケース", "コ", "ゴ", "ココ", "コト", "コルナ", "コーポ", "サ", "ザ", "サイクル", "サンチーム", "シ", "ジ", "シリング", "ス", "ズ", "セ", "ゼ", "センチ", "セント", "ソ", "ゾ", "タ", "ダ", "ダース", "チ", "ヂ", "ッ", "ツ", "ヅ", "テ", "デ", "デシ", "ト", "ド", "ドル", "トン", "ナ", "ナノ", "ニ", "ヌ", "ネ", "ノ", "ノット", "ハ", "バ", "バーレル", "パ", "パーセント", "パーツ", "ハイツ", "ヒ", "ビ", "ビル", "ピ", "ピアストル", "ピクル", "ピコ", "フ", "ブ", "ブッシェル", "プ", "ファラッド", "フィート", "フラン", "ヘ", "ベ", "ベータ", "ペ", "ペソ", "ペニヒ", "ペンス", "ページ", "ヘクタール", "ヘルツ", "ホ", "ボ", "ボルト", "ポ", "ポイント", "ポンド", "ホン", "ホール", "ホーン", "マ", "マイクロ", "マイル", "マッハ", "マルク", "マンション", "ミ", "ミクロン", "ミリ", "ミリバール", "ム", "メ", "メガ", "メガトン", "メートル", "モ", "ャ", "ヤ", "ヤード", "ヤール", "ュ", "ユ", "ユアン", "ョ", "ヨ", "ラ", "リ", "リットル", "リラ", "ル", "ルピー", "ルーブル", "レ", "レム", "レントゲン", "ロ", "ワ", "ヷ", "ワット", "ヰ", "ヸ", "ヱ", "ヹ", "ヲ", "ヺ", "ン", "・", "ー", "ヾ", "㒞", "㒹", "㒻", "㓟", "㔕", "㛮", "㛼", "㞁", "㠯", "㡢", "㡼", "㣇", "㣣", "㤜", "㤺", "㨮", "㩬", "㫤", "㬈", "㬙", "㭉", "㮝", "㰘", "㱎", "㴳", "㶖", "㺬", "㺸", "㼛", "㿼", "䀈", "䀘", "䀹", "䁆", "䂖", "䃣", "䄯", "䈂", "䈧", "䊠", "䌁", "䌴", "䍙", "䏕", "䏙", "䐋", "䑫", "䔫", "䕝", "䕡", "䕫", "䗗", "䗹", "䘵", "䚾", "䛇", "䦕", "䧦", "䩮", "䩶", "䪲", "䬳", "䯎", "䳎", "䳭", "䳸", "䵖", "一", "丁", "七", "三", "上", "下", "不", "丙", "並", "丨", "中", "串", "丶", "丸", "丹", "丽", "丿", "乁", "乙", "九", "亂", "亅", "了", "二", "五", "亠", "交", "亮", "人", "什", "仌", "令", "企", "休", "你", "侀", "來", "例", "侮", "侻", "便", "倂", "倫", "偺", "備", "像", "僚", "僧", "優", "儿", "兀", "充", "免", "兔", "兤", "入", "內", "全", "兩", "八", "六", "具", "冀", "冂", "再", "冒", "冕", "冖", "冗", "写", "冤", "冫", "冬", "况", "冷", "凉", "凌", "凜", "凞", "几", "凵", "刀", "刃", "切", "列", "初", "利", "刺", "刻", "剆", "前", "割", "剷", "劉", "力", "劣", "劳", "労", "勇", "勉", "勒", "勞", "勤", "勵", "勹", "勺", "包", "匆", "匕", "北", "匚", "匸", "医", "匿", "十", "卄", "卅", "卉", "卑", "協", "博", "卜", "卩", "印", "即", "卵", "卽", "卿", "厂", "厶", "參", "又", "及", "双", "叟", "口", "句", "叫", "可", "叱", "右", "吆", "合", "名", "吏", "吝", "吸", "吹", "呂", "呈", "周", "咞", "咢", "咽", "哶", "唐", "問", "啓", "啕", "啣", "善", "喇", "喙", "喝", "喫", "喳", "営", "嗀", "嗂", "嗢", "嘆", "噑", "器", "噴", "囗", "四", "囹", "圖", "圗", "土", "地", "型", "城", "埴", "堍", "報", "堲", "塀", "塚", "塞", "墨", "墬", "墳", "壘", "壟", "士", "壮", "声", "売", "壷", "夂", "夆", "夊", "夕", "多", "夜", "夢", "大", "大正", "天", "奄", "奈", "契", "奔", "奢", "女", "姘", "姬", "娛", "娧", "婢", "婦", "媵", "嬈", "嬨", "嬾", "子", "字", "学", "宀", "宅", "宗", "寃", "寘", "寧", "寮", "寳", "寸", "寿", "将", "小", "尢", "尸", "尿", "屠", "屢", "層", "履", "屮", "山", "岍", "峀", "崙", "嵃", "嵐", "嵫", "嵮", "嵼", "嶲", "嶺", "巛", "巡", "巢", "工", "左", "己", "巽", "巾", "帨", "帽", "幩", "干", "平成", "年", "幺", "幼", "广", "度", "庰", "庳", "庶", "廉", "廊", "廒", "廓", "廙", "廬", "廴", "廾", "弄", "弋", "弓", "弢", "彐", "当", "彡", "形", "彩", "彫", "彳", "律", "後", "得", "徚", "復", "徭", "心", "忍", "志", "念", "忹", "怒", "怜", "恵", "悁", "悔", "惇", "惘", "惡", "愈", "慄", "慈", "慌", "慎", "慠", "慨", "慺", "憎", "憐", "憤", "憯", "憲", "懞", "懲", "懶", "戀", "戈", "成", "戛", "戮", "戴", "戶", "手", "打", "扝", "投", "抱", "拉", "拏", "拓", "拔", "拼", "拾", "指", "挽", "捐", "捕", "捨", "捻", "掃", "掠", "掩", "揄", "揅", "揤", "搜", "搢", "摒", "摩", "摷", "摾", "撚", "撝", "擄", "支", "攴", "敏", "敖", "敬", "數", "文", "斗", "料", "斤", "新", "方", "旅", "无", "既", "旣", "日", "明治", "易", "映", "昭和", "晉", "晴", "暈", "暑", "暜", "暴", "曆", "曰", "更", "書", "最", "月", "有", "朗", "望", "朡", "木", "李", "杓", "杖", "杞", "杻", "枅", "林", "柳", "柺", "栗", "栟", "株", "株式会社", "桒", "梁", "梅", "梎", "梨", "椔", "楂", "榣", "槪", "樂", "樓", "檨", "櫓", "櫛", "欄", "欠", "次", "歔", "止", "正", "歲", "歷", "歹", "殟", "殮", "殳", "殺", "殻", "毋", "母", "比", "毛", "氏", "气", "水", "汎", "汧", "沈", "沿", "泌", "泍", "泥", "注", "洖", "洛", "洞", "洴", "派", "流", "浩", "浪", "海", "浸", "涅", "淋", "淚", "淪", "淹", "渚", "港", "湮", "満", "溜", "溺", "滇", "滋", "滑", "滛", "漏", "演", "漢", "漣", "潮", "濆", "濫", "濾", "瀛", "瀞", "瀹", "灊", "火", "灰", "灷", "災", "炙", "炭", "烈", "烙", "無", "煅", "煉", "煮", "熜", "燎", "燐", "爐", "爛", "爨", "爪", "爫", "爵", "父", "爻", "爿", "片", "牐", "牙", "牛", "牢", "特", "犀", "犕", "犬", "犯", "狀", "狼", "猪", "獵", "獺", "玄", "率", "玉", "王", "玥", "玲", "珞", "理", "琉", "琢", "瑇", "瑜", "瑩", "瑱", "璅", "璉", "璘", "瓊", "瓜", "瓦", "甆", "甘", "生", "甤", "用", "田", "甲", "申", "男", "画", "甾", "留", "略", "異", "疋", "疒", "痢", "瘐", "瘝", "瘟", "療", "癩", "癶", "白", "皮", "皿", "益", "盛", "監", "盧", "目", "直", "省", "眞", "真", "着", "睊", "瞋", "瞧", "矛", "矢", "石", "硎", "硫", "碌", "碑", "磊", "磌", "磻", "礪", "示", "礼", "社", "祈", "祉", "祐", "祖", "祝", "神", "祥", "祿", "禁", "禍", "禎", "福", "禮", "禸", "禾", "秊", "秘", "秫", "稜", "穀", "穊", "穏", "穴", "空", "突", "窱", "立", "竮", "竹", "笠", "箏", "節", "篆", "築", "簾", "籠", "米", "类", "粒", "精", "糒", "糖", "糣", "糧", "糨", "糸", "紀", "紐", "索", "累", "終", "絛", "絣", "綠", "綾", "緇", "練", "縂", "縉", "縷", "繁", "繅", "缶", "缾", "网", "署", "罹", "罺", "羅", "羊", "羕", "羚", "羽", "翺", "老", "者", "而", "耒", "耳", "聆", "聠", "聯", "聰", "聾", "聿", "肉", "肋", "肭", "育", "脃", "脾", "臘", "臣", "臨", "自", "臭", "至", "臼", "舁", "舄", "舌", "舘", "舛", "舟", "艮", "良", "色", "艸", "艹", "芋", "芑", "芝", "花", "芳", "芽", "若", "苦", "茝", "茣", "茶", "荒", "荓", "荣", "莭", "莽", "菉", "菊", "菌", "菜", "菧", "華", "菱", "落", "葉", "著", "蓮", "蓱", "蓳", "蓼", "蔖", "蕤", "藍", "藺", "蘆", "蘒", "蘭", "蘿", "虍", "虐", "虜", "虧", "虩", "虫", "蚈", "蚩", "蛢", "蜎", "蜨", "蝫", "蝹", "螆", "螺", "蟡", "蠁", "蠟", "血", "行", "衠", "衣", "裂", "裏", "裗", "裞", "裡", "裸", "裺", "褐", "襁", "襤", "襾", "覆", "見", "視", "角", "解", "言", "誠", "說", "調", "請", "諒", "論", "諭", "諸", "諾", "謁", "謹", "識", "讀", "變", "谷", "豆", "豈", "豕", "豸", "貝", "財", "販", "貫", "賁", "賂", "資", "賈", "賓", "贈", "贛", "赤", "走", "起", "足", "趼", "跋", "路", "跰", "身", "車", "軔", "輦", "輪", "輸", "輻", "轢", "辛", "辞", "辰", "辵", "辶", "連", "逸", "遊", "適", "遲", "遼", "邏", "邑", "邔", "郎", "郞", "郱", "都", "鄑", "鄛", "酉", "酪", "醙", "醴", "釆", "里", "量", "金", "鈴", "鈸", "鉶", "鉼", "鋗", "鋘", "錄", "鍊", "鏹", "鐕", "長", "門", "開", "閭", "閷", "阜", "阮", "陋", "降", "陵", "陸", "陼", "隆", "隣", "隶", "隷", "隸", "隹", "雃", "離", "難", "雨", "零", "雷", "霣", "露", "靈", "靑", "靖", "非", "面", "革", "韋", "韛", "韠", "韭", "音", "響", "頁", "項", "頋", "領", "頩", "頻", "類", "風", "飛", "食", "飢", "飯", "飼", "館", "餩", "首", "香", "馧", "馬", "駂", "駱", "駾", "驪", "骨", "高", "髟", "鬒", "鬥", "鬯", "鬲", "鬼", "魚", "魯", "鱀", "鱗", "鳥", "鳽", "鵧", "鶴", "鷺", "鸞", "鹵", "鹿", "麗", "麟", "麥", "麻", "黃", "黍", "黎", "黑", "黹", "黽", "黾", "鼅", "鼎", "鼏", "鼓", "鼖", "鼠", "鼻", "齃", "齊", "齒", "龍", "龎", "龜", "龟", "龠", "\uA76F", "\U00011099𑂺", "\U0001109B𑂺", "\U000110A5𑂺", "\U00011131\U00011127", "\U00011132\U00011127", "𝅗𝅥", "𝅘𝅥", "𝅘𝅥𝅮", "𝅘𝅥𝅯", "𝅘𝅥𝅰", "𝅘𝅥𝅱", "𝅘𝅥𝅲", "𝆹𝅥", "𝆹𝅥𝅮", "𝆹𝅥𝅯", "𝆺𝅥", "𝆺𝅥𝅮", "𝆺𝅥𝅯", "𠄢", "𠔜", "𠔥", "𠕋", "𠘺", "𠠄", "𠣞", "𠨬", "𠭣", "𡓤", "𡚨", "𡛪", "𡧈", "𡬘", "𡴋", "𡷤", "𡷦", "𢆃", "𢆟", "𢌱", "𢛔", "𢡄", "𢡊", "𢬌", "𢯱", "𣀊", "𣊸", "𣍟", "𣎓", "𣎜", "𣏃", "𣏕", "𣑭", "𣚣", "𣢧", "𣪍", "𣫺", "𣲼", "𣴞", "𣻑", "𣽞", "𣾎", "𤉣", "𤋮", "𤎫", "𤘈", "𤜵", "𤠔", "𤰶", "𤲒", "𤾡", "𤾸", "𥁄", "𥃲", "𥃳", "𥄙", "𥄳", "𥉉", "𥐝", "𥘦", "𥚚", "𥛅", "𥥼", "𥪧", "𥮫", "𥲀", "𥳐", "𥾆", "𦇚", "𦈨", "𦉇", "𦋙", "𦌾", "𦓚", "𦔣", "𦖨", "𦞧", "𦞵", "𦬼", "𦰶", "𦳕", "𦵫", "𦼬", "𦾱", "𧃒", "𧏊", "𧙧", "𧢮", "𧥦", "𧲨", "𧻓", "𧼯", "𨗒", "𨗭", "𨜮", "𨯺", "𨵷", "𩅅", "𩇟", "𩈚", "𩐊", "𩒖", "𩖶", "𩬰", "𪃎", "𪄅", "𪈎", "𪊑", "𪎒", "𪘀"];
enum composeIdxMask = (1<<11)-1, composeCntShift = 11;
immutable compositionJumpTrie = CodepointTrie!(ushort, 12, 9).fromRawArray([ 0x0,  0x800], [ 0x1000,  0x2000], [ 0x1000,  0x3002,  0x5004,  0x7006,  0x7008,  0x7007,  0x9007,  0xa007,  0xc00b,  0x7007,  0x7007,  0x7007,  0x700d,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x700e,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0x7007,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x8010800,  0xffff0802,  0x8003ffff,  0x28161813,  0x8821301b,  0x38330832,  0x7841383a,  0x28510850,  0x185c3056,  0x8068485f,  0xffff1078,  0x3882407a,  0x98903889,  0x30a510a3,  0x48ad10ab,  0xffff30b6,  0xffffffff,  0xffffffff,  0x80bcffff,  0x28cf18cc,  0x88da30d4,  0x38ec08eb,  0x70fb40f3,  0x290b1109,  0x19163110,  0x81224919,  0xffff1132,  0x393c4134,  0x994b4143,  0x3960115e,  0x51691167,  0xffff3173,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff1979,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff217c,  0x9810980,  0x9841182,  0xffffffff,  0xffff2185,  0xffffffff,  0x989ffff,  0xffffffff,  0xffffffff,  0x198e218a,  0xffff0991,  0xffff0992,  0xffffffff,  0xffff2193,  0xffffffff,  0xffffffff,  0xffff2197,  0x99c099b,  0x99f119d,  0xffffffff,  0xffff21a0,  0xffffffff,  0x9a4ffff,  0xffffffff,  0xffffffff,  0x19a921a5,  0xffff09ac,  0xffff09ad,  0xffffffff,  0xffff21ae,  0xffffffff,  0xffffffff,  0x21b621b2,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x11bc11ba,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x11c011be,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x9c309c2,  0xffffffff,  0xffffffff,  0x9c509c4,  0xffffffff,  0xffffffff,  0xffffffff,  0x9c709c6,  0x9c909c8,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x9caffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x29d029cb,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x29d5ffff,  0xffff29da,  0xffffffff,  0xffffffff,  0x9dfffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x9e109e0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x9e309e2,  0x9e509e4,  0xffffffff,  0xffffffff,  0x9e709e6,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff09e8,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x39e9ffff,  0xffffffff,  0x21f0ffff,  0x29f4ffff,  0x39f9ffff,  0xffffffff,  0xffffffff,  0x2200ffff,  0xa04ffff,  0xffffffff,  0x3205ffff,  0xffffffff,  0x2a0bffff,  0xffffffff,  0xffff0a10,  0xffff0a11,  0x4212ffff,  0xffffffff,  0x221affff,  0x321effff,  0x4224ffff,  0xffffffff,  0xffffffff,  0x222cffff,  0x1230ffff,  0xffffffff,  0x4232ffff,  0xffffffff,  0x323affff,  0x1a431a40,  0xffffffff,  0xffff0a46,  0xffffffff,  0xffff1247,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0a49,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff124a,  0xa4cffff,  0x1a4dffff,  0xa521250,  0xffff2253,  0xffff0a57,  0xffffffff,  0xffff0a58,  0xffffffff,  0x2259ffff,  0xffffffff,  0xa5dffff,  0xffffffff,  0xa5effff,  0xa5fffff,  0xffffffff,  0xffff1260,  0xa62ffff,  0x1a63ffff,  0xa681266,  0xffff2269,  0xffff0a6d,  0xffffffff,  0xffff0a6e,  0xffffffff,  0x226fffff,  0xffffffff,  0xa73ffff,  0xffffffff,  0xa74ffff,  0xa75ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0a76,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xa780a77,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xa7a0a79,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xa7c0a7b,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x1a7dffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0a80,  0xffff0a81,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xa82ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0a83,  0xa84ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0a85,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0a86,  0xa87ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x1288ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x1a8affff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0a8d,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xa90128e,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0a91,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xa92ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff1a93,  0xffffffff,  0xffff0a96,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xa991297,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x1a9affff,  0xffffffff,  0xffff0a9d,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xa9effff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xa9fffff,  0xaa0ffff,  0xaa1ffff,  0xaa2ffff,  0xaa3ffff,  0xffffffff,  0xaa4ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0aa5,  0xffff0aa6,  0xaa80aa7,  0xffffffff,  0xffff0aa9,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xaab0aaa,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xaad0aac,  0xffffffff,  0xffffffff,  0xffffffff,  0xaaf0aae,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x12b212b0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xab50ab4,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xab70ab6,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x22bc22b8,  0xac10ac0,  0xac30ac2,  0xac50ac4,  0x22ca22c6,  0xacf0ace,  0xad10ad0,  0xad30ad2,  0x12d612d4,  0xffffffff,  0xffffffff,  0xffffffff,  0x12da12d8,  0xffffffff,  0xffffffff,  0xffffffff,  0x22e022dc,  0xae50ae4,  0xae70ae6,  0xae90ae8,  0x22ee22ea,  0xaf30af2,  0xaf50af4,  0xaf70af6,  0x1afb1af8,  0xffffffff,  0xffffffff,  0xffffffff,  0x1b011afe,  0xffffffff,  0xffffffff,  0xffffffff,  0x13061304,  0xffffffff,  0xffffffff,  0xffffffff,  0x130a1308,  0xffffffff,  0xffffffff,  0xffffffff,  0x1b0f1b0c,  0xffffffff,  0xffffffff,  0xffffffff,  0x1b12ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x23192315,  0xb1e0b1d,  0xb200b1f,  0xb220b21,  0x23272323,  0xb2c0b2b,  0xb2e0b2d,  0xb300b2f,  0xffff0b31,  0xffffffff,  0xffff0b32,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0b33,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0b34,  0xffffffff,  0xffffffff,  0xffffffff,  0x1b35ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0b38,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0b39,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff1b3a,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0b3d,  0xffff0b3e,  0xffff0b3f,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0b40,  0xffff0b41,  0xffff0b42,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xb43ffff,  0xffffffff,  0xffffffff,  0xffff0b44,  0xb45ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xb46ffff,  0xb47ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0b48,  0xffffffff,  0xffffffff,  0xb49ffff,  0xb4affff,  0xffffffff,  0xffff0b4b,  0xffffffff,  0xb4cffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xb4dffff,  0xffffffff,  0xb4f0b4e,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xb510b50,  0xffffffff,  0xb530b52,  0xffffffff,  0xb550b54,  0xb570b56,  0xffffffff,  0xffffffff,  0xb590b58,  0xffffffff,  0xb5b0b5a,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xb5cffff,  0xffff0b5d,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0b5e,  0xffffffff,  0xffffffff,  0xb600b5f,  0xb61ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xb630b62,  0xb650b64,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0b66,  0xffffffff,  0xb67ffff,  0xb68ffff,  0xb69ffff,  0xb6affff,  0xb6bffff,  0xb6cffff,  0xb6dffff,  0xb6effff,  0xb6fffff,  0xb70ffff,  0xb71ffff,  0xb72ffff,  0xffffffff,  0xffff0b73,  0xffff0b74,  0xffff0b75,  0xffffffff,  0xffffffff,  0x1376ffff,  0xffffffff,  0xffff1378,  0x137affff,  0xffffffff,  0xffff137c,  0x137effff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xb80ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff0b81,  0xffffffff,  0xb82ffff,  0xb83ffff,  0xb84ffff,  0xb85ffff,  0xb86ffff,  0xb87ffff,  0xb88ffff,  0xb89ffff,  0xb8affff,  0xb8bffff,  0xb8cffff,  0xb8dffff,  0xffffffff,  0xffff0b8e,  0xffff0b8f,  0xffff0b90,  0xffffffff,  0xffffffff,  0x1391ffff,  0xffffffff,  0xffff1393,  0x1395ffff,  0xffffffff,  0xffff1397,  0x1399ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xb9bffff,  0xb9d0b9c,  0xffff0b9e,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xb9fffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xba0ffff,  0xba1ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xba2ffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xba3ffff,  0xffff0ba4,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff]);
immutable compositionTable = [CompEntry(0x00338, 0x0226e),CompEntry(0x00338, 0x02260),CompEntry(0x00338, 0x0226f),CompEntry(0x00300, 0x000c0),CompEntry(0x00301, 0x000c1),CompEntry(0x00302, 0x000c2),CompEntry(0x00303, 0x000c3),CompEntry(0x00304, 0x00100),CompEntry(0x00306, 0x00102),CompEntry(0x00307, 0x00226),CompEntry(0x00308, 0x000c4),CompEntry(0x00309, 0x01ea2),CompEntry(0x0030a, 0x000c5),CompEntry(0x0030c, 0x001cd),CompEntry(0x0030f, 0x00200),CompEntry(0x00311, 0x00202),CompEntry(0x00323, 0x01ea0),CompEntry(0x00325, 0x01e00),CompEntry(0x00328, 0x00104),CompEntry(0x00307, 0x01e02),CompEntry(0x00323, 0x01e04),CompEntry(0x00331, 0x01e06),CompEntry(0x00301, 0x00106),CompEntry(0x00302, 0x00108),CompEntry(0x00307, 0x0010a),CompEntry(0x0030c, 0x0010c),CompEntry(0x00327, 0x000c7),CompEntry(0x00307, 0x01e0a),CompEntry(0x0030c, 0x0010e),CompEntry(0x00323, 0x01e0c),CompEntry(0x00327, 0x01e10),CompEntry(0x0032d, 0x01e12),CompEntry(0x00331, 0x01e0e),CompEntry(0x00300, 0x000c8),CompEntry(0x00301, 0x000c9),CompEntry(0x00302, 0x000ca),CompEntry(0x00303, 0x01ebc),CompEntry(0x00304, 0x00112),CompEntry(0x00306, 0x00114),CompEntry(0x00307, 0x00116),CompEntry(0x00308, 0x000cb),CompEntry(0x00309, 0x01eba),CompEntry(0x0030c, 0x0011a),CompEntry(0x0030f, 0x00204),CompEntry(0x00311, 0x00206),CompEntry(0x00323, 0x01eb8),CompEntry(0x00327, 0x00228),CompEntry(0x00328, 0x00118),CompEntry(0x0032d, 0x01e18),CompEntry(0x00330, 0x01e1a),CompEntry(0x00307, 0x01e1e),CompEntry(0x00301, 0x001f4),CompEntry(0x00302, 0x0011c),CompEntry(0x00304, 0x01e20),CompEntry(0x00306, 0x0011e),CompEntry(0x00307, 0x00120),CompEntry(0x0030c, 0x001e6),CompEntry(0x00327, 0x00122),CompEntry(0x00302, 0x00124),CompEntry(0x00307, 0x01e22),CompEntry(0x00308, 0x01e26),CompEntry(0x0030c, 0x0021e),CompEntry(0x00323, 0x01e24),CompEntry(0x00327, 0x01e28),CompEntry(0x0032e, 0x01e2a),CompEntry(0x00300, 0x000cc),CompEntry(0x00301, 0x000cd),CompEntry(0x00302, 0x000ce),CompEntry(0x00303, 0x00128),CompEntry(0x00304, 0x0012a),CompEntry(0x00306, 0x0012c),CompEntry(0x00307, 0x00130),CompEntry(0x00308, 0x000cf),CompEntry(0x00309, 0x01ec8),CompEntry(0x0030c, 0x001cf),CompEntry(0x0030f, 0x00208),CompEntry(0x00311, 0x0020a),CompEntry(0x00323, 0x01eca),CompEntry(0x00328, 0x0012e),CompEntry(0x00330, 0x01e2c),CompEntry(0x00302, 0x00134),CompEntry(0x00301, 0x01e30),CompEntry(0x0030c, 0x001e8),CompEntry(0x00323, 0x01e32),CompEntry(0x00327, 0x00136),CompEntry(0x00331, 0x01e34),CompEntry(0x00301, 0x00139),CompEntry(0x0030c, 0x0013d),CompEntry(0x00323, 0x01e36),CompEntry(0x00327, 0x0013b),CompEntry(0x0032d, 0x01e3c),CompEntry(0x00331, 0x01e3a),CompEntry(0x00301, 0x01e3e),CompEntry(0x00307, 0x01e40),CompEntry(0x00323, 0x01e42),CompEntry(0x00300, 0x001f8),CompEntry(0x00301, 0x00143),CompEntry(0x00303, 0x000d1),CompEntry(0x00307, 0x01e44),CompEntry(0x0030c, 0x00147),CompEntry(0x00323, 0x01e46),CompEntry(0x00327, 0x00145),CompEntry(0x0032d, 0x01e4a),CompEntry(0x00331, 0x01e48),CompEntry(0x00300, 0x000d2),CompEntry(0x00301, 0x000d3),CompEntry(0x00302, 0x000d4),CompEntry(0x00303, 0x000d5),CompEntry(0x00304, 0x0014c),CompEntry(0x00306, 0x0014e),CompEntry(0x00307, 0x0022e),CompEntry(0x00308, 0x000d6),CompEntry(0x00309, 0x01ece),CompEntry(0x0030b, 0x00150),CompEntry(0x0030c, 0x001d1),CompEntry(0x0030f, 0x0020c),CompEntry(0x00311, 0x0020e),CompEntry(0x0031b, 0x001a0),CompEntry(0x00323, 0x01ecc),CompEntry(0x00328, 0x001ea),CompEntry(0x00301, 0x01e54),CompEntry(0x00307, 0x01e56),CompEntry(0x00301, 0x00154),CompEntry(0x00307, 0x01e58),CompEntry(0x0030c, 0x00158),CompEntry(0x0030f, 0x00210),CompEntry(0x00311, 0x00212),CompEntry(0x00323, 0x01e5a),CompEntry(0x00327, 0x00156),CompEntry(0x00331, 0x01e5e),CompEntry(0x00301, 0x0015a),CompEntry(0x00302, 0x0015c),CompEntry(0x00307, 0x01e60),CompEntry(0x0030c, 0x00160),CompEntry(0x00323, 0x01e62),CompEntry(0x00326, 0x00218),CompEntry(0x00327, 0x0015e),CompEntry(0x00307, 0x01e6a),CompEntry(0x0030c, 0x00164),CompEntry(0x00323, 0x01e6c),CompEntry(0x00326, 0x0021a),CompEntry(0x00327, 0x00162),CompEntry(0x0032d, 0x01e70),CompEntry(0x00331, 0x01e6e),CompEntry(0x00300, 0x000d9),CompEntry(0x00301, 0x000da),CompEntry(0x00302, 0x000db),CompEntry(0x00303, 0x00168),CompEntry(0x00304, 0x0016a),CompEntry(0x00306, 0x0016c),CompEntry(0x00308, 0x000dc),CompEntry(0x00309, 0x01ee6),CompEntry(0x0030a, 0x0016e),CompEntry(0x0030b, 0x00170),CompEntry(0x0030c, 0x001d3),CompEntry(0x0030f, 0x00214),CompEntry(0x00311, 0x00216),CompEntry(0x0031b, 0x001af),CompEntry(0x00323, 0x01ee4),CompEntry(0x00324, 0x01e72),CompEntry(0x00328, 0x00172),CompEntry(0x0032d, 0x01e76),CompEntry(0x00330, 0x01e74),CompEntry(0x00303, 0x01e7c),CompEntry(0x00323, 0x01e7e),CompEntry(0x00300, 0x01e80),CompEntry(0x00301, 0x01e82),CompEntry(0x00302, 0x00174),CompEntry(0x00307, 0x01e86),CompEntry(0x00308, 0x01e84),CompEntry(0x00323, 0x01e88),CompEntry(0x00307, 0x01e8a),CompEntry(0x00308, 0x01e8c),CompEntry(0x00300, 0x01ef2),CompEntry(0x00301, 0x000dd),CompEntry(0x00302, 0x00176),CompEntry(0x00303, 0x01ef8),CompEntry(0x00304, 0x00232),CompEntry(0x00307, 0x01e8e),CompEntry(0x00308, 0x00178),CompEntry(0x00309, 0x01ef6),CompEntry(0x00323, 0x01ef4),CompEntry(0x00301, 0x00179),CompEntry(0x00302, 0x01e90),CompEntry(0x00307, 0x0017b),CompEntry(0x0030c, 0x0017d),CompEntry(0x00323, 0x01e92),CompEntry(0x00331, 0x01e94),CompEntry(0x00300, 0x000e0),CompEntry(0x00301, 0x000e1),CompEntry(0x00302, 0x000e2),CompEntry(0x00303, 0x000e3),CompEntry(0x00304, 0x00101),CompEntry(0x00306, 0x00103),CompEntry(0x00307, 0x00227),CompEntry(0x00308, 0x000e4),CompEntry(0x00309, 0x01ea3),CompEntry(0x0030a, 0x000e5),CompEntry(0x0030c, 0x001ce),CompEntry(0x0030f, 0x00201),CompEntry(0x00311, 0x00203),CompEntry(0x00323, 0x01ea1),CompEntry(0x00325, 0x01e01),CompEntry(0x00328, 0x00105),CompEntry(0x00307, 0x01e03),CompEntry(0x00323, 0x01e05),CompEntry(0x00331, 0x01e07),CompEntry(0x00301, 0x00107),CompEntry(0x00302, 0x00109),CompEntry(0x00307, 0x0010b),CompEntry(0x0030c, 0x0010d),CompEntry(0x00327, 0x000e7),CompEntry(0x00307, 0x01e0b),CompEntry(0x0030c, 0x0010f),CompEntry(0x00323, 0x01e0d),CompEntry(0x00327, 0x01e11),CompEntry(0x0032d, 0x01e13),CompEntry(0x00331, 0x01e0f),CompEntry(0x00300, 0x000e8),CompEntry(0x00301, 0x000e9),CompEntry(0x00302, 0x000ea),CompEntry(0x00303, 0x01ebd),CompEntry(0x00304, 0x00113),CompEntry(0x00306, 0x00115),CompEntry(0x00307, 0x00117),CompEntry(0x00308, 0x000eb),CompEntry(0x00309, 0x01ebb),CompEntry(0x0030c, 0x0011b),CompEntry(0x0030f, 0x00205),CompEntry(0x00311, 0x00207),CompEntry(0x00323, 0x01eb9),CompEntry(0x00327, 0x00229),CompEntry(0x00328, 0x00119),CompEntry(0x0032d, 0x01e19),CompEntry(0x00330, 0x01e1b),CompEntry(0x00307, 0x01e1f),CompEntry(0x00301, 0x001f5),CompEntry(0x00302, 0x0011d),CompEntry(0x00304, 0x01e21),CompEntry(0x00306, 0x0011f),CompEntry(0x00307, 0x00121),CompEntry(0x0030c, 0x001e7),CompEntry(0x00327, 0x00123),CompEntry(0x00302, 0x00125),CompEntry(0x00307, 0x01e23),CompEntry(0x00308, 0x01e27),CompEntry(0x0030c, 0x0021f),CompEntry(0x00323, 0x01e25),CompEntry(0x00327, 0x01e29),CompEntry(0x0032e, 0x01e2b),CompEntry(0x00331, 0x01e96),CompEntry(0x00300, 0x000ec),CompEntry(0x00301, 0x000ed),CompEntry(0x00302, 0x000ee),CompEntry(0x00303, 0x00129),CompEntry(0x00304, 0x0012b),CompEntry(0x00306, 0x0012d),CompEntry(0x00308, 0x000ef),CompEntry(0x00309, 0x01ec9),CompEntry(0x0030c, 0x001d0),CompEntry(0x0030f, 0x00209),CompEntry(0x00311, 0x0020b),CompEntry(0x00323, 0x01ecb),CompEntry(0x00328, 0x0012f),CompEntry(0x00330, 0x01e2d),CompEntry(0x00302, 0x00135),CompEntry(0x0030c, 0x001f0),CompEntry(0x00301, 0x01e31),CompEntry(0x0030c, 0x001e9),CompEntry(0x00323, 0x01e33),CompEntry(0x00327, 0x00137),CompEntry(0x00331, 0x01e35),CompEntry(0x00301, 0x0013a),CompEntry(0x0030c, 0x0013e),CompEntry(0x00323, 0x01e37),CompEntry(0x00327, 0x0013c),CompEntry(0x0032d, 0x01e3d),CompEntry(0x00331, 0x01e3b),CompEntry(0x00301, 0x01e3f),CompEntry(0x00307, 0x01e41),CompEntry(0x00323, 0x01e43),CompEntry(0x00300, 0x001f9),CompEntry(0x00301, 0x00144),CompEntry(0x00303, 0x000f1),CompEntry(0x00307, 0x01e45),CompEntry(0x0030c, 0x00148),CompEntry(0x00323, 0x01e47),CompEntry(0x00327, 0x00146),CompEntry(0x0032d, 0x01e4b),CompEntry(0x00331, 0x01e49),CompEntry(0x00300, 0x000f2),CompEntry(0x00301, 0x000f3),CompEntry(0x00302, 0x000f4),CompEntry(0x00303, 0x000f5),CompEntry(0x00304, 0x0014d),CompEntry(0x00306, 0x0014f),CompEntry(0x00307, 0x0022f),CompEntry(0x00308, 0x000f6),CompEntry(0x00309, 0x01ecf),CompEntry(0x0030b, 0x00151),CompEntry(0x0030c, 0x001d2),CompEntry(0x0030f, 0x0020d),CompEntry(0x00311, 0x0020f),CompEntry(0x0031b, 0x001a1),CompEntry(0x00323, 0x01ecd),CompEntry(0x00328, 0x001eb),CompEntry(0x00301, 0x01e55),CompEntry(0x00307, 0x01e57),CompEntry(0x00301, 0x00155),CompEntry(0x00307, 0x01e59),CompEntry(0x0030c, 0x00159),CompEntry(0x0030f, 0x00211),CompEntry(0x00311, 0x00213),CompEntry(0x00323, 0x01e5b),CompEntry(0x00327, 0x00157),CompEntry(0x00331, 0x01e5f),CompEntry(0x00301, 0x0015b),CompEntry(0x00302, 0x0015d),CompEntry(0x00307, 0x01e61),CompEntry(0x0030c, 0x00161),CompEntry(0x00323, 0x01e63),CompEntry(0x00326, 0x00219),CompEntry(0x00327, 0x0015f),CompEntry(0x00307, 0x01e6b),CompEntry(0x00308, 0x01e97),CompEntry(0x0030c, 0x00165),CompEntry(0x00323, 0x01e6d),CompEntry(0x00326, 0x0021b),CompEntry(0x00327, 0x00163),CompEntry(0x0032d, 0x01e71),CompEntry(0x00331, 0x01e6f),CompEntry(0x00300, 0x000f9),CompEntry(0x00301, 0x000fa),CompEntry(0x00302, 0x000fb),CompEntry(0x00303, 0x00169),CompEntry(0x00304, 0x0016b),CompEntry(0x00306, 0x0016d),CompEntry(0x00308, 0x000fc),CompEntry(0x00309, 0x01ee7),CompEntry(0x0030a, 0x0016f),CompEntry(0x0030b, 0x00171),CompEntry(0x0030c, 0x001d4),CompEntry(0x0030f, 0x00215),CompEntry(0x00311, 0x00217),CompEntry(0x0031b, 0x001b0),CompEntry(0x00323, 0x01ee5),CompEntry(0x00324, 0x01e73),CompEntry(0x00328, 0x00173),CompEntry(0x0032d, 0x01e77),CompEntry(0x00330, 0x01e75),CompEntry(0x00303, 0x01e7d),CompEntry(0x00323, 0x01e7f),CompEntry(0x00300, 0x01e81),CompEntry(0x00301, 0x01e83),CompEntry(0x00302, 0x00175),CompEntry(0x00307, 0x01e87),CompEntry(0x00308, 0x01e85),CompEntry(0x0030a, 0x01e98),CompEntry(0x00323, 0x01e89),CompEntry(0x00307, 0x01e8b),CompEntry(0x00308, 0x01e8d),CompEntry(0x00300, 0x01ef3),CompEntry(0x00301, 0x000fd),CompEntry(0x00302, 0x00177),CompEntry(0x00303, 0x01ef9),CompEntry(0x00304, 0x00233),CompEntry(0x00307, 0x01e8f),CompEntry(0x00308, 0x000ff),CompEntry(0x00309, 0x01ef7),CompEntry(0x0030a, 0x01e99),CompEntry(0x00323, 0x01ef5),CompEntry(0x00301, 0x0017a),CompEntry(0x00302, 0x01e91),CompEntry(0x00307, 0x0017c),CompEntry(0x0030c, 0x0017e),CompEntry(0x00323, 0x01e93),CompEntry(0x00331, 0x01e95),CompEntry(0x00300, 0x01fed),CompEntry(0x00301, 0x00385),CompEntry(0x00342, 0x01fc1),CompEntry(0x00300, 0x01ea6),CompEntry(0x00301, 0x01ea4),CompEntry(0x00303, 0x01eaa),CompEntry(0x00309, 0x01ea8),CompEntry(0x00304, 0x001de),CompEntry(0x00301, 0x001fa),CompEntry(0x00301, 0x001fc),CompEntry(0x00304, 0x001e2),CompEntry(0x00301, 0x01e08),CompEntry(0x00300, 0x01ec0),CompEntry(0x00301, 0x01ebe),CompEntry(0x00303, 0x01ec4),CompEntry(0x00309, 0x01ec2),CompEntry(0x00301, 0x01e2e),CompEntry(0x00300, 0x01ed2),CompEntry(0x00301, 0x01ed0),CompEntry(0x00303, 0x01ed6),CompEntry(0x00309, 0x01ed4),CompEntry(0x00301, 0x01e4c),CompEntry(0x00304, 0x0022c),CompEntry(0x00308, 0x01e4e),CompEntry(0x00304, 0x0022a),CompEntry(0x00301, 0x001fe),CompEntry(0x00300, 0x001db),CompEntry(0x00301, 0x001d7),CompEntry(0x00304, 0x001d5),CompEntry(0x0030c, 0x001d9),CompEntry(0x00300, 0x01ea7),CompEntry(0x00301, 0x01ea5),CompEntry(0x00303, 0x01eab),CompEntry(0x00309, 0x01ea9),CompEntry(0x00304, 0x001df),CompEntry(0x00301, 0x001fb),CompEntry(0x00301, 0x001fd),CompEntry(0x00304, 0x001e3),CompEntry(0x00301, 0x01e09),CompEntry(0x00300, 0x01ec1),CompEntry(0x00301, 0x01ebf),CompEntry(0x00303, 0x01ec5),CompEntry(0x00309, 0x01ec3),CompEntry(0x00301, 0x01e2f),CompEntry(0x00300, 0x01ed3),CompEntry(0x00301, 0x01ed1),CompEntry(0x00303, 0x01ed7),CompEntry(0x00309, 0x01ed5),CompEntry(0x00301, 0x01e4d),CompEntry(0x00304, 0x0022d),CompEntry(0x00308, 0x01e4f),CompEntry(0x00304, 0x0022b),CompEntry(0x00301, 0x001ff),CompEntry(0x00300, 0x001dc),CompEntry(0x00301, 0x001d8),CompEntry(0x00304, 0x001d6),CompEntry(0x0030c, 0x001da),CompEntry(0x00300, 0x01eb0),CompEntry(0x00301, 0x01eae),CompEntry(0x00303, 0x01eb4),CompEntry(0x00309, 0x01eb2),CompEntry(0x00300, 0x01eb1),CompEntry(0x00301, 0x01eaf),CompEntry(0x00303, 0x01eb5),CompEntry(0x00309, 0x01eb3),CompEntry(0x00300, 0x01e14),CompEntry(0x00301, 0x01e16),CompEntry(0x00300, 0x01e15),CompEntry(0x00301, 0x01e17),CompEntry(0x00300, 0x01e50),CompEntry(0x00301, 0x01e52),CompEntry(0x00300, 0x01e51),CompEntry(0x00301, 0x01e53),CompEntry(0x00307, 0x01e64),CompEntry(0x00307, 0x01e65),CompEntry(0x00307, 0x01e66),CompEntry(0x00307, 0x01e67),CompEntry(0x00301, 0x01e78),CompEntry(0x00301, 0x01e79),CompEntry(0x00308, 0x01e7a),CompEntry(0x00308, 0x01e7b),CompEntry(0x00307, 0x01e9b),CompEntry(0x00300, 0x01edc),CompEntry(0x00301, 0x01eda),CompEntry(0x00303, 0x01ee0),CompEntry(0x00309, 0x01ede),CompEntry(0x00323, 0x01ee2),CompEntry(0x00300, 0x01edd),CompEntry(0x00301, 0x01edb),CompEntry(0x00303, 0x01ee1),CompEntry(0x00309, 0x01edf),CompEntry(0x00323, 0x01ee3),CompEntry(0x00300, 0x01eea),CompEntry(0x00301, 0x01ee8),CompEntry(0x00303, 0x01eee),CompEntry(0x00309, 0x01eec),CompEntry(0x00323, 0x01ef0),CompEntry(0x00300, 0x01eeb),CompEntry(0x00301, 0x01ee9),CompEntry(0x00303, 0x01eef),CompEntry(0x00309, 0x01eed),CompEntry(0x00323, 0x01ef1),CompEntry(0x0030c, 0x001ee),CompEntry(0x00304, 0x001ec),CompEntry(0x00304, 0x001ed),CompEntry(0x00304, 0x001e0),CompEntry(0x00304, 0x001e1),CompEntry(0x00306, 0x01e1c),CompEntry(0x00306, 0x01e1d),CompEntry(0x00304, 0x00230),CompEntry(0x00304, 0x00231),CompEntry(0x0030c, 0x001ef),CompEntry(0x00300, 0x01fba),CompEntry(0x00301, 0x00386),CompEntry(0x00304, 0x01fb9),CompEntry(0x00306, 0x01fb8),CompEntry(0x00313, 0x01f08),CompEntry(0x00314, 0x01f09),CompEntry(0x00345, 0x01fbc),CompEntry(0x00300, 0x01fc8),CompEntry(0x00301, 0x00388),CompEntry(0x00313, 0x01f18),CompEntry(0x00314, 0x01f19),CompEntry(0x00300, 0x01fca),CompEntry(0x00301, 0x00389),CompEntry(0x00313, 0x01f28),CompEntry(0x00314, 0x01f29),CompEntry(0x00345, 0x01fcc),CompEntry(0x00300, 0x01fda),CompEntry(0x00301, 0x0038a),CompEntry(0x00304, 0x01fd9),CompEntry(0x00306, 0x01fd8),CompEntry(0x00308, 0x003aa),CompEntry(0x00313, 0x01f38),CompEntry(0x00314, 0x01f39),CompEntry(0x00300, 0x01ff8),CompEntry(0x00301, 0x0038c),CompEntry(0x00313, 0x01f48),CompEntry(0x00314, 0x01f49),CompEntry(0x00314, 0x01fec),CompEntry(0x00300, 0x01fea),CompEntry(0x00301, 0x0038e),CompEntry(0x00304, 0x01fe9),CompEntry(0x00306, 0x01fe8),CompEntry(0x00308, 0x003ab),CompEntry(0x00314, 0x01f59),CompEntry(0x00300, 0x01ffa),CompEntry(0x00301, 0x0038f),CompEntry(0x00313, 0x01f68),CompEntry(0x00314, 0x01f69),CompEntry(0x00345, 0x01ffc),CompEntry(0x00345, 0x01fb4),CompEntry(0x00345, 0x01fc4),CompEntry(0x00300, 0x01f70),CompEntry(0x00301, 0x003ac),CompEntry(0x00304, 0x01fb1),CompEntry(0x00306, 0x01fb0),CompEntry(0x00313, 0x01f00),CompEntry(0x00314, 0x01f01),CompEntry(0x00342, 0x01fb6),CompEntry(0x00345, 0x01fb3),CompEntry(0x00300, 0x01f72),CompEntry(0x00301, 0x003ad),CompEntry(0x00313, 0x01f10),CompEntry(0x00314, 0x01f11),CompEntry(0x00300, 0x01f74),CompEntry(0x00301, 0x003ae),CompEntry(0x00313, 0x01f20),CompEntry(0x00314, 0x01f21),CompEntry(0x00342, 0x01fc6),CompEntry(0x00345, 0x01fc3),CompEntry(0x00300, 0x01f76),CompEntry(0x00301, 0x003af),CompEntry(0x00304, 0x01fd1),CompEntry(0x00306, 0x01fd0),CompEntry(0x00308, 0x003ca),CompEntry(0x00313, 0x01f30),CompEntry(0x00314, 0x01f31),CompEntry(0x00342, 0x01fd6),CompEntry(0x00300, 0x01f78),CompEntry(0x00301, 0x003cc),CompEntry(0x00313, 0x01f40),CompEntry(0x00314, 0x01f41),CompEntry(0x00313, 0x01fe4),CompEntry(0x00314, 0x01fe5),CompEntry(0x00300, 0x01f7a),CompEntry(0x00301, 0x003cd),CompEntry(0x00304, 0x01fe1),CompEntry(0x00306, 0x01fe0),CompEntry(0x00308, 0x003cb),CompEntry(0x00313, 0x01f50),CompEntry(0x00314, 0x01f51),CompEntry(0x00342, 0x01fe6),CompEntry(0x00300, 0x01f7c),CompEntry(0x00301, 0x003ce),CompEntry(0x00313, 0x01f60),CompEntry(0x00314, 0x01f61),CompEntry(0x00342, 0x01ff6),CompEntry(0x00345, 0x01ff3),CompEntry(0x00300, 0x01fd2),CompEntry(0x00301, 0x00390),CompEntry(0x00342, 0x01fd7),CompEntry(0x00300, 0x01fe2),CompEntry(0x00301, 0x003b0),CompEntry(0x00342, 0x01fe7),CompEntry(0x00345, 0x01ff4),CompEntry(0x00301, 0x003d3),CompEntry(0x00308, 0x003d4),CompEntry(0x00308, 0x00407),CompEntry(0x00306, 0x004d0),CompEntry(0x00308, 0x004d2),CompEntry(0x00301, 0x00403),CompEntry(0x00300, 0x00400),CompEntry(0x00306, 0x004d6),CompEntry(0x00308, 0x00401),CompEntry(0x00306, 0x004c1),CompEntry(0x00308, 0x004dc),CompEntry(0x00308, 0x004de),CompEntry(0x00300, 0x0040d),CompEntry(0x00304, 0x004e2),CompEntry(0x00306, 0x00419),CompEntry(0x00308, 0x004e4),CompEntry(0x00301, 0x0040c),CompEntry(0x00308, 0x004e6),CompEntry(0x00304, 0x004ee),CompEntry(0x00306, 0x0040e),CompEntry(0x00308, 0x004f0),CompEntry(0x0030b, 0x004f2),CompEntry(0x00308, 0x004f4),CompEntry(0x00308, 0x004f8),CompEntry(0x00308, 0x004ec),CompEntry(0x00306, 0x004d1),CompEntry(0x00308, 0x004d3),CompEntry(0x00301, 0x00453),CompEntry(0x00300, 0x00450),CompEntry(0x00306, 0x004d7),CompEntry(0x00308, 0x00451),CompEntry(0x00306, 0x004c2),CompEntry(0x00308, 0x004dd),CompEntry(0x00308, 0x004df),CompEntry(0x00300, 0x0045d),CompEntry(0x00304, 0x004e3),CompEntry(0x00306, 0x00439),CompEntry(0x00308, 0x004e5),CompEntry(0x00301, 0x0045c),CompEntry(0x00308, 0x004e7),CompEntry(0x00304, 0x004ef),CompEntry(0x00306, 0x0045e),CompEntry(0x00308, 0x004f1),CompEntry(0x0030b, 0x004f3),CompEntry(0x00308, 0x004f5),CompEntry(0x00308, 0x004f9),CompEntry(0x00308, 0x004ed),CompEntry(0x00308, 0x00457),CompEntry(0x0030f, 0x00476),CompEntry(0x0030f, 0x00477),CompEntry(0x00308, 0x004da),CompEntry(0x00308, 0x004db),CompEntry(0x00308, 0x004ea),CompEntry(0x00308, 0x004eb),CompEntry(0x00653, 0x00622),CompEntry(0x00654, 0x00623),CompEntry(0x00655, 0x00625),CompEntry(0x00654, 0x00624),CompEntry(0x00654, 0x00626),CompEntry(0x00654, 0x006c2),CompEntry(0x00654, 0x006d3),CompEntry(0x00654, 0x006c0),CompEntry(0x0093c, 0x00929),CompEntry(0x0093c, 0x00931),CompEntry(0x0093c, 0x00934),CompEntry(0x009be, 0x009cb),CompEntry(0x009d7, 0x009cc),CompEntry(0x00b3e, 0x00b4b),CompEntry(0x00b56, 0x00b48),CompEntry(0x00b57, 0x00b4c),CompEntry(0x00bd7, 0x00b94),CompEntry(0x00bbe, 0x00bca),CompEntry(0x00bd7, 0x00bcc),CompEntry(0x00bbe, 0x00bcb),CompEntry(0x00c56, 0x00c48),CompEntry(0x00cd5, 0x00cc0),CompEntry(0x00cc2, 0x00cca),CompEntry(0x00cd5, 0x00cc7),CompEntry(0x00cd6, 0x00cc8),CompEntry(0x00cd5, 0x00ccb),CompEntry(0x00d3e, 0x00d4a),CompEntry(0x00d57, 0x00d4c),CompEntry(0x00d3e, 0x00d4b),CompEntry(0x00dca, 0x00dda),CompEntry(0x00dcf, 0x00ddc),CompEntry(0x00ddf, 0x00dde),CompEntry(0x00dca, 0x00ddd),CompEntry(0x0102e, 0x01026),CompEntry(0x01b35, 0x01b06),CompEntry(0x01b35, 0x01b08),CompEntry(0x01b35, 0x01b0a),CompEntry(0x01b35, 0x01b0c),CompEntry(0x01b35, 0x01b0e),CompEntry(0x01b35, 0x01b12),CompEntry(0x01b35, 0x01b3b),CompEntry(0x01b35, 0x01b3d),CompEntry(0x01b35, 0x01b40),CompEntry(0x01b35, 0x01b41),CompEntry(0x01b35, 0x01b43),CompEntry(0x00304, 0x01e38),CompEntry(0x00304, 0x01e39),CompEntry(0x00304, 0x01e5c),CompEntry(0x00304, 0x01e5d),CompEntry(0x00307, 0x01e68),CompEntry(0x00307, 0x01e69),CompEntry(0x00302, 0x01eac),CompEntry(0x00306, 0x01eb6),CompEntry(0x00302, 0x01ead),CompEntry(0x00306, 0x01eb7),CompEntry(0x00302, 0x01ec6),CompEntry(0x00302, 0x01ec7),CompEntry(0x00302, 0x01ed8),CompEntry(0x00302, 0x01ed9),CompEntry(0x00300, 0x01f02),CompEntry(0x00301, 0x01f04),CompEntry(0x00342, 0x01f06),CompEntry(0x00345, 0x01f80),CompEntry(0x00300, 0x01f03),CompEntry(0x00301, 0x01f05),CompEntry(0x00342, 0x01f07),CompEntry(0x00345, 0x01f81),CompEntry(0x00345, 0x01f82),CompEntry(0x00345, 0x01f83),CompEntry(0x00345, 0x01f84),CompEntry(0x00345, 0x01f85),CompEntry(0x00345, 0x01f86),CompEntry(0x00345, 0x01f87),CompEntry(0x00300, 0x01f0a),CompEntry(0x00301, 0x01f0c),CompEntry(0x00342, 0x01f0e),CompEntry(0x00345, 0x01f88),CompEntry(0x00300, 0x01f0b),CompEntry(0x00301, 0x01f0d),CompEntry(0x00342, 0x01f0f),CompEntry(0x00345, 0x01f89),CompEntry(0x00345, 0x01f8a),CompEntry(0x00345, 0x01f8b),CompEntry(0x00345, 0x01f8c),CompEntry(0x00345, 0x01f8d),CompEntry(0x00345, 0x01f8e),CompEntry(0x00345, 0x01f8f),CompEntry(0x00300, 0x01f12),CompEntry(0x00301, 0x01f14),CompEntry(0x00300, 0x01f13),CompEntry(0x00301, 0x01f15),CompEntry(0x00300, 0x01f1a),CompEntry(0x00301, 0x01f1c),CompEntry(0x00300, 0x01f1b),CompEntry(0x00301, 0x01f1d),CompEntry(0x00300, 0x01f22),CompEntry(0x00301, 0x01f24),CompEntry(0x00342, 0x01f26),CompEntry(0x00345, 0x01f90),CompEntry(0x00300, 0x01f23),CompEntry(0x00301, 0x01f25),CompEntry(0x00342, 0x01f27),CompEntry(0x00345, 0x01f91),CompEntry(0x00345, 0x01f92),CompEntry(0x00345, 0x01f93),CompEntry(0x00345, 0x01f94),CompEntry(0x00345, 0x01f95),CompEntry(0x00345, 0x01f96),CompEntry(0x00345, 0x01f97),CompEntry(0x00300, 0x01f2a),CompEntry(0x00301, 0x01f2c),CompEntry(0x00342, 0x01f2e),CompEntry(0x00345, 0x01f98),CompEntry(0x00300, 0x01f2b),CompEntry(0x00301, 0x01f2d),CompEntry(0x00342, 0x01f2f),CompEntry(0x00345, 0x01f99),CompEntry(0x00345, 0x01f9a),CompEntry(0x00345, 0x01f9b),CompEntry(0x00345, 0x01f9c),CompEntry(0x00345, 0x01f9d),CompEntry(0x00345, 0x01f9e),CompEntry(0x00345, 0x01f9f),CompEntry(0x00300, 0x01f32),CompEntry(0x00301, 0x01f34),CompEntry(0x00342, 0x01f36),CompEntry(0x00300, 0x01f33),CompEntry(0x00301, 0x01f35),CompEntry(0x00342, 0x01f37),CompEntry(0x00300, 0x01f3a),CompEntry(0x00301, 0x01f3c),CompEntry(0x00342, 0x01f3e),CompEntry(0x00300, 0x01f3b),CompEntry(0x00301, 0x01f3d),CompEntry(0x00342, 0x01f3f),CompEntry(0x00300, 0x01f42),CompEntry(0x00301, 0x01f44),CompEntry(0x00300, 0x01f43),CompEntry(0x00301, 0x01f45),CompEntry(0x00300, 0x01f4a),CompEntry(0x00301, 0x01f4c),CompEntry(0x00300, 0x01f4b),CompEntry(0x00301, 0x01f4d),CompEntry(0x00300, 0x01f52),CompEntry(0x00301, 0x01f54),CompEntry(0x00342, 0x01f56),CompEntry(0x00300, 0x01f53),CompEntry(0x00301, 0x01f55),CompEntry(0x00342, 0x01f57),CompEntry(0x00300, 0x01f5b),CompEntry(0x00301, 0x01f5d),CompEntry(0x00342, 0x01f5f),CompEntry(0x00300, 0x01f62),CompEntry(0x00301, 0x01f64),CompEntry(0x00342, 0x01f66),CompEntry(0x00345, 0x01fa0),CompEntry(0x00300, 0x01f63),CompEntry(0x00301, 0x01f65),CompEntry(0x00342, 0x01f67),CompEntry(0x00345, 0x01fa1),CompEntry(0x00345, 0x01fa2),CompEntry(0x00345, 0x01fa3),CompEntry(0x00345, 0x01fa4),CompEntry(0x00345, 0x01fa5),CompEntry(0x00345, 0x01fa6),CompEntry(0x00345, 0x01fa7),CompEntry(0x00300, 0x01f6a),CompEntry(0x00301, 0x01f6c),CompEntry(0x00342, 0x01f6e),CompEntry(0x00345, 0x01fa8),CompEntry(0x00300, 0x01f6b),CompEntry(0x00301, 0x01f6d),CompEntry(0x00342, 0x01f6f),CompEntry(0x00345, 0x01fa9),CompEntry(0x00345, 0x01faa),CompEntry(0x00345, 0x01fab),CompEntry(0x00345, 0x01fac),CompEntry(0x00345, 0x01fad),CompEntry(0x00345, 0x01fae),CompEntry(0x00345, 0x01faf),CompEntry(0x00345, 0x01fb2),CompEntry(0x00345, 0x01fc2),CompEntry(0x00345, 0x01ff2),CompEntry(0x00345, 0x01fb7),CompEntry(0x00300, 0x01fcd),CompEntry(0x00301, 0x01fce),CompEntry(0x00342, 0x01fcf),CompEntry(0x00345, 0x01fc7),CompEntry(0x00345, 0x01ff7),CompEntry(0x00300, 0x01fdd),CompEntry(0x00301, 0x01fde),CompEntry(0x00342, 0x01fdf),CompEntry(0x00338, 0x0219a),CompEntry(0x00338, 0x0219b),CompEntry(0x00338, 0x021ae),CompEntry(0x00338, 0x021cd),CompEntry(0x00338, 0x021cf),CompEntry(0x00338, 0x021ce),CompEntry(0x00338, 0x02204),CompEntry(0x00338, 0x02209),CompEntry(0x00338, 0x0220c),CompEntry(0x00338, 0x02224),CompEntry(0x00338, 0x02226),CompEntry(0x00338, 0x02241),CompEntry(0x00338, 0x02244),CompEntry(0x00338, 0x02247),CompEntry(0x00338, 0x02249),CompEntry(0x00338, 0x0226d),CompEntry(0x00338, 0x02262),CompEntry(0x00338, 0x02270),CompEntry(0x00338, 0x02271),CompEntry(0x00338, 0x02274),CompEntry(0x00338, 0x02275),CompEntry(0x00338, 0x02278),CompEntry(0x00338, 0x02279),CompEntry(0x00338, 0x02280),CompEntry(0x00338, 0x02281),CompEntry(0x00338, 0x022e0),CompEntry(0x00338, 0x022e1),CompEntry(0x00338, 0x02284),CompEntry(0x00338, 0x02285),CompEntry(0x00338, 0x02288),CompEntry(0x00338, 0x02289),CompEntry(0x00338, 0x022e2),CompEntry(0x00338, 0x022e3),CompEntry(0x00338, 0x022ac),CompEntry(0x00338, 0x022ad),CompEntry(0x00338, 0x022ae),CompEntry(0x00338, 0x022af),CompEntry(0x00338, 0x022ea),CompEntry(0x00338, 0x022eb),CompEntry(0x00338, 0x022ec),CompEntry(0x00338, 0x022ed),CompEntry(0x03099, 0x03094),CompEntry(0x03099, 0x0304c),CompEntry(0x03099, 0x0304e),CompEntry(0x03099, 0x03050),CompEntry(0x03099, 0x03052),CompEntry(0x03099, 0x03054),CompEntry(0x03099, 0x03056),CompEntry(0x03099, 0x03058),CompEntry(0x03099, 0x0305a),CompEntry(0x03099, 0x0305c),CompEntry(0x03099, 0x0305e),CompEntry(0x03099, 0x03060),CompEntry(0x03099, 0x03062),CompEntry(0x03099, 0x03065),CompEntry(0x03099, 0x03067),CompEntry(0x03099, 0x03069),CompEntry(0x03099, 0x03070),CompEntry(0x0309a, 0x03071),CompEntry(0x03099, 0x03073),CompEntry(0x0309a, 0x03074),CompEntry(0x03099, 0x03076),CompEntry(0x0309a, 0x03077),CompEntry(0x03099, 0x03079),CompEntry(0x0309a, 0x0307a),CompEntry(0x03099, 0x0307c),CompEntry(0x0309a, 0x0307d),CompEntry(0x03099, 0x0309e),CompEntry(0x03099, 0x030f4),CompEntry(0x03099, 0x030ac),CompEntry(0x03099, 0x030ae),CompEntry(0x03099, 0x030b0),CompEntry(0x03099, 0x030b2),CompEntry(0x03099, 0x030b4),CompEntry(0x03099, 0x030b6),CompEntry(0x03099, 0x030b8),CompEntry(0x03099, 0x030ba),CompEntry(0x03099, 0x030bc),CompEntry(0x03099, 0x030be),CompEntry(0x03099, 0x030c0),CompEntry(0x03099, 0x030c2),CompEntry(0x03099, 0x030c5),CompEntry(0x03099, 0x030c7),CompEntry(0x03099, 0x030c9),CompEntry(0x03099, 0x030d0),CompEntry(0x0309a, 0x030d1),CompEntry(0x03099, 0x030d3),CompEntry(0x0309a, 0x030d4),CompEntry(0x03099, 0x030d6),CompEntry(0x0309a, 0x030d7),CompEntry(0x03099, 0x030d9),CompEntry(0x0309a, 0x030da),CompEntry(0x03099, 0x030dc),CompEntry(0x0309a, 0x030dd),CompEntry(0x03099, 0x030f7),CompEntry(0x03099, 0x030f8),CompEntry(0x03099, 0x030f9),CompEntry(0x03099, 0x030fa),CompEntry(0x03099, 0x030fe),CompEntry(0x110ba, 0x1109a),CompEntry(0x110ba, 0x1109c),CompEntry(0x110ba, 0x110ab),CompEntry(0x11127, 0x1112e),CompEntry(0x11127, 0x1112f),];

    }
}
